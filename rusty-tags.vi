!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
ANOTHER_VERY_LONG_STRING	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/builtin/normals_material.rs	/^const ANOTHER_VERY_LONG_STRING: &'static str =$/;"	c
ANOTHER_VERY_LONG_STRING	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/builtin/object_material.rs	/^const ANOTHER_VERY_LONG_STRING: &'static str =$/;"	c
ANOTHER_VERY_LONG_STRING	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/builtin/uvs_material.rs	/^const ANOTHER_VERY_LONG_STRING: &'static str =$/;"	c
ANOTHER_VERY_LONG_STRING	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/line_renderer.rs	/^const ANOTHER_VERY_LONG_STRING: &'static str =$/;"	c
ANOTHER_VERY_LONG_STRING	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/point_renderer.rs	/^const ANOTHER_VERY_LONG_STRING: &'static str =$/;"	c
ANOTHER_VERY_LONG_STRING	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/text/renderer.rs	/^const ANOTHER_VERY_LONG_STRING: &'static str =$/;"	c
AVIO_FLAG_WRITE	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/tools/kiss3d_recording.rs	/^                static AVIO_FLAG_WRITE: i32 = 2; \/\/ XXX: this should be defined by the bindings.$/;"	c
A_VERY_LONG_STRING	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/builtin/normals_material.rs	/^const A_VERY_LONG_STRING: &'static str =$/;"	c
A_VERY_LONG_STRING	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/builtin/object_material.rs	/^const A_VERY_LONG_STRING: &'static str =$/;"	c
A_VERY_LONG_STRING	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/builtin/uvs_material.rs	/^const A_VERY_LONG_STRING: &'static str =$/;"	c
A_VERY_LONG_STRING	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/line_renderer.rs	/^const A_VERY_LONG_STRING: &'static str =$/;"	c
A_VERY_LONG_STRING	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/point_renderer.rs	/^const A_VERY_LONG_STRING: &'static str =$/;"	c
A_VERY_LONG_STRING	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/text/renderer.rs	/^const A_VERY_LONG_STRING: &'static str =$/;"	c
Abomonation for Isometry	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry.rs	/^impl<N, D, R> Abomonation for Isometry<N, D, R>$/;"	i
Abomonation for Matrix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^impl<N: Scalar, R: Dim, C: Dim, S: Abomonation> Abomonation for Matrix<N, R, C, S> {$/;"	i
Abomonation for MatrixArray	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^impl<N, R, C> Abomonation for MatrixArray<N, R, C>$/;"	i
Abomonation for MatrixVec	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_vec.rs	/^impl<N: Abomonation, R: Dim, C: Dim> Abomonation for MatrixVec<N, R, C> {$/;"	i
Abomonation for Point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^impl<N, D> Abomonation for Point<N, D>$/;"	i
Abomonation for Quaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^impl<N: Real> Abomonation for Quaternion<N>$/;"	i
Abomonation for Rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation.rs	/^impl<N, D> Abomonation for Rotation<N, D>$/;"	i
Abomonation for Similarity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity.rs	/^impl<N: Real, D: DimName, R> Abomonation for Similarity<N, D, R>$/;"	i
Abomonation for Translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation.rs	/^impl<N, D> Abomonation for Translation<N, D>$/;"	i
Abomonation for Unit	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/unit.rs	/^impl<T: Abomonation> Abomonation for Unit<T> {$/;"	i
AbstractField	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/two_operators.rs	/^pub trait AbstractField<A: Operator = Additive, M: Operator = Multiplicative>$/;"	t
AbstractField for Complex	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/two_operators.rs	/^impl<N: Num + Clone + ClosedNeg + AbstractField> AbstractField for Complex<N> {}$/;"	i
AbstractGroup	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/one_operator.rs	/^pub trait AbstractGroup<O: Operator>: AbstractLoop<O> + AbstractMonoid<O> {}$/;"	t
AbstractGroup for Id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^impl<O: Operator> AbstractGroup<O> for Id<O> {}$/;"	i
AbstractGroupAbelian	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/one_operator.rs	/^pub trait AbstractGroupAbelian<O: Operator>: AbstractGroup<O> {$/;"	t
AbstractGroupAbelian for Id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^impl<O: Operator> AbstractGroupAbelian<O> for Id<O> {}$/;"	i
AbstractLoop	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/one_operator.rs	/^pub trait AbstractLoop<O: Operator>: AbstractQuasigroup<O> + Identity<O> {}$/;"	t
AbstractLoop for Id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^impl<O: Operator> AbstractLoop<O> for Id<O> {}$/;"	i
AbstractMagma	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/one_operator.rs	/^pub trait AbstractMagma<O: Operator>: Sized + Clone {$/;"	t
AbstractMagma for Complex	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/one_operator.rs	/^impl<N: Num + Clone> AbstractMagma<Multiplicative> for Complex<N> {$/;"	i
AbstractMagma for Id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^impl<O: Operator> AbstractMagma<O> for Id<O> {$/;"	i
AbstractMagma for Isometry	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_alga.rs	/^impl<N: Real, D: DimName, R> AbstractMagma<Multiplicative> for Isometry<N, D, R>$/;"	i
AbstractMagma for MatrixMN	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^impl<N, R: DimName, C: DimName> AbstractMagma<Additive> for MatrixMN<N, R, C>$/;"	i
AbstractMagma for MatrixN	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^impl<N, D: DimName> AbstractMagma<Multiplicative> for MatrixN<N, D>$/;"	i
AbstractMagma for Quaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^impl<N: Real> AbstractMagma<Additive> for Quaternion<N> {$/;"	i
AbstractMagma for Quaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^impl<N: Real> AbstractMagma<Multiplicative> for Quaternion<N> {$/;"	i
AbstractMagma for Rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^impl<N: Real, D: DimName> AbstractMagma<Multiplicative> for Rotation<N, D>$/;"	i
AbstractMagma for Similarity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_alga.rs	/^impl<N: Real, D: DimName, R> AbstractMagma<Multiplicative> for Similarity<N, D, R>$/;"	i
AbstractMagma for Translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_alga.rs	/^impl<N: Real, D: DimName> AbstractMagma<Multiplicative> for Translation<N, D>$/;"	i
AbstractMagma for UnitComplex	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_alga.rs	/^impl<N: Real> AbstractMagma<Multiplicative> for UnitComplex<N> {$/;"	i
AbstractMagma for UnitQuaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^impl<N: Real> AbstractMagma<Multiplicative> for UnitQuaternion<N> {$/;"	i
AbstractModule	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/module.rs	/^pub trait AbstractModule<$/;"	t
AbstractModule for MatrixMN	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^impl<N, R: DimName, C: DimName> AbstractModule for MatrixMN<N, R, C>$/;"	i
AbstractModule for Quaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^impl<N: Real> AbstractModule for Quaternion<N> {$/;"	i
AbstractMonoid	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/one_operator.rs	/^pub trait AbstractMonoid<O: Operator>: AbstractSemigroup<O> + Identity<O> {$/;"	t
AbstractMonoid for Id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^impl<O: Operator> AbstractMonoid<O> for Id<O> {}$/;"	i
AbstractOperator	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/operator.rs	/^pub struct AbstractOperator;$/;"	s
AbstractQuasigroup	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/one_operator.rs	/^pub trait AbstractQuasigroup<O: Operator>$/;"	t
AbstractQuasigroup for Id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^impl<O: Operator> AbstractQuasigroup<O> for Id<O> {}$/;"	i
AbstractRing	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/module.rs	/^    type AbstractRing: AbstractRingCommutative<OpAdd, OpMul>;$/;"	T
AbstractRing	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/two_operators.rs	/^pub trait AbstractRing<A: Operator = Additive, M: Operator = Multiplicative>$/;"	t
AbstractRing	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^    type AbstractRing = N;$/;"	T
AbstractRing	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^    type AbstractRing = N;$/;"	T
AbstractRing for Complex	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/two_operators.rs	/^impl<N: Num + Clone + ClosedNeg + AbstractRing> AbstractRing for Complex<N> {}$/;"	i
AbstractRingCommutative	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/two_operators.rs	/^pub trait AbstractRingCommutative<A: Operator = Additive, M: Operator = Multiplicative>$/;"	t
AbstractRingCommutative for Complex	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/two_operators.rs	/^impl<N: Num + Clone + ClosedNeg + AbstractRingCommutative> AbstractRingCommutative for Complex<N> {}$/;"	i
AbstractSemigroup	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/one_operator.rs	/^pub trait AbstractSemigroup<O: Operator>: PartialEq + AbstractMagma<O> {$/;"	t
AbstractSemigroup for Id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^impl<O: Operator> AbstractSemigroup<O> for Id<O> {}$/;"	i
Add	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/wrapper.rs	/^impl<T, A: Operator, M> Add<Wrapper<T, A, M>> for Wrapper<T, A, M>$/;"	i
Add for Dynamic	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^impl Add<usize> for Dynamic {$/;"	i
Add for Id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^impl Add<Id> for Id {$/;"	i
AddAssign for Id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^impl AddAssign<Id> for Id {$/;"	i
Additive	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/operator.rs	/^pub struct Additive;$/;"	s
Affine2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform_alias.rs	/^pub type Affine2<N>     = Transform<N, U2, TAffine>;$/;"	T
Affine3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform_alias.rs	/^pub type Affine3<N>     = Transform<N, U3, TAffine>;$/;"	T
AffineSpace	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/vector.rs	/^pub trait AffineSpace$/;"	t
AffineSpace for Point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_alga.rs	/^impl<N: Scalar + Field, D: DimName> AffineSpace for Point<N, D>$/;"	i
AffineTransformation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^pub trait AffineTransformation<E: EuclideanSpace>: ProjectiveTransformation<E> {$/;"	t
AffineTransformation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_alga.rs	/^impl<N: Real, D: DimName, R> AffineTransformation<Point<N, D>> for Isometry<N, D, R>$/;"	i
AffineTransformation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^impl<N: Real> AffineTransformation<Point3<N>> for UnitQuaternion<N> {$/;"	i
AffineTransformation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^impl<N: Real, D: DimName> AffineTransformation<Point<N, D>> for Rotation<N, D>$/;"	i
AffineTransformation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_alga.rs	/^impl<N: Real, D: DimName, R> AffineTransformation<Point<N, D>> for Similarity<N, D, R>$/;"	i
AffineTransformation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_alga.rs	/^impl<N: Real, D: DimName> AffineTransformation<Point<N, D>> for Translation<N, D>$/;"	i
AffineTransformation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_alga.rs	/^impl<N: Real> AffineTransformation<Point2<N>> for UnitComplex<N>$/;"	i
AffineTransformation for Id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/id.rs	/^impl<E: EuclideanSpace> AffineTransformation<E> for Id {$/;"	i
AffineTransformation for R	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^impl<R, E> AffineTransformation<E> for R$/;"	i
AlgaSimilarity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_alga.rs	/^impl<N: Real, D: DimName, R> AlgaSimilarity<Point<N, D>> for Similarity<N, D, R>$/;"	i
AlgaTranslation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_alga.rs	/^impl<N: Real, D: DimName> AlgaTranslation<Point<N, D>> for Translation<N, D>$/;"	i
AllocationType	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gpu_vector.rs	/^impl AllocationType {$/;"	i
AllocationType	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gpu_vector.rs	/^pub enum AllocationType {$/;"	g
Allocator	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/allocator.rs	/^pub trait Allocator<N: Scalar, R: Dim, C: Dim = U1>: Any + Sized {$/;"	t
Allocator for DefaultAllocator	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/default_allocator.rs	/^impl<N, R, C> Allocator<N, R, C> for DefaultAllocator$/;"	i
Allocator for DefaultAllocator	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/default_allocator.rs	/^impl<N: Scalar, C: Dim> Allocator<N, Dynamic, C> for DefaultAllocator {$/;"	i
Allocator for DefaultAllocator	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/default_allocator.rs	/^impl<N: Scalar, R: DimName> Allocator<N, R, Dynamic> for DefaultAllocator {$/;"	i
ApproxEq for Id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^impl<O: Operator> ApproxEq for Id<O> {$/;"	i
ApproxEq for Isometry	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry.rs	/^impl<N: Real, D: DimName, R> ApproxEq for Isometry<N, D, R>$/;"	i
ApproxEq for Matrix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^impl<N, R: Dim, C: Dim, S> ApproxEq for Matrix<N, R, C, S>$/;"	i
ApproxEq for Point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^impl<N: Scalar + ApproxEq, D: DimName> ApproxEq for Point<N, D>$/;"	i
ApproxEq for Rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation.rs	/^impl<N, D: DimName> ApproxEq for Rotation<N, D>$/;"	i
ApproxEq for Similarity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity.rs	/^impl<N: Real, D: DimName, R> ApproxEq for Similarity<N, D, R>$/;"	i
ApproxEq for Translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation.rs	/^impl<N: Scalar + ApproxEq, D: DimName> ApproxEq for Translation<N, D>$/;"	i
ApproxEq for Unit	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^impl<N, R: Dim, C: Dim, S> ApproxEq for Unit<Matrix<N, R, C, S>>$/;"	i
ApproxEq for UnitComplex	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex.rs	/^impl<N: Real> ApproxEq for UnitComplex<N> {$/;"	i
ApproxEq for Wrapper	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/wrapper.rs	/^impl<T: ApproxEq, A, M> ApproxEq for Wrapper<T, A, M> {$/;"	i
Arbitrary for Isometry	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_construction.rs	/^impl<N, D: DimName, R> Arbitrary for Isometry<N, D, R>$/;"	i
Arbitrary for MatrixMN	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^impl<N, R, C> Arbitrary for MatrixMN<N, R, C>$/;"	i
Arbitrary for Orthographic3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/orthographic.rs	/^impl<N: Real + Arbitrary> Arbitrary for Orthographic3<N>$/;"	i
Arbitrary for Perspective3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/perspective.rs	/^impl<N: Real + Arbitrary> Arbitrary for Perspective3<N> {$/;"	i
Arbitrary for Point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_construction.rs	/^impl<N: Scalar + Arbitrary + Send, D: DimName> Arbitrary for Point<N, D>$/;"	i
Arbitrary for Quaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_construction.rs	/^impl<N: Real + Arbitrary> Arbitrary for Quaternion<N>$/;"	i
Arbitrary for RandomOrthogonal	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/debug/random_orthogonal.rs	/^impl<N: Real + Arbitrary + Send, D: Dim> Arbitrary for RandomOrthogonal<N, D>$/;"	i
Arbitrary for RandomSDP	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/debug/random_sdp.rs	/^impl<N: Real + Arbitrary + Send, D: Dim> Arbitrary for RandomSDP<N, D>$/;"	i
Arbitrary for Rotation2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_specialization.rs	/^impl<N: Real + Arbitrary> Arbitrary for Rotation2<N>$/;"	i
Arbitrary for Rotation3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_specialization.rs	/^impl<N: Real + Arbitrary> Arbitrary for Rotation3<N>$/;"	i
Arbitrary for Similarity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_construction.rs	/^impl<N, D: DimName, R> Arbitrary for Similarity<N, D, R>$/;"	i
Arbitrary for Translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_construction.rs	/^impl<N: Scalar + Arbitrary, D: DimName> Arbitrary for Translation<N, D>$/;"	i
Arbitrary for UnitComplex	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_construction.rs	/^impl<N: Real + Arbitrary> Arbitrary for UnitComplex<N> {$/;"	i
Arbitrary for UnitQuaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_construction.rs	/^impl<N: Real + Arbitrary> Arbitrary for UnitQuaternion<N>$/;"	i
ArcBall	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/arc_ball.rs	/^impl ArcBall {$/;"	i
ArcBall	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/arc_ball.rs	/^pub struct ArcBall {$/;"	s
AreMultipliable	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/constraint.rs	/^pub trait AreMultipliable<R1: Dim, C1: Dim, R2: Dim, C2: Dim>: DimEq<C1, R2> {$/;"	t
AreMultipliable for ShapeConstraint	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/constraint.rs	/^impl<R1: Dim, C1: Dim, R2: Dim, C2: Dim> AreMultipliable<R1, C1, R2, C2> for ShapeConstraint$/;"	i
AsMut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/conversion.rs	/^        impl<N, S> AsMut<mint::$VT<N>> for Matrix<N, $NRows, U1, S>$/;"	i
AsMut for Matrix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/conversion.rs	/^        impl<N, S> AsMut<[N; $SZ]> for Matrix<N, $NRows, $NCols, S>$/;"	i
AsMut for Matrix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/conversion.rs	/^        impl<N: Scalar, S> AsMut<[[N; $SZRows]; $SZCols]> for Matrix<N, $NRows, $NCols, S>$/;"	i
AsPrimitive	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^        impl AsPrimitive<$U> for $T {$/;"	i
AsPrimitive	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^pub trait AsPrimitive<T>: 'static + Copy$/;"	t
AsRef	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/conversion.rs	/^        impl<N, S> AsRef<mint::$VT<N>> for Matrix<N, $NRows, U1, S>$/;"	i
AsRef for Matrix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/conversion.rs	/^        impl<N, S> AsRef<[N; $SZ]> for Matrix<N, $NRows, $NCols, S>$/;"	i
AsRef for Matrix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/conversion.rs	/^        impl<N: Scalar, S> AsRef<[[N; $SZRows]; $SZCols]> for Matrix<N, $NRows, $NCols, S>$/;"	i
AsRef for Unit	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/unit.rs	/^impl<T> AsRef<T> for Unit<T> {$/;"	i
BetweenPosesFactor	/home/berger/playground/rust/slam/slam-rs/src/factors/mod.rs	/^impl<P> BetweenPosesFactor<P> {$/;"	i
BetweenPosesFactor	/home/berger/playground/rust/slam/slam-rs/src/factors/mod.rs	/^pub struct BetweenPosesFactor<P> {$/;"	s
Bidiagonal	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/bidiagonal.rs	/^pub struct Bidiagonal<N: Real, R: DimMin<C>, C: Dim>$/;"	s
Bounded	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/bounds.rs	/^        impl Bounded for $t {$/;"	i
Bounded	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/bounds.rs	/^        impl<$($name: Bounded,)*> Bounded for ($($name,)*) {$/;"	i
Bounded	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/bounds.rs	/^pub trait Bounded {$/;"	t
Bounded for MatrixMN	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^impl<N, R: DimName, C: DimName> Bounded for MatrixMN<N, R, C>$/;"	i
Bounded for Point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_construction.rs	/^impl<N: Scalar + Bounded, D: DimName> Bounded for Point<N, D>$/;"	i
Bounded for Wrapping	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/bounds.rs	/^impl<T: Bounded> Bounded for Wrapping<T> {$/;"	i
Buffer	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/allocator.rs	/^    type Buffer: ContiguousStorageMut<N, R, C> + Clone;$/;"	T
Buffer	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/default_allocator.rs	/^    type Buffer = MatrixArray<N, R, C>;$/;"	T
Buffer	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/default_allocator.rs	/^    type Buffer = MatrixVec<N, Dynamic, C>;$/;"	T
Buffer	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/default_allocator.rs	/^    type Buffer = MatrixVec<N, R, Dynamic>;$/;"	T
BufferType	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gpu_vector.rs	/^impl BufferType {$/;"	i
BufferType	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gpu_vector.rs	/^pub enum BufferType {$/;"	g
CStride	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^    type CStride = R;$/;"	T
CStride	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^            type CStride = CStride;$/;"	T
CStride	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_vec.rs	/^    type CStride = Dynamic;$/;"	T
CStride	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_vec.rs	/^    type CStride = R;$/;"	T
CStride	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/storage.rs	/^    type CStride: Dim;$/;"	T
CStride	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/storage.rs	/^pub type CStride<N, R, C = U1> = <<DefaultAllocator as Allocator<N, R, C>>::Buffer as Storage<N, R, C>>::CStride;$/;"	T
Camera	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/camera.rs	/^pub trait Camera {$/;"	t
Camera for ArcBall	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/arc_ball.rs	/^impl Camera for ArcBall {$/;"	i
Camera for FirstPerson	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^impl Camera for FirstPerson {$/;"	i
Camera for FirstPersonStereo	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person_stereo.rs	/^impl Camera for FirstPersonStereo {$/;"	i
CheckedAdd	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/checked.rs	/^pub trait CheckedAdd: Sized + Add<Self, Output=Self> {$/;"	t
CheckedDiv	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/checked.rs	/^pub trait CheckedDiv: Sized + Div<Self, Output=Self> {$/;"	t
CheckedMul	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/checked.rs	/^pub trait CheckedMul: Sized + Mul<Self, Output=Self> {$/;"	t
CheckedNeg	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/checked.rs	/^pub trait CheckedNeg: Sized {$/;"	t
CheckedRem	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/checked.rs	/^pub trait CheckedRem: Sized + Rem<Self, Output = Self> {$/;"	t
CheckedShl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/checked.rs	/^pub trait CheckedShl: Sized + Shl<u32, Output=Self> {$/;"	t
CheckedShr	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/checked.rs	/^pub trait CheckedShr: Sized + Shr<u32, Output=Self> {$/;"	t
CheckedSub	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/checked.rs	/^pub trait CheckedSub: Sized + Sub<Self, Output=Self> {$/;"	t
Cholesky	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/cholesky.rs	/^pub struct Cholesky<N: Real, D: Dim>$/;"	s
Clone	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^impl<'a, N: Scalar, R: Dim, C: Dim, RStride: Dim, CStride: Dim> Clone$/;"	i
Clone for Id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^impl<O: Operator> Clone for Id<O> {$/;"	i
Clone for MatrixArray	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^impl<N, R, C> Clone for MatrixArray<N, R, C>$/;"	i
Clone for Orthographic3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/orthographic.rs	/^impl<N: Real> Clone for Orthographic3<N> {$/;"	i
Clone for Perspective3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/perspective.rs	/^impl<N: Real> Clone for Perspective3<N> {$/;"	i
Clone for Point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^impl<N: Scalar, D: DimName> Clone for Point<N, D>$/;"	i
Clone for Quaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^impl<N: Real> Clone for Quaternion<N> {$/;"	i
Clone for Rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation.rs	/^impl<N: Scalar, D: DimName> Clone for Rotation<N, D>$/;"	i
Clone for Translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation.rs	/^impl<N: Scalar, D: DimName> Clone for Translation<N, D>$/;"	i
Clone for Wrapper	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/wrapper.rs	/^impl<T: Clone, A, M> Clone for Wrapper<T, A, M> {$/;"	i
ClosedAdd	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/operator.rs	/^pub trait ClosedAdd<Right = Self>$/;"	t
ClosedAdd for T	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/operator.rs	/^impl<T, Right> ClosedAdd<Right> for T$/;"	i
ClosedDiv	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/operator.rs	/^pub trait ClosedDiv<Right = Self>$/;"	t
ClosedDiv for T	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/operator.rs	/^impl<T, Right> ClosedDiv<Right> for T$/;"	i
ClosedMul	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/operator.rs	/^pub trait ClosedMul<Right = Self>$/;"	t
ClosedMul for T	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/operator.rs	/^impl<T, Right> ClosedMul<Right> for T$/;"	i
ClosedNeg	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/operator.rs	/^pub trait ClosedNeg: Sized + Neg<Output = Self> {}$/;"	t
ClosedNeg for T	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/operator.rs	/^impl<T> ClosedNeg for T$/;"	i
ClosedSub	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/operator.rs	/^pub trait ClosedSub<Right = Self>$/;"	t
ClosedSub for T	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/operator.rs	/^impl<T, Right> ClosedSub<Right> for T$/;"	i
Column	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/matrix.rs	/^    type Column: FiniteDimVectorSpace<Field = Self::Field>;$/;"	T
Column	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    type Column    = Matrix<N>;$/;"	T
ContiguousStorage	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/storage.rs	/^pub unsafe trait ContiguousStorage<N: Scalar, R: Dim, C: Dim = U1>: Storage<N, R, C> { }$/;"	t
ContiguousStorage for MatrixArray	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^unsafe impl<N, R, C> ContiguousStorage<N, R, C> for MatrixArray<N, R, C>$/;"	i
ContiguousStorage for MatrixVec	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_vec.rs	/^unsafe impl<N: Scalar, C: Dim> ContiguousStorage<N, Dynamic, C> for MatrixVec<N, Dynamic, C>$/;"	i
ContiguousStorage for MatrixVec	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_vec.rs	/^unsafe impl<N: Scalar, R: DimName> ContiguousStorage<N, R, Dynamic> for MatrixVec<N, R, Dynamic>$/;"	i
ContiguousStorageMut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/storage.rs	/^pub unsafe trait ContiguousStorageMut<N: Scalar, R: Dim, C: Dim = U1>: ContiguousStorage<N, R, C> + StorageMut<N, R, C> { }$/;"	t
ContiguousStorageMut for MatrixArray	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^unsafe impl<N, R, C> ContiguousStorageMut<N, R, C> for MatrixArray<N, R, C>$/;"	i
ContiguousStorageMut for MatrixVec	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_vec.rs	/^unsafe impl<N: Scalar, C: Dim> ContiguousStorageMut<N, Dynamic, C> for MatrixVec<N, Dynamic, C>$/;"	i
ContiguousStorageMut for MatrixVec	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_vec.rs	/^unsafe impl<N: Scalar, R: DimName> ContiguousStorageMut<N, R, Dynamic> for MatrixVec<N, R, Dynamic>$/;"	i
Coord	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/loader/obj.rs	/^pub type Coord  = Point3<GLfloat>;$/;"	T
Coordinates	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/vector.rs	/^    type Coordinates: FiniteDimInnerSpace<Real = Self::Real> +$/;"	T
Coordinates	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_alga.rs	/^    type Coordinates = VectorN<N, D>;$/;"	T
Copy	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^impl<'a, N: Scalar, R: Dim, C: Dim, RStride: Dim, CStride: Dim> Copy$/;"	i
Copy for Cholesky	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/cholesky.rs	/^impl<N: Real, D: Dim> Copy for Cholesky<N, D>$/;"	i
Copy for Id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^impl<O: Operator> Copy for Id<O> {}$/;"	i
Copy for MatrixArray	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^impl<N, R, C> Copy for MatrixArray<N, R, C>$/;"	i
Copy for Orthographic3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/orthographic.rs	/^impl<N: Real> Copy for Orthographic3<N> { }$/;"	i
Copy for PermutationSequence	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/permutation_sequence.rs	/^impl<D: Dim> Copy for PermutationSequence<D>$/;"	i
Copy for Perspective3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/perspective.rs	/^impl<N: Real> Copy for Perspective3<N> { }$/;"	i
Copy for Point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^impl<N: Scalar, D: DimName> Copy for Point<N, D>$/;"	i
Copy for Quaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^impl<N: Real> Copy for Quaternion<N> { }$/;"	i
Copy for RealEigen	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/eigen.rs	/^impl<N: Real, D: Dim> Copy for RealEigen<N, D>$/;"	i
Copy for RealSchur	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/schur.rs	/^impl<N: Real, D: Dim> Copy for RealSchur<N, D>$/;"	i
Copy for Rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation.rs	/^impl<N: Scalar, D: DimName> Copy for Rotation<N, D>$/;"	i
Copy for SymmetricEigen	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/symmetric_eigen.rs	/^impl<N: Real, D: Dim> Copy for SymmetricEigen<N, D>$/;"	i
Copy for Translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation.rs	/^impl<N: Scalar, D: DimName> Copy for Translation<N, D>$/;"	i
Copy for Wrapper	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/wrapper.rs	/^impl<T: Copy, A, M> Copy for Wrapper<T, A, M> {}$/;"	i
DEFAULT_HEIGHT	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^static DEFAULT_HEIGHT: u32 = 600u32;$/;"	c
DEFAULT_WIDTH	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^static DEFAULT_WIDTH:  u32 = 800u32;$/;"	c
DEG_RAD_PAIRS	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    const DEG_RAD_PAIRS: [(f64, f64); 7] = [$/;"	c
DMatrix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type DMatrix<N> = MatrixN<N, Dynamic>;$/;"	T
DVector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type DVector<N> = Matrix<N, Dynamic, U1, MatrixVec<N, Dynamic, U1>>;$/;"	T
Debug for MatrixArray	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^impl<N, R, C> Debug for MatrixArray<N, R, C>$/;"	i
DefaultAllocator	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/default_allocator.rs	/^pub struct DefaultAllocator;$/;"	s
Deref for Matrix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/coordinates.rs	/^        impl<N: Scalar, S> Deref for Matrix<N, $R, $C, S>$/;"	i
Deref for MatrixArray	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^impl<N, R, C> Deref for MatrixArray<N, R, C>$/;"	i
Deref for MatrixVec	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_vec.rs	/^impl<N, R: Dim, C: Dim> Deref for MatrixVec<N, R, C> {$/;"	i
Deref for Point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_coordinates.rs	/^        impl<N: Scalar> Deref for Point<N, $D>$/;"	i
Deref for Quaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_coordinates.rs	/^impl<N: Real> Deref for Quaternion<N> {$/;"	i
Deref for Unit	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/unit.rs	/^impl<T> Deref for Unit<T> {$/;"	i
DerefMut for Matrix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/coordinates.rs	/^        impl<N: Scalar, S> DerefMut for Matrix<N, $R, $C, S>$/;"	i
DerefMut for MatrixArray	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^impl<N, R, C> DerefMut for MatrixArray<N, R, C>$/;"	i
DerefMut for Point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_coordinates.rs	/^        impl<N: Scalar> DerefMut for Point<N, $D>$/;"	i
DerefMut for Quaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_coordinates.rs	/^impl<N: Real> DerefMut for Quaternion<N> {$/;"	i
Deserialize for Dynamic	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^impl<'de> Deserialize<'de> for Dynamic {$/;"	i
Deserialize for Matrix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^impl<'de, N, R, C, S> Deserialize<'de> for Matrix<N, R, C, S>$/;"	i
Deserialize for MatrixArray	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^impl<'a, N, R, C> Deserialize<'a> for MatrixArray<N, R, C>$/;"	i
Dim	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^        impl Dim for $D {$/;"	i
Dim	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^pub trait Dim: Any + Debug + Copy + PartialEq + Send {$/;"	t
Dim for Dynamic	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^impl Dim for Dynamic {$/;"	i
Dim for U1	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^impl Dim for U1 {$/;"	i
Dim for UInt	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^impl<U: Unsigned + DimName, B: Bit + Any + Debug + Copy + PartialEq + Send> Dim for UInt<U, B> {$/;"	i
DimEq	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/constraint.rs	/^pub trait DimEq<D1: Dim, D2: Dim> {$/;"	t
DimEq for ShapeConstraint	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/constraint.rs	/^impl<D: Dim> DimEq<D, D> for ShapeConstraint {$/;"	i
DimEq for ShapeConstraint	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/constraint.rs	/^impl<D: DimName> DimEq<D, Dynamic> for ShapeConstraint {$/;"	i
DimEq for ShapeConstraint	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/constraint.rs	/^impl<D: DimName> DimEq<Dynamic, D> for ShapeConstraint {$/;"	i
DimName	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^        impl DimName for $D {$/;"	i
DimName	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^pub trait DimName: Dim {$/;"	t
DimName for U1	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^impl DimName for U1 {$/;"	i
DimName for UInt	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^impl<U: Unsigned + DimName, B: Bit + Any + Debug + Copy + PartialEq + Send> DimName for UInt<U, B> {$/;"	i
DirectIsometry	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^pub trait DirectIsometry<E: EuclideanSpace>: Isometry<E> {}$/;"	t
DirectIsometry for Id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/id.rs	/^impl<E: EuclideanSpace> DirectIsometry<E> for Id {}$/;"	i
Display for Wrapper	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/wrapper.rs	/^impl<T: Display, A: Operator, M: Operator> Display for Wrapper<T, A, M> {$/;"	i
Div	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/wrapper.rs	/^impl<T, A, M: Operator> Div<Wrapper<T, A, M>> for Wrapper<T, A, M>$/;"	i
Div	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_ops.rs	/^impl<'a, 'b, N: Real> Div<&'b UnitComplex<N>> for &'a UnitComplex<N> {$/;"	i
Div	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_ops.rs	/^impl<'a, N: Real> Div<UnitComplex<N>> for &'a UnitComplex<N> {$/;"	i
Div	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_ops.rs	/^impl<'b, N: Real> Div<&'b UnitComplex<N>> for UnitComplex<N> {$/;"	i
Div	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_ops.rs	/^impl<N: Real> Div<UnitComplex<N>> for UnitComplex<N> {$/;"	i
Div for Id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^impl Div<Id> for Id {$/;"	i
DivAssign	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_ops.rs	/^impl<'b, N: Real> DivAssign<&'b Rotation<N, U2>> for UnitComplex<N>$/;"	i
DivAssign	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_ops.rs	/^impl<'b, N: Real> DivAssign<&'b UnitComplex<N>> for Rotation<N, U2>$/;"	i
DivAssign	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_ops.rs	/^impl<'b, N: Real> DivAssign<&'b UnitComplex<N>> for UnitComplex<N> {$/;"	i
DivAssign	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_ops.rs	/^impl<N: Real> DivAssign<Rotation<N, U2>> for UnitComplex<N>$/;"	i
DivAssign	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_ops.rs	/^impl<N: Real> DivAssign<UnitComplex<N>> for Rotation<N, U2>$/;"	i
DivAssign	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_ops.rs	/^impl<N: Real> DivAssign<UnitComplex<N>> for UnitComplex<N> {$/;"	i
DivAssign for Id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^impl DivAssign<Id> for Id {$/;"	i
Drop for Event	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/event.rs	/^impl<'a> Drop for Event<'a> {$/;"	i
Drop for Font	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/text/font.rs	/^impl Drop for Font {$/;"	i
Drop for FramebufferManager	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/framebuffer_manager.rs	/^impl Drop for FramebufferManager {$/;"	i
Drop for GLHandle	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gpu_vector.rs	/^impl Drop for GLHandle {$/;"	i
Drop for OffscreenBuffers	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/framebuffer_manager.rs	/^impl Drop for OffscreenBuffers {$/;"	i
Drop for Recorder	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/tools/kiss3d_recording.rs	/^impl Drop for Recorder {$/;"	i
Drop for Shader	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/shader.rs	/^impl Drop for Shader {$/;"	i
Drop for Texture	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/texture_manager.rs	/^impl Drop for Texture {$/;"	i
Dynamic	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^impl Dynamic {$/;"	i
Dynamic	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^pub struct Dynamic {$/;"	s
EXP_MASK	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^        const EXP_MASK: u32 = 0x7f800000;$/;"	c
EXP_MASK	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^        const EXP_MASK: u64 = 0x7ff0000000000000;$/;"	c
Eps	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/macros.rs	/^            type Eps = $T;$/;"	T
Epsilon	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^    type Epsilon = Id<O>;$/;"	T
Epsilon	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/wrapper.rs	/^    type Epsilon = T::Epsilon;$/;"	T
Epsilon	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    type Epsilon = N::Epsilon;$/;"	T
Epsilon	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry.rs	/^    type Epsilon = N::Epsilon;$/;"	T
Epsilon	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^    type Epsilon = N::Epsilon;$/;"	T
Epsilon	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    type Epsilon = N;$/;"	T
Epsilon	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation.rs	/^    type Epsilon = N::Epsilon;$/;"	T
Epsilon	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity.rs	/^    type Epsilon = N::Epsilon;$/;"	T
Epsilon	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation.rs	/^    type Epsilon = N::Epsilon;$/;"	T
Epsilon	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex.rs	/^    type Epsilon = N;$/;"	T
Eq for Id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^impl<O: Operator> Eq for Id<O> {}$/;"	i
Eq for Isometry	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry.rs	/^impl<N: Real, D: DimName, R> Eq for Isometry<N, D, R>$/;"	i
Eq for Matrix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^impl<N, R: Dim, C: Dim, S> Eq for Matrix<N, R, C, S>$/;"	i
Eq for MatrixArray	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^impl<N, R, C> Eq for MatrixArray<N, R, C>$/;"	i
Eq for Point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^impl<N: Scalar + Eq, D: DimName> Eq for Point<N, D>$/;"	i
Eq for Quaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^impl<N: Real + Eq> Eq for Quaternion<N> { }$/;"	i
Eq for Rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation.rs	/^impl<N: Scalar + Eq, D: DimName> Eq for Rotation<N, D>$/;"	i
Eq for Similarity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity.rs	/^impl<N: Real, D: DimName, R> Eq for Similarity<N, D, R>$/;"	i
Eq for Translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation.rs	/^impl<N: Scalar + Eq, D: DimName> Eq for Translation<N, D>$/;"	i
EuclideanSpace	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/vector.rs	/^pub trait EuclideanSpace: AffineSpace<Translation = <Self as EuclideanSpace>::Coordinates> +$/;"	t
EuclideanSpace for Point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_alga.rs	/^impl<N: Real, D: DimName> EuclideanSpace for Point<N, D>$/;"	i
Event	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/event.rs	/^impl<'a> Event<'a> {$/;"	i
Event	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/event.rs	/^pub struct Event<'a> {$/;"	s
EventManager	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/event.rs	/^impl EventManager {$/;"	i
EventManager	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/event.rs	/^pub struct EventManager {$/;"	s
Events	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/event.rs	/^impl<'a> Events<'a> {$/;"	i
Events	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/event.rs	/^pub struct Events<'a> {$/;"	s
FRAGMENT_SHADER	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/grayscales.rs	/^static FRAGMENT_SHADER: &'static str =$/;"	c
FRAGMENT_SHADER	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/oculus_stereo.rs	/^static FRAGMENT_SHADER: &'static str =$/;"	c
FRAGMENT_SHADER	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/sobel_edge_highlight.rs	/^static FRAGMENT_SHADER: &'static str =$/;"	c
FRAGMENT_SHADER	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/waves.rs	/^static FRAGMENT_SHADER: &'static str =$/;"	c
FactorTrait	/home/berger/playground/rust/slam/slam-rs/src/factors/mod.rs	/^pub trait FactorTrait {$/;"	t
FactorTrait for BetweenPosesFactor	/home/berger/playground/rust/slam/slam-rs/src/factors/mod.rs	/^impl<P: PoseTrait> FactorTrait for BetweenPosesFactor<P> {$/;"	i
Field	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/matrix.rs	/^    type Field: Field;$/;"	T
Field	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/vector.rs	/^    type Field: Field;$/;"	T
Field	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^    type Field = N;$/;"	T
Field	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^    type Field = N;$/;"	T
Field	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    type Field     = N;$/;"	T
FiniteDimInnerSpace	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/vector.rs	/^pub trait FiniteDimInnerSpace$/;"	t
FiniteDimInnerSpace for MatrixMN	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^impl<N: Real, R: DimName, C: DimName> FiniteDimInnerSpace for MatrixMN<N, R, C>$/;"	i
FiniteDimVectorSpace	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/vector.rs	/^pub trait FiniteDimVectorSpace$/;"	t
FiniteDimVectorSpace for MatrixMN	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^impl<N, R: DimName, C: DimName> FiniteDimVectorSpace for MatrixMN<N, R, C>$/;"	i
FiniteDimVectorSpace for Quaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^impl<N: Real> FiniteDimVectorSpace for Quaternion<N> {$/;"	i
FirstPerson	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^impl FirstPerson {$/;"	i
FirstPerson	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^pub struct FirstPerson {$/;"	s
FirstPersonStereo	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person_stereo.rs	/^impl FirstPersonStereo {$/;"	i
FirstPersonStereo	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person_stereo.rs	/^pub struct FirstPersonStereo {$/;"	s
Float	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^        impl Float for $T {$/;"	i
Float	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^pub trait Float$/;"	t
FloatConst	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^        impl FloatConst for $T {$/;"	i
FloatConst	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^        pub trait FloatConst {$/;"	t
FloatCore	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^pub trait FloatCore: Num + NumCast + Neg<Output = Self> + PartialOrd + Copy {$/;"	t
FloatCore for f32	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^impl FloatCore for f32 {$/;"	i
FloatCore for f64	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^impl FloatCore for f64 {$/;"	i
FloatErrorKind	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^pub enum FloatErrorKind {$/;"	g
Font	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/text/font.rs	/^impl Font {$/;"	i
Font	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/text/font.rs	/^pub struct Font {$/;"	s
FramebufferManager	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/framebuffer_manager.rs	/^impl FramebufferManager {$/;"	i
FramebufferManager	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/framebuffer_manager.rs	/^pub struct FramebufferManager {$/;"	s
From	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/conversion.rs	/^        impl<N> From<mint::$MV<N>> for MatrixMN<N, $NRows, $NCols>$/;"	i
From	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/conversion.rs	/^        impl<N> From<mint::$VT<N>> for MatrixMN<N, $NRows, U1>$/;"	i
From	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_conversion.rs	/^impl<N: Real> From<mint::Quaternion<N>> for Quaternion<N> {$/;"	i
From	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_conversion.rs	/^impl<N: Real> From<mint::EulerAngles<N, mint::IntraXYZ>> for Rotation3<N> {$/;"	i
From for MatrixMN	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/conversion.rs	/^        impl<N: Scalar> From<[[N; $SZRows]; $SZCols]> for MatrixMN<N, $NRows, $NCols>$/;"	i
From for MatrixMN	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/conversion.rs	/^        impl<N> From<[N; $SZ]> for MatrixMN<N, $NRows, $NCols>$/;"	i
FromPrimitive	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^        impl FromPrimitive for $T {$/;"	i
FromPrimitive	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^pub trait FromPrimitive: Sized {$/;"	t
FromPrimitive for Wrapping	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^impl<T: FromPrimitive> FromPrimitive for Wrapping<T> {$/;"	i
FromStrRadixErr	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^            type FromStrRadixErr = ::core::num::ParseIntError;$/;"	T
FromStrRadixErr	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^            type FromStrRadixErr = ParseFloatError;$/;"	T
FromStrRadixErr	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^    type FromStrRadixErr = T::FromStrRadixErr;$/;"	T
FromStrRadixErr	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^    type FromStrRadixErr;$/;"	T
FullPivLU	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/full_piv_lu.rs	/^pub struct FullPivLU<N: Real, R: DimMin<C>, C: Dim>$/;"	s
GLFW_SINGLETON	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^        static mut GLFW_SINGLETON: Option<glfw::Glfw> = None;$/;"	c
GLHandle	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gpu_vector.rs	/^impl GLHandle {$/;"	i
GLHandle	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gpu_vector.rs	/^struct GLHandle {$/;"	s
GLPrimitive	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^impl GLPrimitive for (GLfloat, GLfloat) {$/;"	i
GLPrimitive	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^impl GLPrimitive for (GLfloat, GLfloat, GLfloat) {$/;"	i
GLPrimitive	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^impl GLPrimitive for (GLuint, GLuint) {$/;"	i
GLPrimitive	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^impl GLPrimitive for (GLuint, GLuint, GLuint) {$/;"	i
GLPrimitive	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^pub trait GLPrimitive: Copy {$/;"	t
GLPrimitive for GLfloat	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^impl GLPrimitive for GLfloat {$/;"	i
GLPrimitive for GLint	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^impl GLPrimitive for GLint {$/;"	i
GLPrimitive for GLuint	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^impl GLPrimitive for GLuint {$/;"	i
GLPrimitive for Matrix2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^impl GLPrimitive for Matrix2<GLfloat> {$/;"	i
GLPrimitive for Matrix3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^impl GLPrimitive for Matrix3<GLfloat> {$/;"	i
GLPrimitive for Matrix4	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^impl GLPrimitive for Matrix4<GLfloat> {$/;"	i
GLPrimitive for Point2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^impl GLPrimitive for Point2<GLfloat> {$/;"	i
GLPrimitive for Point2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^impl GLPrimitive for Point2<GLuint> {$/;"	i
GLPrimitive for Point3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^impl GLPrimitive for Point3<GLfloat> {$/;"	i
GLPrimitive for Point3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^impl GLPrimitive for Point3<GLuint> {$/;"	i
GLPrimitive for Rotation2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^impl GLPrimitive for Rotation2<GLfloat> {$/;"	i
GLPrimitive for Rotation3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^impl GLPrimitive for Rotation3<GLfloat> {$/;"	i
GLPrimitive for Vector2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^impl GLPrimitive for Vector2<GLfloat> {$/;"	i
GLPrimitive for Vector2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^impl GLPrimitive for Vector2<GLuint> {$/;"	i
GLPrimitive for Vector3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^impl GLPrimitive for Vector3<GLfloat> {$/;"	i
GLPrimitive for Vector3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^impl GLPrimitive for Vector3<GLuint> {$/;"	i
GPUVec	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gpu_vector.rs	/^impl<T: Clone + GLPrimitive> GPUVec<T> {$/;"	i
GPUVec	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gpu_vector.rs	/^impl<T: GLPrimitive> GPUVec<T> {$/;"	i
GPUVec	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gpu_vector.rs	/^pub struct GPUVec<T> {$/;"	s
Glyph	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/text/glyph.rs	/^impl Glyph {$/;"	i
Glyph	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/text/glyph.rs	/^pub struct Glyph {$/;"	s
Graph	/home/berger/playground/rust/slam/slam-rs/src/graphs/mod.rs	/^impl<F> Graph<F> {$/;"	i
Graph	/home/berger/playground/rust/slam/slam-rs/src/graphs/mod.rs	/^pub struct Graph<F> {$/;"	s
GraphTrait	/home/berger/playground/rust/slam/slam-rs/src/graphs/mod.rs	/^pub trait GraphTrait {$/;"	t
GraphTrait for Graph	/home/berger/playground/rust/slam/slam-rs/src/graphs/mod.rs	/^impl<F> GraphTrait for Graph<F> {$/;"	i
Grayscales	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/grayscales.rs	/^impl Grayscales {$/;"	i
Grayscales	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/grayscales.rs	/^pub struct Grayscales {$/;"	s
Hash for MatrixArray	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^impl<N, R, C> Hash for MatrixArray<N, R, C>$/;"	i
Hessenberg	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/hessenberg.rs	/^pub struct Hessenberg<N: Real, D: DimSub<U1>>$/;"	s
INIT	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^        static INIT: Once = ONCE_INIT;$/;"	c
Id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^impl<O: Operator> Id<O> {$/;"	i
Id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^pub struct Id<O: Operator = Multiplicative> {$/;"	s
Identity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^pub trait Identity<O: Operator> {$/;"	t
Identity for Complex	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^impl<N: Num + Clone> Identity<Multiplicative> for Complex<N> {$/;"	i
Identity for Id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^impl<O: Operator> Identity<O> for Id<O> {$/;"	i
Identity for Isometry	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_alga.rs	/^impl<N: Real, D: DimName, R> Identity<Multiplicative> for Isometry<N, D, R>$/;"	i
Identity for MatrixMN	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^impl<N, R: DimName, C: DimName> Identity<Additive> for MatrixMN<N, R, C>$/;"	i
Identity for MatrixN	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^impl<N, D: DimName> Identity<Multiplicative> for MatrixN<N, D>$/;"	i
Identity for Quaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^impl<N: Real> Identity<Additive> for Quaternion<N> {$/;"	i
Identity for Quaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^impl<N: Real> Identity<Multiplicative> for Quaternion<N> {$/;"	i
Identity for Rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^impl<N: Real, D: DimName> Identity<Multiplicative> for Rotation<N, D>$/;"	i
Identity for Similarity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_alga.rs	/^impl<N: Real, D: DimName, R> Identity<Multiplicative> for Similarity<N, D, R>$/;"	i
Identity for Translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_alga.rs	/^impl<N: Real, D: DimName> Identity<Multiplicative> for Translation<N, D>$/;"	i
Identity for UnitComplex	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_alga.rs	/^impl<N: Real> Identity<Multiplicative> for UnitComplex<N> {$/;"	i
Identity for UnitQuaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^impl<N: Real> Identity<Multiplicative> for UnitQuaternion<N> {$/;"	i
Index for Matrix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^impl<N, R: Dim, C: Dim, S> Index<(usize, usize)> for Matrix<N, R, C, S>$/;"	i
Index for Point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_ops.rs	/^impl<N: Scalar, D: DimName> Index<usize> for Point<N, D>$/;"	i
Index for Quaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_ops.rs	/^impl<N: Real> Index<usize> for Quaternion<N> {$/;"	i
Index for Rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_ops.rs	/^impl<N: Scalar, D: DimName> Index<(usize, usize)> for Rotation<N, D>$/;"	i
Index for Transform	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform_ops.rs	/^impl<N: Real, D, C: TCategory> Index<(usize, usize)> for Transform<N, D, C>$/;"	i
IndexMut for Matrix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^impl<N, R: Dim, C: Dim, S> IndexMut<(usize, usize)> for Matrix<N, R, C, S>$/;"	i
IndexMut for Point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_ops.rs	/^impl<N: Scalar, D: DimName> IndexMut<usize> for Point<N, D>$/;"	i
IndexMut for Quaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_ops.rs	/^impl<N: Real> IndexMut<usize> for Quaternion<N> {$/;"	i
IndexMut for Transform	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform_ops.rs	/^impl<N: Real, D> IndexMut<(usize, usize)> for Transform<N, D, TGeneral>$/;"	i
InnerSpace	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/vector.rs	/^pub trait InnerSpace: NormedSpace<Field = <Self as InnerSpace>::Real> {$/;"	t
InnerSpace for MatrixMN	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^impl<N: Real, R: DimName, C: DimName> InnerSpace for MatrixMN<N, R, C>$/;"	i
Into	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/conversion.rs	/^        impl<N, S> Into<mint::$VT<N>> for Matrix<N, $NRows, U1, S>$/;"	i
Into	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/conversion.rs	/^        impl<N> Into<mint::$MV<N>> for MatrixMN<N, $NRows, $NCols>$/;"	i
Into	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_conversion.rs	/^impl<N: Real> Into<mint::Quaternion<N>> for Quaternion<N> {$/;"	i
Into	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_conversion.rs	/^impl<N: Real> Into<mint::Quaternion<N>> for UnitQuaternion<N> {$/;"	i
Into for Matrix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/conversion.rs	/^        impl<N, S> Into<[N; $SZ]> for Matrix<N, $NRows, $NCols, S>$/;"	i
Into for Matrix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/conversion.rs	/^        impl<N: Scalar, S> Into<[[N; $SZRows]; $SZCols]> for Matrix<N, $NRows, $NCols, S>$/;"	i
IntoIter	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/conversion.rs	/^    type IntoIter = MatrixIter<'a, N, R, C, S>;$/;"	T
IntoIter	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/conversion.rs	/^    type IntoIter = MatrixIterMut<'a, N, R, C, S>;$/;"	T
Inv	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/inv.rs	/^impl<'a> Inv for &'a f32 {$/;"	i
Inv	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/inv.rs	/^impl<'a> Inv for &'a f64 {$/;"	i
Inv	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/inv.rs	/^pub trait Inv {$/;"	t
Inv for f32	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/inv.rs	/^impl Inv for f32 {$/;"	i
Inv for f64	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/inv.rs	/^impl Inv for f64 {$/;"	i
Inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/operator.rs	/^        impl Inverse<Additive> for $T {$/;"	i
Inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/operator.rs	/^pub trait Inverse<O: Operator>: Sized {$/;"	t
Inverse for Complex	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/operator.rs	/^impl<N: Num + Clone + ClosedNeg> Inverse<Multiplicative> for Complex<N> {$/;"	i
Inverse for Id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^impl<O: Operator> Inverse<O> for Id<O> {$/;"	i
Inverse for Isometry	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_alga.rs	/^impl<N: Real, D: DimName, R> Inverse<Multiplicative> for Isometry<N, D, R>$/;"	i
Inverse for MatrixMN	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^impl<N, R: DimName, C: DimName> Inverse<Additive> for MatrixMN<N, R, C>$/;"	i
Inverse for Quaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^impl<N: Real> Inverse<Additive> for Quaternion<N> {$/;"	i
Inverse for Rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^impl<N: Real, D: DimName> Inverse<Multiplicative> for Rotation<N, D>$/;"	i
Inverse for Similarity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_alga.rs	/^impl<N: Real, D: DimName, R> Inverse<Multiplicative> for Similarity<N, D, R>$/;"	i
Inverse for Translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_alga.rs	/^impl<N: Real, D: DimName> Inverse<Multiplicative> for Translation<N, D>$/;"	i
Inverse for UnitComplex	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_alga.rs	/^impl<N: Real> Inverse<Multiplicative> for UnitComplex<N> {$/;"	i
Inverse for UnitQuaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^impl<N: Real> Inverse<Multiplicative> for UnitQuaternion<N> {$/;"	i
Inverse for Wrapper	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/wrapper.rs	/^impl<T, A, M: Operator> Inverse<M> for Wrapper<T, A, M>$/;"	i
Inverse for decimal	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/operator.rs	/^impl Inverse<Multiplicative> for decimal::d128 {$/;"	i
Inverse for f32	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/operator.rs	/^impl Inverse<Multiplicative> for f32 {$/;"	i
Inverse for f64	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/operator.rs	/^impl Inverse<Multiplicative> for f64 {$/;"	i
InversibleSquareMatrix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/matrix.rs	/^pub trait InversibleSquareMatrix: SquareMatrix + MultiplicativeGroup {}$/;"	t
InversibleSquareMatrix for Rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^impl<N: Real> InversibleSquareMatrix for Rotation<N> { }$/;"	i
IsDynamic	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^pub trait IsDynamic { }$/;"	t
IsDynamic for Dynamic	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^impl IsDynamic for Dynamic { }$/;"	i
IsNotStaticOne	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^        impl IsNotStaticOne for $D { }$/;"	i
IsNotStaticOne	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^pub trait IsNotStaticOne { }$/;"	t
IsNotStaticOne for Dynamic	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^impl IsNotStaticOne for Dynamic { }$/;"	i
IsNotStaticOne for UInt	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^impl<U: Unsigned + DimName, B: Bit + Any + Debug + Copy + PartialEq + Send> IsNotStaticOne for UInt<U, B> {$/;"	i
Isometry	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^pub trait Isometry<E: EuclideanSpace>: Similarity<E, Scaling = Id> {}$/;"	t
Isometry	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry.rs	/^impl<N: Real, D: DimName, R> Isometry<N, D, R>$/;"	i
Isometry	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry.rs	/^pub struct Isometry<N: Real, D: DimName, R>$/;"	s
Isometry	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_construction.rs	/^        impl<N: Real> Isometry<N, U3, $RotId<$($RotParams),*>> {$/;"	i
Isometry	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_construction.rs	/^impl<N: Real> Isometry<N, U2, Rotation2<N>> {$/;"	i
Isometry	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_construction.rs	/^impl<N: Real> Isometry<N, U2, UnitComplex<N>> {$/;"	i
Isometry for Id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/id.rs	/^impl<E: EuclideanSpace> Isometry<E> for Id {}$/;"	i
Isometry2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_alias.rs	/^pub type Isometry2<N> = Isometry<N, U2, UnitComplex<N>>;$/;"	T
Isometry3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_alias.rs	/^pub type Isometry3<N> = Isometry<N, U3, UnitQuaternion<N>>;$/;"	T
IsometryMatrix2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_alias.rs	/^pub type IsometryMatrix2<N> = Isometry<N, U2, Rotation2<N>>;$/;"	T
IsometryMatrix3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_alias.rs	/^pub type IsometryMatrix3<N> = Isometry<N, U3, Rotation3<N>>;$/;"	T
Item	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/event.rs	/^    type Item = Event<'a>;$/;"	T
Item	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/conversion.rs	/^    type Item     = &'a N;$/;"	T
Item	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/conversion.rs	/^    type Item     = &'a mut N;$/;"	T
Item	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/iter.rs	/^            type Item = $Ref;$/;"	T
Iterator for Events	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/event.rs	/^impl<'a> Iterator for Events<'a> {$/;"	i
JoinSemilattice	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/lattice.rs	/^        impl JoinSemilattice for $T {$/;"	i
JoinSemilattice	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/lattice.rs	/^pub trait JoinSemilattice: Sized {$/;"	t
JoinSemilattice for Id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^impl<O: Operator> JoinSemilattice for Id<O> {$/;"	i
JoinSemilattice for MatrixMN	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^impl<N, R: Dim, C: Dim> JoinSemilattice for MatrixMN<N, R, C>$/;"	i
JoinSemilattice for Point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_alga.rs	/^impl<N, D: DimName> JoinSemilattice for Point<N, D>$/;"	i
LINES_FRAGMENT_SRC	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/line_renderer.rs	/^pub static LINES_FRAGMENT_SRC: &'static str = ANOTHER_VERY_LONG_STRING;$/;"	c
LINES_VERTEX_SRC	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/line_renderer.rs	/^pub static LINES_VERTEX_SRC:   &'static str = A_VERY_LONG_STRING;$/;"	c
LU	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/lu.rs	/^pub struct LU<N: Real, R: DimMin<C>, C: Dim>$/;"	s
LandmarkId	/home/berger/playground/rust/slam/slam-rs/src/base/types.rs	/^pub type LandmarkId = NodeId;$/;"	T
Lattice	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/lattice.rs	/^        impl Lattice for $T {$/;"	i
Lattice	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/lattice.rs	/^pub trait Lattice: MeetSemilattice + JoinSemilattice + PartialOrd {$/;"	t
Lattice for Id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^impl<O: Operator> Lattice for Id<O> {}$/;"	i
Lattice for MatrixMN	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^impl<N, R: Dim, C: Dim> Lattice for MatrixMN<N, R, C>$/;"	i
Lattice for Point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_alga.rs	/^impl<N, D: DimName> Lattice for Point<N, D>$/;"	i
Light	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/light.rs	/^pub enum Light {$/;"	g
LineRenderer	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/line_renderer.rs	/^impl LineRenderer {$/;"	i
LineRenderer	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/line_renderer.rs	/^pub struct LineRenderer {$/;"	s
MAN_MASK	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^        const MAN_MASK: u32 = 0x007fffff;$/;"	c
MAN_MASK	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^        const MAN_MASK: u64 = 0x000fffffffffffff;$/;"	c
MAX_P1	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^                const MAX_P1: $f = $i::MAX as $f + 1.0;$/;"	c
MAX_P1	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^                const MAX_P1: $f = $i::MAX as $f;$/;"	c
MAX_P1	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^                const MAX_P1: $f = $u::MAX as $f + 1.0;$/;"	c
MAX_P1	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^                const MAX_P1: $f = $u::MAX as $f;$/;"	c
MIN	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^                const MIN: $f = $i::MIN as $f;$/;"	c
MIN_M1	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^                const MIN_M1: $f = $i::MIN as $f - 1.0;$/;"	c
Material	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/material.rs	/^pub trait Material {$/;"	t
Material for NormalsMaterial	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/builtin/normals_material.rs	/^impl Material for NormalsMaterial {$/;"	i
Material for ObjectMaterial	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/builtin/object_material.rs	/^impl Material for ObjectMaterial {$/;"	i
Material for UvsMaterial	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/builtin/uvs_material.rs	/^impl Material for UvsMaterial {$/;"	i
MaterialManager	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/material_manager.rs	/^impl MaterialManager {$/;"	i
MaterialManager	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/material_manager.rs	/^pub struct MaterialManager {$/;"	s
Matrix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/matrix.rs	/^pub trait Matrix$/;"	t
Matrix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^impl<N: Scalar, R: Dim, C: Dim, S> Matrix<N, R, C, S> {$/;"	i
Matrix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^pub struct Matrix<N: Scalar, R: Dim, C: Dim, S> {$/;"	s
Matrix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^impl<N, R1: Dim, C1: Dim, SA> Matrix<N, R1, C1, SA>$/;"	i
Matrix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^impl<N, R: Dim, C: Dim, S> Matrix<N, R, C, S>$/;"	i
Matrix for Rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^impl<N: Real> Matrix for Rotation<N> {$/;"	i
Matrix1	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Matrix1<N> = MatrixN<N, U1>;$/;"	T
Matrix1x2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Matrix1x2<N> = MatrixMN<N, U1, U2>;$/;"	T
Matrix1x3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Matrix1x3<N> = MatrixMN<N, U1, U3>;$/;"	T
Matrix1x4	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Matrix1x4<N> = MatrixMN<N, U1, U4>;$/;"	T
Matrix1x5	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Matrix1x5<N> = MatrixMN<N, U1, U5>;$/;"	T
Matrix1x6	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Matrix1x6<N> = MatrixMN<N, U1, U6>;$/;"	T
Matrix2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Matrix2<N> = MatrixN<N, U2>;$/;"	T
Matrix2x1	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Matrix2x1<N> = MatrixMN<N, U2, U1>;$/;"	T
Matrix2x3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Matrix2x3<N> = MatrixMN<N, U2, U3>;$/;"	T
Matrix2x4	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Matrix2x4<N> = MatrixMN<N, U2, U4>;$/;"	T
Matrix2x5	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Matrix2x5<N> = MatrixMN<N, U2, U5>;$/;"	T
Matrix2x6	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Matrix2x6<N> = MatrixMN<N, U2, U6>;$/;"	T
Matrix3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Matrix3<N> = MatrixN<N, U3>;$/;"	T
Matrix3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/cg.rs	/^impl<N: Real> Matrix3<N> {$/;"	i
Matrix3x1	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Matrix3x1<N> = MatrixMN<N, U3, U1>;$/;"	T
Matrix3x2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Matrix3x2<N> = MatrixMN<N, U3, U2>;$/;"	T
Matrix3x4	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Matrix3x4<N> = MatrixMN<N, U3, U4>;$/;"	T
Matrix3x5	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Matrix3x5<N> = MatrixMN<N, U3, U5>;$/;"	T
Matrix3x6	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Matrix3x6<N> = MatrixMN<N, U3, U6>;$/;"	T
Matrix4	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Matrix4<N> = MatrixN<N, U4>;$/;"	T
Matrix4	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/cg.rs	/^impl<N: Real> Matrix4<N> {$/;"	i
Matrix4x1	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Matrix4x1<N> = MatrixMN<N, U4, U1>;$/;"	T
Matrix4x2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Matrix4x2<N> = MatrixMN<N, U4, U2>;$/;"	T
Matrix4x3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Matrix4x3<N> = MatrixMN<N, U4, U3>;$/;"	T
Matrix4x5	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Matrix4x5<N> = MatrixMN<N, U4, U5>;$/;"	T
Matrix4x6	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Matrix4x6<N> = MatrixMN<N, U4, U6>;$/;"	T
Matrix5	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Matrix5<N> = MatrixN<N, U5>;$/;"	T
Matrix5x1	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Matrix5x1<N> = MatrixMN<N, U5, U1>;$/;"	T
Matrix5x2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Matrix5x2<N> = MatrixMN<N, U5, U2>;$/;"	T
Matrix5x3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Matrix5x3<N> = MatrixMN<N, U5, U3>;$/;"	T
Matrix5x4	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Matrix5x4<N> = MatrixMN<N, U5, U4>;$/;"	T
Matrix5x6	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Matrix5x6<N> = MatrixMN<N, U5, U6>;$/;"	T
Matrix6	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Matrix6<N> = MatrixN<N, U6>;$/;"	T
Matrix6x1	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Matrix6x1<N> = MatrixMN<N, U6, U1>;$/;"	T
Matrix6x2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Matrix6x2<N> = MatrixMN<N, U6, U2>;$/;"	T
Matrix6x3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Matrix6x3<N> = MatrixMN<N, U6, U3>;$/;"	T
Matrix6x4	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Matrix6x4<N> = MatrixMN<N, U6, U4>;$/;"	T
Matrix6x5	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Matrix6x5<N> = MatrixMN<N, U6, U5>;$/;"	T
MatrixArray	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^pub struct MatrixArray<N, R, C>$/;"	s
MatrixArrayVisitor	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^impl<N, R, C> MatrixArrayVisitor<N, R, C>$/;"	i
MatrixArrayVisitor	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^struct MatrixArrayVisitor<N, R, C> {$/;"	s
MatrixComponentOp	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/componentwise.rs	/^pub type MatrixComponentOp<N, R1, C1, R2, C2> = MatrixSum<N, R1, C1, R2, C2>;$/;"	T
MatrixCross	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^pub type MatrixCross<N, R1, C1, R2, C2> =$/;"	T
MatrixMN	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type MatrixMN<N, R, C> = Matrix<N, R, C, Owned<N, R, C>>;$/;"	T
MatrixMN	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^        impl<N: Scalar + Rand, $($DimIdent: $DimBound, )*> MatrixMN<N $(, $Dims)*>$/;"	i
MatrixMN	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^        impl<N: Scalar, $($DimIdent: $DimBound, )*> MatrixMN<N $(, $Dims)*>$/;"	i
MatrixMN	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^        impl<N> MatrixMN<N, $R, $C>$/;"	i
MatrixMN	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^impl<N: Scalar, R: Dim, C: Dim> MatrixMN<N, R, C>$/;"	i
MatrixMut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/matrix.rs	/^pub trait MatrixMut: Matrix {$/;"	t
MatrixN	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type MatrixN<N, D> = MatrixMN<N, D, D>;$/;"	T
MatrixN	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/cg.rs	/^impl<N, D: DimName> MatrixN<N, D>$/;"	i
MatrixN	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^impl<N, D: Dim> MatrixN<N, D>$/;"	i
MatrixNM	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type MatrixNM<N, R, C> = Matrix<N, R, C, Owned<N, R, C>>;$/;"	T
MatrixSum	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^pub type MatrixSum<N, R1, C1, R2, C2> =$/;"	T
MatrixVec	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_vec.rs	/^impl<N, R: Dim, C: Dim> MatrixVec<N, R, C> {$/;"	i
MatrixVec	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_vec.rs	/^pub struct MatrixVec<N, R: Dim, C: Dim> {$/;"	s
MeetSemilattice	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/lattice.rs	/^        impl MeetSemilattice for $T {$/;"	i
MeetSemilattice	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/lattice.rs	/^pub trait MeetSemilattice: Sized {$/;"	t
MeetSemilattice for Id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^impl<O: Operator> MeetSemilattice for Id<O> {$/;"	i
MeetSemilattice for MatrixMN	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^impl<N, R: Dim, C: Dim> MeetSemilattice for MatrixMN<N, R, C>$/;"	i
MeetSemilattice for Point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_alga.rs	/^impl<N, D: DimName> MeetSemilattice for Point<N, D>$/;"	i
Mesh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/mesh.rs	/^impl Mesh {$/;"	i
Mesh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/mesh.rs	/^pub struct Mesh {$/;"	s
MeshManager	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/mesh_manager.rs	/^impl MeshManager {$/;"	i
MeshManager	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/mesh_manager.rs	/^pub struct MeshManager {$/;"	s
Module	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/specialized.rs	/^pub trait Module$/;"	t
Module for MatrixMN	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^impl<N, R: DimName, C: DimName> Module for MatrixMN<N, R, C>$/;"	i
Module for Quaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^impl<N: Real> Module for Quaternion<N> {$/;"	i
MtlMaterial	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/loader/mtl.rs	/^impl MtlMaterial {$/;"	i
MtlMaterial	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/loader/mtl.rs	/^pub struct MtlMaterial {$/;"	s
Mul	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/wrapper.rs	/^impl<T, A, M: Operator> Mul<Wrapper<T, A, M>> for Wrapper<T, A, M>$/;"	i
Mul	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^impl<'a, 'b, N, R1: Dim, C1: Dim, R2: Dim, C2: Dim, SA, SB> Mul<&'b Matrix<N, R2, C2, SB>>$/;"	i
Mul	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^impl<'a, N, R1: Dim, C1: Dim, R2: Dim, C2: Dim, SA, SB> Mul<Matrix<N, R2, C2, SB>>$/;"	i
Mul	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^impl<'b, N, R1: Dim, C1: Dim, R2: Dim, C2: Dim, SA, SB> Mul<&'b Matrix<N, R2, C2, SB>>$/;"	i
Mul	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^impl<N, R1: Dim, C1: Dim, R2: Dim, C2: Dim, SA, SB> Mul<Matrix<N, R2, C2, SB>>$/;"	i
Mul	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_ops.rs	/^        impl<'b, D: DimName> Mul<&'b Point<$T, D>> for $T$/;"	i
Mul	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_ops.rs	/^        impl<D: DimName> Mul<Point<$T, D>> for $T$/;"	i
Mul	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_ops.rs	/^        impl Mul<Quaternion<$T>> for $T {$/;"	i
Mul	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_ops.rs	/^        impl<'b> Mul<&'b Quaternion<$T>> for $T {$/;"	i
Mul	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_ops.rs	/^impl<'a, 'b, N: Real> Mul<&'b UnitComplex<N>> for &'a UnitComplex<N> {$/;"	i
Mul	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_ops.rs	/^impl<'a, N: Real> Mul<UnitComplex<N>> for &'a UnitComplex<N> {$/;"	i
Mul	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_ops.rs	/^impl<'b, N: Real> Mul<&'b UnitComplex<N>> for UnitComplex<N> {$/;"	i
Mul	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_ops.rs	/^impl<N: Real> Mul<UnitComplex<N>> for UnitComplex<N> {$/;"	i
Mul for Id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^impl Mul<Id> for Id {$/;"	i
MulAdd	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/mul_add.rs	/^pub trait MulAdd<A = Self, B = Self> {$/;"	t
MulAdd for f32	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/mul_add.rs	/^impl MulAdd<f32, f32> for f32 {$/;"	i
MulAdd for f64	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/mul_add.rs	/^impl MulAdd<f64, f64> for f64 {$/;"	i
MulAddAssign	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/mul_add.rs	/^pub trait MulAddAssign<A = Self, B = Self> {$/;"	t
MulAddAssign for f32	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/mul_add.rs	/^impl MulAddAssign<f32, f32> for f32 {$/;"	i
MulAddAssign for f64	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/mul_add.rs	/^impl MulAddAssign<f64, f64> for f64 {$/;"	i
MulAssign	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^impl<'b, N, R1, C1, R2, SA, SB> MulAssign<&'b Matrix<N, R2, C1, SB>> for Matrix<N, R1, C1, SA>$/;"	i
MulAssign	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^impl<N, R1, C1, R2, SA, SB> MulAssign<Matrix<N, R2, C1, SB>> for Matrix<N, R1, C1, SA>$/;"	i
MulAssign	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_ops.rs	/^impl<'b, N: Real> MulAssign<&'b Rotation<N, U2>> for UnitComplex<N>$/;"	i
MulAssign	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_ops.rs	/^impl<'b, N: Real> MulAssign<&'b UnitComplex<N>> for Rotation<N, U2>$/;"	i
MulAssign	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_ops.rs	/^impl<'b, N: Real> MulAssign<&'b UnitComplex<N>> for UnitComplex<N> {$/;"	i
MulAssign	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_ops.rs	/^impl<N: Real> MulAssign<Rotation<N, U2>> for UnitComplex<N>$/;"	i
MulAssign	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_ops.rs	/^impl<N: Real> MulAssign<UnitComplex<N>> for Rotation<N, U2>$/;"	i
MulAssign	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_ops.rs	/^impl<N: Real> MulAssign<UnitComplex<N>> for UnitComplex<N> {$/;"	i
MulAssign for Id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^impl MulAssign<Id> for Id {$/;"	i
Multiplicative	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/operator.rs	/^pub struct Multiplicative;$/;"	s
NORMAL_FRAGMENT_SRC	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/builtin/normals_material.rs	/^pub static NORMAL_FRAGMENT_SRC: &'static str = ANOTHER_VERY_LONG_STRING;$/;"	c
NORMAL_VERTEX_SRC	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/builtin/normals_material.rs	/^pub static NORMAL_VERTEX_SRC: &'static str = A_VERY_LONG_STRING;$/;"	c
Name	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^            type Name = $D;$/;"	T
Name	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^    type Name = Self;$/;"	T
Name	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^    type Name = U1;$/;"	T
Name	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^    type Name = UInt<U, B>;$/;"	T
Name	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^    type Name: DimName<Value = Self>;$/;"	T
NamedDim	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^pub trait NamedDim: Sized + Any + Unsigned {$/;"	t
NamedDim for UInt	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^impl<U: Unsigned + DimName, B: Bit + Any + Debug + Copy + PartialEq + Send> NamedDim for UInt<U, B> {$/;"	i
NamedDim for typenum	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^        impl NamedDim for typenum::$D {$/;"	i
NamedDim for typenum	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^impl NamedDim for typenum::U1{$/;"	i
Neg	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^impl<'a, N, R: Dim, C: Dim, S> Neg for &'a Matrix<N, R, C, S>$/;"	i
Neg	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_ops.rs	/^impl<'a, N: Scalar + ClosedNeg, D: DimName> Neg for &'a Point<N, D>$/;"	i
Neg	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_ops.rs	/^impl<'a, N: Real> Neg for &'a Quaternion<N> {$/;"	i
Neg for Matrix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^impl<N, R: Dim, C: Dim, S> Neg for Matrix<N, R, C, S>$/;"	i
Neg for Point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_ops.rs	/^impl<N: Scalar + ClosedNeg, D: DimName> Neg for Point<N, D>$/;"	i
Neg for Quaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_ops.rs	/^impl<N: Real> Neg for Quaternion<N> {$/;"	i
Neg for Unit	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/unit.rs	/^impl<T: Neg> Neg for Unit<T> {$/;"	i
Neg for Wrapper	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/wrapper.rs	/^impl<T, A: Operator, M> Neg for Wrapper<T, A, M>$/;"	i
NodeId	/home/berger/playground/rust/slam/slam-rs/src/base/types.rs	/^pub type NodeId = u64;$/;"	T
NonUniformScaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/id.rs	/^    type NonUniformScaling = Id;$/;"	T
NonUniformScaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    type NonUniformScaling = R;$/;"	T
NonUniformScaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    type NonUniformScaling: AffineTransformation<E>;$/;"	T
NonUniformScaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_alga.rs	/^    type NonUniformScaling = Id;$/;"	T
NonUniformScaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^    type NonUniformScaling = Id;$/;"	T
NonUniformScaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    type NonUniformScaling = Id;$/;"	T
NonUniformScaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_alga.rs	/^    type NonUniformScaling = N;$/;"	T
NonUniformScaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_alga.rs	/^    type NonUniformScaling = Id;$/;"	T
NonUniformScaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_alga.rs	/^    type NonUniformScaling = Id;$/;"	T
Normal	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/loader/obj.rs	/^pub type Normal = Vector3<GLfloat>;$/;"	T
NormalsMaterial	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/builtin/normals_material.rs	/^impl NormalsMaterial {$/;"	i
NormalsMaterial	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/builtin/normals_material.rs	/^pub struct NormalsMaterial {$/;"	s
NormedSpace	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/vector.rs	/^pub trait NormedSpace: VectorSpace {$/;"	t
NormedSpace for MatrixMN	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^impl<N: Real, R: DimName, C: DimName> NormedSpace for MatrixMN<N, R, C>$/;"	i
NormedSpace for Quaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^impl<N: Real> NormedSpace for Quaternion<N> {$/;"	i
Num	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^pub trait Num: PartialEq + Zero + One + NumOps$/;"	t
Num for Wrapping	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^impl<T: Num> Num for Wrapping<T>$/;"	i
NumAssign	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^pub trait NumAssign: Num + NumAssignOps {}$/;"	t
NumAssign for T	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^impl<T> NumAssign for T where T: Num + NumAssignOps {}$/;"	i
NumAssignOps	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^pub trait NumAssignOps<Rhs = Self>$/;"	t
NumAssignOps for T	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^impl<T, Rhs> NumAssignOps<Rhs> for T$/;"	i
NumAssignRef	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^pub trait NumAssignRef: NumAssign + for<'r> NumAssignOps<&'r Self> {}$/;"	t
NumAssignRef for T	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^impl<T> NumAssignRef for T where T: NumAssign + for<'r> NumAssignOps<&'r T> {}$/;"	i
NumCast	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^        impl NumCast for $T {$/;"	i
NumCast	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^pub trait NumCast: Sized + ToPrimitive {$/;"	t
NumCast for Wrapping	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^impl<T: NumCast> NumCast for Wrapping<T> {$/;"	i
NumOps	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^pub trait NumOps<Rhs = Self, Output = Self>$/;"	t
NumOps for T	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^impl<T, Rhs, Output> NumOps<Rhs, Output> for T$/;"	i
NumRef	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^pub trait NumRef: Num + for<'r> NumOps<&'r Self> {}$/;"	t
NumRef for T	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^impl<T> NumRef for T where T: Num + for<'r> NumOps<&'r T> {}$/;"	i
OBJECT_FRAGMENT_SRC	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/builtin/object_material.rs	/^pub static OBJECT_FRAGMENT_SRC: &'static str = ANOTHER_VERY_LONG_STRING;$/;"	c
OBJECT_VERTEX_SRC	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/builtin/object_material.rs	/^pub static OBJECT_VERTEX_SRC:   &'static str = A_VERY_LONG_STRING;$/;"	c
Object	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/object.rs	/^impl Object {$/;"	i
Object	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/object.rs	/^pub struct Object {$/;"	s
ObjectData	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/object.rs	/^impl ObjectData {$/;"	i
ObjectData	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/object.rs	/^pub struct ObjectData {$/;"	s
ObjectMaterial	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/builtin/object_material.rs	/^impl ObjectMaterial {$/;"	i
ObjectMaterial	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/builtin/object_material.rs	/^pub struct ObjectMaterial {$/;"	s
OculusStereo	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/oculus_stereo.rs	/^impl OculusStereo {$/;"	i
OculusStereo	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/oculus_stereo.rs	/^pub struct OculusStereo {$/;"	s
OffscreenBuffers	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/framebuffer_manager.rs	/^pub struct OffscreenBuffers {$/;"	s
One	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/identities.rs	/^        impl One for $t {$/;"	i
One	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/identities.rs	/^pub trait One: Sized + Mul<Self, Output = Self> {$/;"	t
One for Id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^impl One for Id {$/;"	i
One for MatrixN	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^impl<N, D: DimName> One for MatrixN<N, D>$/;"	i
One for Quaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_construction.rs	/^impl<N: Real> One for Quaternion<N> {$/;"	i
One for Rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_construction.rs	/^impl<N, D: DimName> One for Rotation<N, D>$/;"	i
One for Similarity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_construction.rs	/^impl<N: Real, D: DimName, R> One for Similarity<N, D, R>$/;"	i
One for Translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_construction.rs	/^impl<N: Scalar + Zero + ClosedAdd, D: DimName> One for Translation<N, D>$/;"	i
One for UnitComplex	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_construction.rs	/^impl<N: Real> One for UnitComplex<N> {$/;"	i
One for UnitQuaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_construction.rs	/^impl<N: Real> One for UnitQuaternion<N> {$/;"	i
One for Wrapping	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/identities.rs	/^impl<T: One> One for Wrapping<T> where Wrapping<T>: Mul<Output=Wrapping<T>> {$/;"	i
Operator	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/operator.rs	/^pub trait Operator: Copy {$/;"	t
Operator for AbstractOperator	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/operator.rs	/^impl Operator for AbstractOperator {$/;"	i
Operator for Additive	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/operator.rs	/^impl Operator for Additive {$/;"	i
Operator for Multiplicative	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/operator.rs	/^impl Operator for Multiplicative {$/;"	i
OrthogonalTransformation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^pub trait OrthogonalTransformation<E: EuclideanSpace>$/;"	t
OrthogonalTransformation for Id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/id.rs	/^impl<E: EuclideanSpace> OrthogonalTransformation<E> for Id {}$/;"	i
Orthographic3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/orthographic.rs	/^impl<N: Real> Orthographic3<N> {$/;"	i
Orthographic3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/orthographic.rs	/^pub struct Orthographic3<N: Real> {$/;"	s
Output	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^    type Output = Id;$/;"	T
Output	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/wrapper.rs	/^    type Output = Self;$/;"	T
Output	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^            type Output = <$ResOp<D1::Value, D2::Value> as NamedDim>::Name;$/;"	T
Output	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^            type Output = Dynamic;$/;"	T
Output	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^            type Output: Dim;$/;"	T
Output	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^            type Output: DimName;$/;"	T
Output	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^    type Output = Dynamic;$/;"	T
Output	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^            type Output = MatrixMN<$T, R, C>;$/;"	T
Output	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^            type Output = MatrixMN<N, R, C>;$/;"	T
Output	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^            type Output = MatrixSum<N, R1, C1, R2, C2>;$/;"	T
Output	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^            type Output = MatrixSum<N, R2, C2, R1, C1>;$/;"	T
Output	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^    type Output = MatrixMN<N, R, C>;$/;"	T
Output	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^    type Output = MatrixMN<N, R1, C2>;$/;"	T
Output	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^    type Output = N;$/;"	T
Output	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/unit.rs	/^    type Output = Unit<T::Output>;$/;"	T
Output	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_ops.rs	/^            type Output = $Output;$/;"	T
Output	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/op_macros.rs	/^            type Output = $Result;$/;"	T
Output	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_ops.rs	/^            type Output = Point<$T, D>;$/;"	T
Output	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_ops.rs	/^            type Output = Point<N, D>;$/;"	T
Output	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_ops.rs	/^    type Output = N;$/;"	T
Output	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_ops.rs	/^    type Output = Point<N, D>;$/;"	T
Output	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_ops.rs	/^            type Output = $Result;$/;"	T
Output	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_ops.rs	/^            type Output = Quaternion<$T>;$/;"	T
Output	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_ops.rs	/^            type Output = Quaternion<N>;$/;"	T
Output	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_ops.rs	/^    type Output = N;$/;"	T
Output	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_ops.rs	/^    type Output = Quaternion<N>;$/;"	T
Output	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_ops.rs	/^    type Output = N;$/;"	T
Output	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_ops.rs	/^            type Output = $Output;$/;"	T
Output	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform_ops.rs	/^    type Output = N;$/;"	T
Output	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_ops.rs	/^            type Output = $Result;$/;"	T
Output	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_ops.rs	/^    type Output = UnitComplex<N>;$/;"	T
Output	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/inv.rs	/^    type Output = f32;$/;"	T
Output	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/inv.rs	/^    type Output = f64;$/;"	T
Output	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/inv.rs	/^    type Output;$/;"	T
Output	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/mul_add.rs	/^            type Output = Self;$/;"	T
Output	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/mul_add.rs	/^    type Output = Self;$/;"	T
Output	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/mul_add.rs	/^    type Output;$/;"	T
Output	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/pow.rs	/^            type Output = $t;$/;"	T
Output	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/pow.rs	/^    type Output;$/;"	T
Owned	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/storage.rs	/^pub type Owned<N, R, C = U1> = <DefaultAllocator as Allocator<N, R, C>>::Buffer;$/;"	T
PIS_IN_180	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^        const PIS_IN_180: f32 = 57.2957795130823208767981548141051703_f32;$/;"	c
POINTS_FRAGMENT_SRC	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/point_renderer.rs	/^pub static POINTS_FRAGMENT_SRC: &'static str = ANOTHER_VERY_LONG_STRING;$/;"	c
POINTS_VERTEX_SRC	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/point_renderer.rs	/^pub static POINTS_VERTEX_SRC:   &'static str = A_VERY_LONG_STRING;$/;"	c
ParseFloatError	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^pub struct ParseFloatError {$/;"	s
PartialEq for Id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^impl<O: Operator> PartialEq for Id<O> {$/;"	i
PartialEq for Isometry	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry.rs	/^impl<N: Real, D: DimName, R> PartialEq for Isometry<N, D, R>$/;"	i
PartialEq for Matrix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^impl<N, R: Dim, C: Dim, S> PartialEq for Matrix<N, R, C, S>$/;"	i
PartialEq for MatrixArray	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^impl<N, R, C> PartialEq for MatrixArray<N, R, C>$/;"	i
PartialEq for Orthographic3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/orthographic.rs	/^impl<N: Real> PartialEq for Orthographic3<N> {$/;"	i
PartialEq for Perspective3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/perspective.rs	/^impl<N: Real> PartialEq for Perspective3<N> {$/;"	i
PartialEq for Point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^impl<N: Scalar, D: DimName> PartialEq for Point<N, D>$/;"	i
PartialEq for Quaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^impl<N: Real> PartialEq for Quaternion<N> {$/;"	i
PartialEq for Rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation.rs	/^impl<N: Scalar + PartialEq, D: DimName> PartialEq for Rotation<N, D>$/;"	i
PartialEq for Similarity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity.rs	/^impl<N: Real, D: DimName, R> PartialEq for Similarity<N, D, R>$/;"	i
PartialEq for Translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation.rs	/^impl<N: Scalar + PartialEq, D: DimName> PartialEq for Translation<N, D>$/;"	i
PartialEq for Wrapper	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/wrapper.rs	/^impl<T: PartialEq, A, M> PartialEq for Wrapper<T, A, M> {$/;"	i
PartialOrd for Id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^impl<O: Operator> PartialOrd for Id<O> {$/;"	i
PartialOrd for Matrix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^impl<N, R: Dim, C: Dim, S> PartialOrd for Matrix<N, R, C, S>$/;"	i
PartialOrd for Point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^impl<N: Scalar + PartialOrd, D: DimName> PartialOrd for Point<N, D>$/;"	i
PartialOrd for Wrapper	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/wrapper.rs	/^impl<T: PartialOrd, A, M> PartialOrd for Wrapper<T, A, M> {$/;"	i
PermutationSequence	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/permutation_sequence.rs	/^impl PermutationSequence<Dynamic>$/;"	i
PermutationSequence	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/permutation_sequence.rs	/^impl<D: Dim> PermutationSequence<D>$/;"	i
PermutationSequence	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/permutation_sequence.rs	/^impl<D: DimName> PermutationSequence<D>$/;"	i
PermutationSequence	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/permutation_sequence.rs	/^pub struct PermutationSequence<D: Dim>$/;"	s
Perspective3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/perspective.rs	/^impl<N: Real> Perspective3<N> {$/;"	i
Perspective3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/perspective.rs	/^pub struct Perspective3<N: Scalar> {$/;"	s
Point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^impl<N: Scalar, D: DimName> Point<N, D>$/;"	i
Point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^pub struct Point<N: Scalar, D: DimName>$/;"	s
Point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_construction.rs	/^        impl<N: Scalar> Point<N, $D>$/;"	i
Point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_construction.rs	/^impl<N: Scalar, D: DimName> Point<N, D>$/;"	i
Point1	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_alias.rs	/^pub type Point1<N> = Point<N, U1>;$/;"	T
Point2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_alias.rs	/^pub type Point2<N> = Point<N, U2>;$/;"	T
Point3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_alias.rs	/^pub type Point3<N> = Point<N, U3>;$/;"	T
Point4	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_alias.rs	/^pub type Point4<N> = Point<N, U4>;$/;"	T
Point5	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_alias.rs	/^pub type Point5<N> = Point<N, U5>;$/;"	T
Point6	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_alias.rs	/^pub type Point6<N> = Point<N, U6>;$/;"	T
PointRenderer	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/point_renderer.rs	/^impl PointRenderer {$/;"	i
PointRenderer	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/point_renderer.rs	/^pub struct PointRenderer {$/;"	s
Pose3D	/home/berger/playground/rust/slam/slam-rs/src/geometry/poses.rs	/^pub struct Pose3D<T: na::Real> {$/;"	s
PoseId	/home/berger/playground/rust/slam/slam-rs/src/base/types.rs	/^pub type PoseId = NodeId;$/;"	T
PoseTrait	/home/berger/playground/rust/slam/slam-rs/src/geometry/poses.rs	/^pub trait PoseTrait {$/;"	t
PoseTrait for Pose3D	/home/berger/playground/rust/slam/slam-rs/src/geometry/poses.rs	/^impl<T> PoseTrait for Pose3D<T>$/;"	i
PostProcessingEffect	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/post_processing_effect.rs	/^pub trait PostProcessingEffect {$/;"	t
PostProcessingEffect for Grayscales	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/grayscales.rs	/^impl PostProcessingEffect for Grayscales {$/;"	i
PostProcessingEffect for OculusStereo	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/oculus_stereo.rs	/^impl PostProcessingEffect for OculusStereo {$/;"	i
PostProcessingEffect for SobelEdgeHighlight	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/sobel_edge_highlight.rs	/^impl PostProcessingEffect for SobelEdgeHighlight {$/;"	i
PostProcessingEffect for Waves	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/waves.rs	/^impl PostProcessingEffect for Waves {$/;"	i
Pow	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/pow.rs	/^        impl Pow<$rhs> for $t {$/;"	i
Pow	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/pow.rs	/^        impl<'a, 'b> Pow<&'a $rhs> for &'b $t {$/;"	i
Pow	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/pow.rs	/^        impl<'a> Pow<$rhs> for &'a $t {$/;"	i
Pow	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/pow.rs	/^        impl<'a> Pow<&'a $rhs> for $t {$/;"	i
Pow	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/pow.rs	/^pub trait Pow<RHS> {$/;"	t
PrimInt	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/int.rs	/^        impl PrimInt for $T {$/;"	i
PrimInt	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/int.rs	/^pub trait PrimInt$/;"	t
Projective2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform_alias.rs	/^pub type Projective2<N> = Transform<N, U2, TProjective>;$/;"	T
Projective3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform_alias.rs	/^pub type Projective3<N> = Transform<N, U3, TProjective>;$/;"	T
ProjectiveTransformation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^pub trait ProjectiveTransformation<E: EuclideanSpace>$/;"	t
ProjectiveTransformation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_alga.rs	/^impl<N: Real, D: DimName, R> ProjectiveTransformation<Point<N, D>> for Isometry<N, D, R>$/;"	i
ProjectiveTransformation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^impl<N: Real> ProjectiveTransformation<Point3<N>> for UnitQuaternion<N> {$/;"	i
ProjectiveTransformation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^impl<N: Real, D: DimName> ProjectiveTransformation<Point<N, D>> for Rotation<N, D>$/;"	i
ProjectiveTransformation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_alga.rs	/^impl<N: Real, D: DimName, R> ProjectiveTransformation<Point<N, D>> for Similarity<N, D, R>$/;"	i
ProjectiveTransformation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_alga.rs	/^impl<N: Real, D: DimName> ProjectiveTransformation<Point<N, D>> for Translation<N, D>$/;"	i
ProjectiveTransformation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_alga.rs	/^impl<N: Real> ProjectiveTransformation<Point2<N>> for UnitComplex<N>$/;"	i
ProjectiveTransformation for Id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/id.rs	/^impl<E: EuclideanSpace> ProjectiveTransformation<E> for Id {$/;"	i
ProjectiveTransformation for R	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^impl<R, E> ProjectiveTransformation<E> for R$/;"	i
QR	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/qr.rs	/^pub struct QR<N: Real, R: DimMin<C>, C: Dim>$/;"	s
Quaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^impl<N: Real> Quaternion<N> {$/;"	i
Quaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^pub struct Quaternion<N: Real> {$/;"	s
Quaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_construction.rs	/^impl<N: Real> Quaternion<N> {$/;"	i
RStride	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^    type RStride = U1;$/;"	T
RStride	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^            type RStride = RStride;$/;"	T
RStride	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_vec.rs	/^    type RStride = U1;$/;"	T
RStride	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/storage.rs	/^    type RStride: Dim;$/;"	T
RStride	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/storage.rs	/^pub type RStride<N, R, C = U1> = <<DefaultAllocator as Allocator<N, R, C>>::Buffer as Storage<N, R, C>>::RStride;$/;"	T
Rand for Isometry	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_construction.rs	/^impl<N: Real + Rand, D: DimName, R> Rand for Isometry<N, D, R>$/;"	i
Rand for MatrixMN	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^impl<N: Scalar + Rand, R: Dim, C: Dim> Rand for MatrixMN<N, R, C>$/;"	i
Rand for Orthographic3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/orthographic.rs	/^impl<N: Real + Rand> Rand for Orthographic3<N> {$/;"	i
Rand for Perspective3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/perspective.rs	/^impl<N: Real + Rand> Rand for Perspective3<N> {$/;"	i
Rand for Point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_construction.rs	/^impl<N: Scalar + Rand, D: DimName> Rand for Point<N, D>$/;"	i
Rand for Quaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_construction.rs	/^impl<N: Real + Rand> Rand for Quaternion<N> {$/;"	i
Rand for Rotation2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_specialization.rs	/^impl<N: Real + Rand> Rand for Rotation2<N> {$/;"	i
Rand for Rotation3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_specialization.rs	/^impl<N: Real + Rand> Rand for Rotation3<N> {$/;"	i
Rand for Similarity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_construction.rs	/^impl<N: Real + Rand, D: DimName, R> Rand for Similarity<N, D, R>$/;"	i
Rand for Translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_construction.rs	/^impl<N: Scalar + Rand, D: DimName> Rand for Translation<N, D>$/;"	i
Rand for UnitComplex	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_construction.rs	/^impl<N: Real + Rand> Rand for UnitComplex<N> {$/;"	i
Rand for UnitQuaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_construction.rs	/^impl<N: Real + Rand> Rand for UnitQuaternion<N> {$/;"	i
RandomOrthogonal	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/debug/random_orthogonal.rs	/^impl<N: Real, D: Dim> RandomOrthogonal<N, D>$/;"	i
RandomOrthogonal	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/debug/random_orthogonal.rs	/^pub struct RandomOrthogonal<N: Real, D: Dim = Dynamic>$/;"	s
RandomSDP	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/debug/random_sdp.rs	/^impl<N: Real, D: Dim> RandomSDP<N, D>$/;"	i
RandomSDP	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/debug/random_sdp.rs	/^pub struct RandomSDP<N: Real, D: Dim = Dynamic>$/;"	s
Real	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^        impl Real for $T {$/;"	i
Real	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^pub trait Real$/;"	t
Real	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/vector.rs	/^    type Real: Real;$/;"	T
Real	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^    type Real = N;$/;"	T
Real	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_alga.rs	/^    type Real        = N;$/;"	T
Real	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^pub trait Real$/;"	t
Real for T	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^impl<T: Float> Real for T {$/;"	i
RealEigen	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/eigen.rs	/^impl<N: Real, D: Dim> RealEigen<N, D>$/;"	i
RealEigen	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/eigen.rs	/^pub struct RealEigen<N: Real, D: Dim>$/;"	s
RealSchur	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/schur.rs	/^impl<N: Real, D: Dim> RealSchur<N, D>$/;"	i
RealSchur	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/schur.rs	/^pub struct RealSchur<N: Real, D: Dim>$/;"	s
Reallocator	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/allocator.rs	/^pub trait Reallocator<N: Scalar, RFrom: Dim, CFrom: Dim, RTo: Dim, CTo: Dim>:$/;"	t
Reallocator for DefaultAllocator	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/default_allocator.rs	/^impl<N: Scalar, CFrom: Dim, CTo: Dim> Reallocator<N, Dynamic, CFrom, Dynamic, CTo> for DefaultAllocator {$/;"	i
Reallocator for DefaultAllocator	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/default_allocator.rs	/^impl<N: Scalar, CFrom: Dim, RTo: DimName> Reallocator<N, Dynamic, CFrom, RTo, Dynamic> for DefaultAllocator {$/;"	i
Reallocator for DefaultAllocator	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/default_allocator.rs	/^impl<N: Scalar, RFrom, CFrom, CTo> Reallocator<N, RFrom, CFrom, Dynamic, CTo> for DefaultAllocator$/;"	i
Reallocator for DefaultAllocator	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/default_allocator.rs	/^impl<N: Scalar, RFrom, CFrom, RTo, CTo> Reallocator<N, RFrom, CFrom, RTo, CTo> for DefaultAllocator$/;"	i
Reallocator for DefaultAllocator	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/default_allocator.rs	/^impl<N: Scalar, RFrom, CFrom, RTo> Reallocator<N, RFrom, CFrom, RTo, Dynamic> for DefaultAllocator$/;"	i
Reallocator for DefaultAllocator	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/default_allocator.rs	/^impl<N: Scalar, RFrom: DimName, CTo: Dim> Reallocator<N, RFrom, Dynamic, Dynamic, CTo> for DefaultAllocator {$/;"	i
Reallocator for DefaultAllocator	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/default_allocator.rs	/^impl<N: Scalar, RFrom: DimName, RTo: DimName> Reallocator<N, RFrom, Dynamic, RTo, Dynamic> for DefaultAllocator {$/;"	i
Recorder	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/tools/kiss3d_recording.rs	/^impl Recorder {$/;"	i
Recorder	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/tools/kiss3d_recording.rs	/^pub struct Recorder {$/;"	s
RefNum	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^pub trait RefNum<Base>: NumOps<Base, Base> + for<'r> NumOps<&'r Base, Base> {}$/;"	t
RefNum for T	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^impl<T, Base> RefNum<Base> for T where T: NumOps<Base, Base> + for<'r> NumOps<&'r Base, Base> {}$/;"	i
Reflection	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/reflection.rs	/^pub struct Reflection<N: Scalar, D: Dim, S: Storage<N, D>> {$/;"	s
RenderTarget	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/framebuffer_manager.rs	/^impl RenderTarget {$/;"	i
RenderTarget	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/framebuffer_manager.rs	/^pub enum RenderTarget {$/;"	g
Representative	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/constraint.rs	/^            type Representative = D;$/;"	T
Representative	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/constraint.rs	/^            type Representative: Dim;$/;"	T
Representative	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/constraint.rs	/^    type Representative = D;$/;"	T
Representative	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/constraint.rs	/^    type Representative: Dim;$/;"	T
Representative	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^            type Representative = $c;$/;"	T
Representative	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^    type Representative = T;$/;"	T
Representative	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^    type Representative: TCategory;$/;"	T
Ring	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/specialized.rs	/^    type Ring: RingCommutative;$/;"	T
Ring	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^    type Ring = N;$/;"	T
Ring	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^    type Ring = N;$/;"	T
Rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/id.rs	/^    type Rotation = Id;$/;"	T
Rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    type Rotation = Id;$/;"	T
Rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    type Rotation: Rotation<E>;$/;"	T
Rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^pub trait Rotation<E: EuclideanSpace>$/;"	t
Rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_alga.rs	/^    type Rotation          = R;$/;"	T
Rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^    type Rotation          = Self;$/;"	T
Rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^impl<N: Real> Rotation<Point3<N>> for UnitQuaternion<N> {$/;"	i
Rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation.rs	/^impl<N: Scalar, D: DimName> Rotation<N, D>$/;"	i
Rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation.rs	/^pub struct Rotation<N: Scalar, D: DimName>$/;"	s
Rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    type Rotation          = Self;$/;"	T
Rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_construction.rs	/^impl<N, D: DimName> Rotation<N, D>$/;"	i
Rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_alga.rs	/^    type Rotation          = R;$/;"	T
Rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_alga.rs	/^    type Rotation          = Id;$/;"	T
Rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_alga.rs	/^    type Rotation          = Self;$/;"	T
Rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_alga.rs	/^impl<N: Real> Rotation<Point2<N>> for UnitComplex<N>$/;"	i
Rotation for Id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/id.rs	/^impl<E: EuclideanSpace> Rotation<E> for Id {$/;"	i
Rotation2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alias.rs	/^pub type Rotation2<N> = Rotation<N, U2>;$/;"	T
Rotation2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_specialization.rs	/^impl<N: Real> Rotation2<N> {$/;"	i
Rotation3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alias.rs	/^pub type Rotation3<N> = Rotation<N, U3>;$/;"	T
Rotation3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_specialization.rs	/^impl<N: Real> Rotation3<N> {$/;"	i
Row	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/matrix.rs	/^    type Row: FiniteDimVectorSpace<Field = Self::Field>;$/;"	T
Row	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    type Row       = Matrix<N>;$/;"	T
RowDVector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type RowDVector<N> = Matrix<N, U1, Dynamic, MatrixVec<N, U1, Dynamic>>;$/;"	T
RowVector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^pub type RowVector<N, D, S> = Matrix<N, U1, D, S>;$/;"	T
RowVector1	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type RowVector1<N> = RowVectorN<N, U1>;$/;"	T
RowVector2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type RowVector2<N> = RowVectorN<N, U2>;$/;"	T
RowVector3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type RowVector3<N> = RowVectorN<N, U3>;$/;"	T
RowVector4	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type RowVector4<N> = RowVectorN<N, U4>;$/;"	T
RowVector5	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type RowVector5<N> = RowVectorN<N, U5>;$/;"	T
RowVector6	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type RowVector6<N> = RowVectorN<N, U6>;$/;"	T
RowVectorN	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type RowVectorN<N, D> = MatrixMN<N, U1, D>;$/;"	T
SMALL_DIM	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/blas.rs	/^       const SMALL_DIM: usize = 5;$/;"	c
SVD	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/svd.rs	/^pub struct SVD<N: Real, R: DimMin<C>, C: Dim>$/;"	s
SameDimension	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/constraint.rs	/^pub trait SameDimension<D1: Dim, D2: Dim>: SameNumberOfRows<D1, D2> + SameNumberOfColumns<D1, D2> {$/;"	t
SameDimension for ShapeConstraint	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/constraint.rs	/^impl<D: Dim> SameDimension<D, D> for ShapeConstraint {$/;"	i
SameDimension for ShapeConstraint	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/constraint.rs	/^impl<D: DimName> SameDimension<D, Dynamic> for ShapeConstraint {$/;"	i
SameDimension for ShapeConstraint	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/constraint.rs	/^impl<D: DimName> SameDimension<Dynamic, D> for ShapeConstraint {$/;"	i
SameShapeAllocator	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/allocator.rs	/^pub trait SameShapeAllocator<N, R1, C1, R2, C2>:$/;"	t
SameShapeAllocator for DefaultAllocator	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/allocator.rs	/^impl<N, R1, R2, C1, C2> SameShapeAllocator<N, R1, C1, R2, C2> for DefaultAllocator$/;"	i
SameShapeC	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/allocator.rs	/^pub type SameShapeC<C1, C2> = <ShapeConstraint as SameNumberOfColumns<C1, C2>>::Representative;$/;"	T
SameShapeR	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/allocator.rs	/^pub type SameShapeR<R1, R2> = <ShapeConstraint as SameNumberOfRows<R1, R2>>::Representative;$/;"	T
SameShapeStorage	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/storage.rs	/^pub type SameShapeStorage<N, R1, C1, R2, C2> = <DefaultAllocator as Allocator<N, SameShapeR<R1, R2>, SameShapeC<C1, C2>>>::Buffer;$/;"	T
SameShapeVectorAllocator	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/allocator.rs	/^pub trait SameShapeVectorAllocator<N, R1, R2>:$/;"	t
SameShapeVectorAllocator for DefaultAllocator	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/allocator.rs	/^impl<N, R1, R2> SameShapeVectorAllocator<N, R1, R2> for DefaultAllocator$/;"	i
Saturating	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/saturating.rs	/^pub trait Saturating {$/;"	t
Scalar	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/scalar.rs	/^pub trait Scalar: Copy + PartialEq + Debug + Any {$/;"	t
Scalar for T	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/scalar.rs	/^impl<T: Copy + PartialEq + Debug + Any> Scalar for T { }$/;"	i
Scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/id.rs	/^    type Scaling = Id;$/;"	T
Scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    type Scaling = R;$/;"	T
Scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    type Scaling: Scaling<E>;$/;"	T
Scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^pub trait Scaling<E: EuclideanSpace>$/;"	t
Scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_alga.rs	/^    type Scaling = Id;$/;"	T
Scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^    type Scaling  = Id;$/;"	T
Scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    type Scaling  = Id;$/;"	T
Scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_alga.rs	/^    type Scaling = N;$/;"	T
Scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_alga.rs	/^    type Scaling = Id;$/;"	T
Scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_alga.rs	/^    type Scaling  = Id;$/;"	T
Scaling for Id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/id.rs	/^impl<E: EuclideanSpace> Scaling<E> for Id {}$/;"	i
Scaling for R	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^impl<R, E> Scaling<E> for R$/;"	i
SceneNode	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^impl SceneNode {$/;"	i
SceneNode	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^pub struct SceneNode {$/;"	s
SceneNodeData	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^impl SceneNodeData {$/;"	i
SceneNodeData	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^pub struct SceneNodeData {$/;"	s
Serialize for Dynamic	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^impl Serialize for Dynamic {$/;"	i
Serialize for Matrix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^impl<N, R, C, S> Serialize for Matrix<N, R, C, S>$/;"	i
Serialize for MatrixArray	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^impl<N, R, C> Serialize for MatrixArray<N, R, C>$/;"	i
Serialize for Unit	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/unit.rs	/^impl<T: Serialize> Serialize for Unit<T> {$/;"	i
Shader	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/shader.rs	/^impl Shader {$/;"	i
Shader	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/shader.rs	/^pub struct Shader {$/;"	s
ShaderAttribute	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/shader.rs	/^impl<T: GLPrimitive> ShaderAttribute<T> {$/;"	i
ShaderAttribute	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/shader.rs	/^pub struct ShaderAttribute<T> {$/;"	s
ShaderUniform	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/shader.rs	/^impl<T: GLPrimitive> ShaderUniform<T> {$/;"	i
ShaderUniform	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/shader.rs	/^pub struct ShaderUniform<T> {$/;"	s
ShapeConstraint	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/constraint.rs	/^pub struct ShapeConstraint;$/;"	s
Signed	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/sign.rs	/^        impl Signed for $t {$/;"	i
Signed	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/sign.rs	/^pub trait Signed: Sized + Num + Neg<Output = Self> {$/;"	t
Signed for Wrapping	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/sign.rs	/^impl<T: Signed> Signed for Wrapping<T> where Wrapping<T>: Num + Neg<Output=Wrapping<T>>$/;"	i
Similarity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^pub trait Similarity<E: EuclideanSpace>$/;"	t
Similarity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_alga.rs	/^impl<N: Real, D: DimName, R> Similarity<Point<N, D>> for Isometry<N, D, R>$/;"	i
Similarity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^impl<N: Real> Similarity<Point3<N>> for UnitQuaternion<N> {$/;"	i
Similarity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^impl<N: Real, D: DimName> Similarity<Point<N, D>> for Rotation<N, D>$/;"	i
Similarity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity.rs	/^impl<N: Real, D: DimName, R> Similarity<N, D, R>$/;"	i
Similarity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity.rs	/^pub struct Similarity<N: Real, D: DimName, R>$/;"	s
Similarity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_construction.rs	/^        impl<N: Real> Similarity<N, U3, $Rot> {$/;"	i
Similarity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_construction.rs	/^impl<N: Real, D: DimName, R> Similarity<N, D, R>$/;"	i
Similarity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_construction.rs	/^impl<N: Real> Similarity<N, U2, Rotation2<N>> {$/;"	i
Similarity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_construction.rs	/^impl<N: Real> Similarity<N, U2, UnitComplex<N>> {$/;"	i
Similarity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_alga.rs	/^impl<N: Real, D: DimName> Similarity<Point<N, D>> for Translation<N, D>$/;"	i
Similarity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_alga.rs	/^impl<N: Real> Similarity<Point2<N>> for UnitComplex<N>$/;"	i
Similarity for Id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/id.rs	/^impl<E: EuclideanSpace> Similarity<E> for Id {$/;"	i
Similarity for R	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^impl<R, E> Similarity<E> for R$/;"	i
Similarity2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_alias.rs	/^pub type Similarity2<N> = Similarity<N, U2, UnitComplex<N>>;$/;"	T
Similarity3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_alias.rs	/^pub type Similarity3<N> = Similarity<N, U3, UnitQuaternion<N>>;$/;"	T
SimilarityMatrix2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_alias.rs	/^pub type SimilarityMatrix2<N> = Similarity<N, U2, Rotation2<N>>;$/;"	T
SimilarityMatrix3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_alias.rs	/^pub type SimilarityMatrix3<N> = Similarity<N, U3, Rotation3<N>>;$/;"	T
Size	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^    type Size = D;$/;"	T
Size	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^    type Size = Dynamic;$/;"	T
Size	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^    type Size = U1;$/;"	T
Size	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^    type Size: Dim;$/;"	T
SliceRange	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^pub trait SliceRange<D: Dim> {$/;"	t
SliceRange for Range	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^impl<D: Dim> SliceRange<D> for Range<usize> {$/;"	i
SliceRange for RangeFrom	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^impl<D: Dim> SliceRange<D> for RangeFrom<usize> {$/;"	i
SliceRange for RangeFull	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^impl<D: Dim> SliceRange<D> for RangeFull {$/;"	i
SliceRange for RangeTo	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^impl<D: Dim> SliceRange<D> for RangeTo<usize> {$/;"	i
SliceRange for usize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^impl<D: Dim> SliceRange<D> for usize {$/;"	i
SobelEdgeHighlight	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/sobel_edge_highlight.rs	/^impl SobelEdgeHighlight {$/;"	i
SobelEdgeHighlight	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/sobel_edge_highlight.rs	/^pub struct SobelEdgeHighlight {$/;"	s
SquareMatrix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/matrix.rs	/^pub trait SquareMatrix$/;"	t
SquareMatrix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^pub type SquareMatrix<N, D, S> = Matrix<N, D, D, S>;$/;"	T
SquareMatrix for Rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^impl<N: Real> SquareMatrix for Rotation<N> {$/;"	i
SquareMatrixMut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/matrix.rs	/^pub trait SquareMatrixMut$/;"	t
Storage	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^        unsafe impl<'a, N: Scalar, R: Dim, C: Dim, RStride: Dim, CStride: Dim> Storage<N, R, C>$/;"	i
Storage	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/storage.rs	/^pub unsafe trait Storage<N: Scalar, R: Dim, C: Dim = U1>: Debug + Sized {$/;"	t
Storage for MatrixArray	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^unsafe impl<N, R, C> Storage<N, R, C> for MatrixArray<N, R, C>$/;"	i
Storage for MatrixVec	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_vec.rs	/^unsafe impl<N: Scalar, C: Dim> Storage<N, Dynamic, C> for MatrixVec<N, Dynamic, C>$/;"	i
Storage for MatrixVec	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_vec.rs	/^unsafe impl<N: Scalar, R: DimName> Storage<N, R, Dynamic> for MatrixVec<N, R, Dynamic>$/;"	i
StorageMut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^unsafe impl<'a, N: Scalar, R: Dim, C: Dim, RStride: Dim, CStride: Dim> StorageMut<N, R, C>$/;"	i
StorageMut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/storage.rs	/^pub unsafe trait StorageMut<N: Scalar, R: Dim, C: Dim = U1>: Storage<N, R, C> {$/;"	t
StorageMut for MatrixArray	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^unsafe impl<N, R, C> StorageMut<N, R, C> for MatrixArray<N, R, C>$/;"	i
StorageMut for MatrixVec	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_vec.rs	/^unsafe impl<N: Scalar, C: Dim> StorageMut<N, Dynamic, C> for MatrixVec<N, Dynamic, C>$/;"	i
StorageMut for MatrixVec	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_vec.rs	/^unsafe impl<N: Scalar, R: DimName> StorageMut<N, R, Dynamic> for MatrixVec<N, R, Dynamic>$/;"	i
Sub	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/wrapper.rs	/^impl<T, A: Operator, M> Sub<Wrapper<T, A, M>> for Wrapper<T, A, M>$/;"	i
Sub for Dynamic	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^impl Sub<usize> for Dynamic {$/;"	i
SubTCategoryOf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^pub trait SubTCategoryOf<Other: TCategory>: TCategory { }$/;"	t
SubTCategoryOf for T1	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^impl<T1, T2> SubTCategoryOf<T2> for T1$/;"	i
SubsetOf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/subset.rs	/^        impl SubsetOf<$superset> for $subset {$/;"	i
SubsetOf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/subset.rs	/^pub trait SubsetOf<T>: Sized {$/;"	t
SubsetOf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/conversion.rs	/^impl<N1, N2, R1, C1, R2, C2> SubsetOf<MatrixMN<N2, R2, C2>> for MatrixMN<N1, R1, C1>$/;"	i
SubsetOf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_conversion.rs	/^impl<N1, N2, D, R, C> SubsetOf<Transform<N2, D, C>> for Isometry<N1, D, R>$/;"	i
SubsetOf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_conversion.rs	/^impl<N1, N2, D, R> SubsetOf<MatrixN<N2, DimNameSum<D, U1>>> for Isometry<N1, D, R>$/;"	i
SubsetOf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_conversion.rs	/^impl<N1, N2, D: DimName, R1, R2> SubsetOf<Isometry<N2, D, R2>> for Isometry<N1, D, R1>$/;"	i
SubsetOf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_conversion.rs	/^impl<N1, N2, D: DimName, R1, R2> SubsetOf<Similarity<N2, D, R2>> for Isometry<N1, D, R1>$/;"	i
SubsetOf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_conversion.rs	/^impl<N1, N2, D> SubsetOf<Point<N2, D>> for Point<N1, D>$/;"	i
SubsetOf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_conversion.rs	/^impl<N1, N2, D> SubsetOf<VectorN<N2, DimNameSum<D, U1>>> for Point<N1, D>$/;"	i
SubsetOf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_conversion.rs	/^impl<N1, N2, C> SubsetOf<Transform<N2, U3, C>> for UnitQuaternion<N1>$/;"	i
SubsetOf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_conversion.rs	/^impl<N1, N2, R> SubsetOf<Isometry<N2, U3, R>> for UnitQuaternion<N1>$/;"	i
SubsetOf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_conversion.rs	/^impl<N1, N2, R> SubsetOf<Similarity<N2, U3, R>> for UnitQuaternion<N1>$/;"	i
SubsetOf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_conversion.rs	/^impl<N1, N2> SubsetOf<Quaternion<N2>> for Quaternion<N1>$/;"	i
SubsetOf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_conversion.rs	/^impl<N1, N2> SubsetOf<Rotation<N2, U3>> for UnitQuaternion<N1>$/;"	i
SubsetOf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_conversion.rs	/^impl<N1, N2> SubsetOf<UnitQuaternion<N2>> for UnitQuaternion<N1>$/;"	i
SubsetOf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_conversion.rs	/^impl<N1, N2, D, C> SubsetOf<Transform<N2, D, C>> for Rotation<N1, D>$/;"	i
SubsetOf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_conversion.rs	/^impl<N1, N2, D: DimName, R> SubsetOf<Isometry<N2, D, R>> for Rotation<N1, D>$/;"	i
SubsetOf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_conversion.rs	/^impl<N1, N2, D: DimName, R> SubsetOf<Similarity<N2, D, R>> for Rotation<N1, D>$/;"	i
SubsetOf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_conversion.rs	/^impl<N1, N2, D: DimName> SubsetOf<Rotation<N2, D>> for Rotation<N1, D>$/;"	i
SubsetOf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_conversion.rs	/^impl<N1, N2, D> SubsetOf<MatrixN<N2, DimNameSum<D, U1>>> for Rotation<N1, D>$/;"	i
SubsetOf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_conversion.rs	/^impl<N1, N2> SubsetOf<UnitComplex<N2>> for Rotation2<N1>$/;"	i
SubsetOf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_conversion.rs	/^impl<N1, N2> SubsetOf<UnitQuaternion<N2>> for Rotation3<N1>$/;"	i
SubsetOf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_conversion.rs	/^impl<N1, N2, D, R, C> SubsetOf<Transform<N2, D, C>> for Similarity<N1, D, R>$/;"	i
SubsetOf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_conversion.rs	/^impl<N1, N2, D, R> SubsetOf<MatrixN<N2, DimNameSum<D, U1>>> for Similarity<N1, D, R>$/;"	i
SubsetOf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_conversion.rs	/^impl<N1, N2, D: DimName, R1, R2> SubsetOf<Similarity<N2, D, R2>> for Similarity<N1, D, R1>$/;"	i
SubsetOf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform_conversion.rs	/^impl<N1, N2, D: DimName, C1, C2> SubsetOf<Transform<N2, D, C2>> for Transform<N1, D, C1>$/;"	i
SubsetOf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform_conversion.rs	/^impl<N1, N2, D: DimName, C> SubsetOf<MatrixN<N2, DimNameSum<D, U1>>> for Transform<N1, D, C>$/;"	i
SubsetOf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_conversion.rs	/^impl<N1, N2, D, C> SubsetOf<Transform<N2, D, C>> for Translation<N1, D>$/;"	i
SubsetOf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_conversion.rs	/^impl<N1, N2, D: DimName, R> SubsetOf<Isometry<N2, D, R>> for Translation<N1, D>$/;"	i
SubsetOf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_conversion.rs	/^impl<N1, N2, D: DimName, R> SubsetOf<Similarity<N2, D, R>> for Translation<N1, D>$/;"	i
SubsetOf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_conversion.rs	/^impl<N1, N2, D: DimName> SubsetOf<Translation<N2, D>> for Translation<N1, D>$/;"	i
SubsetOf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_conversion.rs	/^impl<N1, N2, D> SubsetOf<MatrixN<N2, DimNameSum<D, U1>>> for Translation<N1, D>$/;"	i
SubsetOf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_conversion.rs	/^impl<N1, N2, C> SubsetOf<Transform<N2, U2, C>> for UnitComplex<N1>$/;"	i
SubsetOf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_conversion.rs	/^impl<N1, N2, R> SubsetOf<Isometry<N2, U2, R>> for UnitComplex<N1>$/;"	i
SubsetOf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_conversion.rs	/^impl<N1, N2, R> SubsetOf<Similarity<N2, U2, R>> for UnitComplex<N1>$/;"	i
SubsetOf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_conversion.rs	/^impl<N1, N2> SubsetOf<Rotation2<N2>> for UnitComplex<N1>$/;"	i
SubsetOf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_conversion.rs	/^impl<N1, N2> SubsetOf<UnitComplex<N2>> for UnitComplex<N1>$/;"	i
SubsetOf for Unit	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/unit.rs	/^impl<T: NormedSpace> SubsetOf<T> for Unit<T>$/;"	i
SuperTCategoryOf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^        impl SuperTCategoryOf<$b> for $a { }$/;"	i
SuperTCategoryOf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^pub trait SuperTCategoryOf<Other: TCategory>: TCategory { }$/;"	t
SuperTCategoryOf for T	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^impl<T: TCategory> SuperTCategoryOf<T> for T { }$/;"	i
SupersetOf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/subset.rs	/^pub trait SupersetOf<T>: Sized {$/;"	t
SymmetricEigen	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/symmetric_eigen.rs	/^impl<N: Real, D: Dim> SymmetricEigen<N, D>$/;"	i
SymmetricEigen	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/symmetric_eigen.rs	/^pub struct SymmetricEigen<N: Real, D: Dim>$/;"	s
SymmetricTridiagonal	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/symmetric_tridiagonal.rs	/^pub struct SymmetricTridiagonal<N: Real, D: DimSub<U1>>$/;"	s
TAffine	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^pub enum TAffine { }$/;"	g
TCategory	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^pub trait TCategory: Any + Debug + Copy + PartialEq + Send {$/;"	t
TCategory for TAffine	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^impl TCategory for TAffine {$/;"	i
TCategory for TGeneral	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^impl TCategory for TGeneral {$/;"	i
TCategory for TProjective	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^impl TCategory for TProjective {$/;"	i
TCategoryMul	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^        impl TCategoryMul<$a> for $b {$/;"	i
TCategoryMul	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^pub trait TCategoryMul<Other: TCategory>: TCategory {$/;"	t
TCategoryMul for T	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^impl<T: TCategory> TCategoryMul<T> for T {$/;"	i
TEXT_FRAGMENT_SRC	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/text/renderer.rs	/^pub static TEXT_FRAGMENT_SRC: &'static str = ANOTHER_VERY_LONG_STRING;$/;"	c
TEXT_VERTEX_SRC	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/text/renderer.rs	/^pub static TEXT_VERTEX_SRC:   &'static str = A_VERY_LONG_STRING;$/;"	c
TGeneral	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^pub enum TGeneral { }$/;"	g
TProjective	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^pub enum TProjective { }$/;"	g
Target	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/coordinates.rs	/^            type Target = $Target<N>;$/;"	T
Target	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^    type Target = GenericArray<N, Prod<R::Value, C::Value>>;$/;"	T
Target	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_vec.rs	/^    type Target = Vec<N>;$/;"	T
Target	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/unit.rs	/^    type Target = T;$/;"	T
Target	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_coordinates.rs	/^            type Target = $Target<N>;$/;"	T
Target	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_coordinates.rs	/^    type Target = IJKW<N>;$/;"	T
TextRenderContext	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/text/renderer.rs	/^impl TextRenderContext {$/;"	i
TextRenderContext	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/text/renderer.rs	/^struct TextRenderContext {$/;"	s
TextRenderer	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/text/renderer.rs	/^impl TextRenderer {$/;"	i
TextRenderer	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/text/renderer.rs	/^pub struct TextRenderer {$/;"	s
Texture	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/texture_manager.rs	/^impl Texture {$/;"	i
Texture	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/texture_manager.rs	/^pub struct Texture {$/;"	s
TextureManager	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/texture_manager.rs	/^impl TextureManager {$/;"	i
TextureManager	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/texture_manager.rs	/^pub struct TextureManager {$/;"	s
ToPrimitive	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^        impl ToPrimitive for $T {$/;"	i
ToPrimitive	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^pub trait ToPrimitive {$/;"	t
ToPrimitive for Wrapping	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^impl<T: ToPrimitive> ToPrimitive for Wrapping<T> {$/;"	i
Transform	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^pub struct Transform<N: Real, D: DimNameAdd<U1>, C: TCategory>$/;"	s
Transform2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform_alias.rs	/^pub type Transform2<N>  = Transform<N, U2, TGeneral>;$/;"	T
Transform3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform_alias.rs	/^pub type Transform3<N>  = Transform<N, U3, TGeneral>;$/;"	T
Transformation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^pub trait Transformation<E: EuclideanSpace>: MultiplicativeMonoid {$/;"	t
Transformation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_alga.rs	/^impl<N: Real, D: DimName, R> Transformation<Point<N, D>> for Isometry<N, D, R>$/;"	i
Transformation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^impl<N: Real> Transformation<Point3<N>> for UnitQuaternion<N> {$/;"	i
Transformation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^impl<N: Real, D: DimName> Transformation<Point<N, D>> for Rotation<N, D>$/;"	i
Transformation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_alga.rs	/^impl<N: Real, D: DimName, R> Transformation<Point<N, D>> for Similarity<N, D, R>$/;"	i
Transformation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_alga.rs	/^impl<N: Real, D: DimName> Transformation<Point<N, D>> for Translation<N, D>$/;"	i
Transformation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_alga.rs	/^impl<N: Real> Transformation<Point2<N>> for UnitComplex<N>$/;"	i
Transformation for Id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/id.rs	/^impl<E: EuclideanSpace> Transformation<E> for Id {$/;"	i
Transformation for R	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^impl<R, E> Transformation<E> for R$/;"	i
Translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/id.rs	/^    type Translation = Id;$/;"	T
Translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    type Translation = Id;$/;"	T
Translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    type Translation: Translation<E>;$/;"	T
Translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^pub trait Translation<E: EuclideanSpace>$/;"	t
Translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/vector.rs	/^    type Translation: VectorSpace;$/;"	T
Translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_alga.rs	/^    type Translation       = Translation<N, D>;$/;"	T
Translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_alga.rs	/^    type Translation = VectorN<N, D>;$/;"	T
Translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^    type Translation       = Id;$/;"	T
Translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    type Translation       = Id;$/;"	T
Translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_alga.rs	/^    type Translation       = Translation<N, D>;$/;"	T
Translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation.rs	/^impl<N: Scalar, D: DimName> Translation<N, D>$/;"	i
Translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation.rs	/^pub struct Translation<N: Scalar, D: DimName>$/;"	s
Translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_alga.rs	/^    type Translation       = Self;$/;"	T
Translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_construction.rs	/^        impl<N: Scalar> Translation<N, $D>$/;"	i
Translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_construction.rs	/^impl<N: Scalar + Zero, D: DimName> Translation<N, D>$/;"	i
Translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_alga.rs	/^    type Translation       = Id;$/;"	T
Translation for Id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/id.rs	/^impl<E: EuclideanSpace> Translation<E> for Id {$/;"	i
Translation2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_alias.rs	/^pub type Translation2<N> = Translation<N, U2>;$/;"	T
Translation3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_alias.rs	/^pub type Translation3<N> = Translation<N, U3>;$/;"	T
Transpose	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/matrix.rs	/^    type Transpose: Matrix<Field = Self::Field, Row = Self::Column, Column = Self::Row>;$/;"	T
Transpose	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    type Transpose = Self;$/;"	T
U1	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^pub struct U1;$/;"	s
UV	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/loader/obj.rs	/^pub type UV     = Point2<GLfloat>;$/;"	T
UVS_FRAGMENT_SRC	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/builtin/uvs_material.rs	/^pub static UVS_FRAGMENT_SRC: &'static str = ANOTHER_VERY_LONG_STRING;$/;"	c
UVS_VERTEX_SRC	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/builtin/uvs_material.rs	/^pub static UVS_VERTEX_SRC: &'static str = A_VERY_LONG_STRING;$/;"	c
UncertaintyType	/home/berger/playground/rust/slam/slam-rs/src/base/types.rs	/^pub enum UncertaintyType {$/;"	g
Unit	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/unit.rs	/^impl<T: NormedSpace> Unit<T> {$/;"	i
Unit	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/unit.rs	/^impl<T> Unit<T> {$/;"	i
Unit	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/unit.rs	/^pub struct Unit<T> {$/;"	s
UnitComplex	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex.rs	/^impl<N: Real> UnitComplex<N> {$/;"	i
UnitComplex	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex.rs	/^pub type UnitComplex<N> = Unit<Complex<N>>;$/;"	T
UnitComplex	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_construction.rs	/^impl<N: Real> UnitComplex<N> {$/;"	i
UnitComplex	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_ops.rs	/^impl<N: Real> UnitComplex<N> {$/;"	i
UnitQuaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^impl<N: Real> UnitQuaternion<N> {$/;"	i
UnitQuaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^pub type UnitQuaternion<N> = Unit<Quaternion<N>>;$/;"	T
UnitQuaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_construction.rs	/^impl<N: Real> UnitQuaternion<N> {$/;"	i
Unsigned	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/sign.rs	/^pub trait Unsigned: Num {}$/;"	t
Unsigned for Wrapping	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/sign.rs	/^impl<T: Unsigned> Unsigned for Wrapping<T> where Wrapping<T>: Num {}$/;"	i
UvsMaterial	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/builtin/uvs_material.rs	/^impl UvsMaterial {$/;"	i
UvsMaterial	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/builtin/uvs_material.rs	/^pub struct UvsMaterial {$/;"	s
VERTEX_SHADER	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/grayscales.rs	/^static VERTEX_SHADER: &'static str =$/;"	c
VERTEX_SHADER	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/oculus_stereo.rs	/^static VERTEX_SHADER: &'static str =$/;"	c
VERTEX_SHADER	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/sobel_edge_highlight.rs	/^static VERTEX_SHADER: &'static str =$/;"	c
VERTEX_SHADER	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/waves.rs	/^static VERTEX_SHADER: &'static str =$/;"	c
Value	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^            type Value = typenum::$D;$/;"	T
Value	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^    type Value = Self;$/;"	T
Value	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^    type Value = UInt<U, B>;$/;"	T
Value	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^    type Value = typenum::U1;$/;"	T
Value	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^    type Value: NamedDim<Name = Self>;$/;"	T
Value	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^    type Value = MatrixArray<N, R, C>;$/;"	T
Vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/matrix.rs	/^    type Vector: FiniteDimVectorSpace<Field = Self::Field>;$/;"	T
Vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/blas.rs	/^impl<N, D: Dim, S> Vector<N, D, S>$/;"	i
Vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^pub type Vector<N, D, S> = Matrix<N, D, U1, S>;$/;"	T
Vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    type Vector = Matrix<N>;$/;"	T
Vector1	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Vector1<N> = VectorN<N, U1>;$/;"	T
Vector2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Vector2<N> = VectorN<N, U2>;$/;"	T
Vector3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Vector3<N> = VectorN<N, U3>;$/;"	T
Vector4	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Vector4<N> = VectorN<N, U4>;$/;"	T
Vector5	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Vector5<N> = VectorN<N, U5>;$/;"	T
Vector6	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type Vector6<N> = VectorN<N, U6>;$/;"	T
VectorN	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/alias.rs	/^pub type VectorN<N, D> = MatrixMN<N, D, U1>;$/;"	T
VectorN	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^impl<N, R: DimName> VectorN<N, R>$/;"	i
VectorSpace	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/vector.rs	/^pub trait VectorSpace: Module<Ring = <Self as VectorSpace>::Field>$/;"	t
VectorSpace for MatrixMN	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^impl<N, R: DimName, C: DimName> VectorSpace for MatrixMN<N, R, C>$/;"	i
VectorSpace for Quaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^impl<N: Real> VectorSpace for Quaternion<N> {$/;"	i
VectorSum	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^pub type VectorSum<N, R1, R2> =$/;"	T
Visitor for MatrixArrayVisitor	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^impl<'a, N, R, C> Visitor<'a> for MatrixArrayVisitor<N, R, C>$/;"	i
Waves	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/waves.rs	/^impl Waves {$/;"	i
Waves	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/waves.rs	/^pub struct Waves {$/;"	s
Window	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^impl Window {$/;"	i
Window	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^pub struct Window {$/;"	s
Words	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/loader/obj.rs	/^pub type Words<'a> = Filter<Split<'a, fn(char) -> bool>, fn(&&str) -> bool>;$/;"	T
Wrapper	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/wrapper.rs	/^impl<T, A, M> Wrapper<T, A, M> {$/;"	i
Wrapper	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/wrapper.rs	/^pub struct Wrapper<T, A, M> {$/;"	s
WrappingAdd	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/wrapping.rs	/^pub trait WrappingAdd: Sized + Add<Self, Output=Self> {$/;"	t
WrappingAdd for Wrapping	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/wrapping.rs	/^impl<T: WrappingAdd> WrappingAdd for Wrapping<T> where Wrapping<T>: Add<Output = Wrapping<T>> {$/;"	i
WrappingMul	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/wrapping.rs	/^pub trait WrappingMul: Sized + Mul<Self, Output=Self> {$/;"	t
WrappingMul for Wrapping	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/wrapping.rs	/^impl<T: WrappingMul> WrappingMul for Wrapping<T> where Wrapping<T>: Mul<Output = Wrapping<T>> {$/;"	i
WrappingSub	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/wrapping.rs	/^pub trait WrappingSub: Sized + Sub<Self, Output=Self> {$/;"	t
WrappingSub for Wrapping	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/wrapping.rs	/^impl<T: WrappingSub> WrappingSub for Wrapping<T> where Wrapping<T>: Sub<Output = Wrapping<T>> {$/;"	i
Zero	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/identities.rs	/^        impl Zero for $t {$/;"	i
Zero	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/identities.rs	/^pub trait Zero: Sized + Add<Self, Output = Self> {$/;"	t
Zero for Id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^impl Zero for Id {$/;"	i
Zero for MatrixMN	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^impl<N, R: DimName, C: DimName> Zero for MatrixMN<N, R, C>$/;"	i
Zero for Quaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_construction.rs	/^impl<N: Real> Zero for Quaternion<N> {$/;"	i
Zero for Wrapping	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/identities.rs	/^impl<T: Zero> Zero for Wrapping<T> where Wrapping<T>: Add<Output=Wrapping<T>> {$/;"	i
a	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^    pub fn a() -> Self$/;"	f
a_axis	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^    pub fn a_axis() -> Unit<Self>$/;"	f
abs	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn abs(self) -> Self {$/;"	f
abs	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn abs(self) -> Self;$/;"	f
abs	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/componentwise.rs	/^    pub fn abs(&self) -> MatrixMN<N, R, C>$/;"	f
abs	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub fn abs<T: Signed>(a: &T) -> T {$/;"	f
abs	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn abs(self) -> Self {$/;"	f
abs	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn abs(self) -> Self;$/;"	f
abs	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn abs(self) -> Self;$/;"	f
abs	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/sign.rs	/^            fn abs(&self) -> $t {$/;"	f
abs	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/sign.rs	/^    fn abs(&self) -> Self {$/;"	f
abs	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/sign.rs	/^    fn abs(&self) -> Self;$/;"	f
abs	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/sign.rs	/^pub fn abs<T: Signed>(value: T) -> T {$/;"	f
abs_sub	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^            fn abs_sub(self, other: Self) -> Self {$/;"	f
abs_sub	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn abs_sub(self, other: Self) -> Self;$/;"	f
abs_sub	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn abs_sub(self, other: Self) -> Self;$/;"	f
abs_sub	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/sign.rs	/^            fn abs_sub(&self, other: &$t) -> $t {$/;"	f
abs_sub	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/sign.rs	/^    fn abs_sub(&self, other: &Self) -> Self {$/;"	f
abs_sub	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/sign.rs	/^    fn abs_sub(&self, other: &Self) -> Self;$/;"	f
abs_sub	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/sign.rs	/^pub fn abs_sub<T: Signed>(x: T, y: T) -> T {$/;"	f
acos	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn acos(self) -> Self {$/;"	f
acos	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn acos(self) -> Self;$/;"	f
acos	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn acos(self) -> Self;$/;"	f
acos	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn acos(self) -> Self;$/;"	f
acosh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn acosh(self) -> Self {$/;"	f
acosh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn acosh(self) -> Self;$/;"	f
acosh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn acosh(self) -> Self;$/;"	f
acosh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn acosh(self) -> Self;$/;"	f
activate	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/builtin/object_material.rs	/^    fn activate(&mut self) {$/;"	f
add	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^    fn add(self, _: Id) -> Id {$/;"	f
add	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/wrapper.rs	/^    fn add(self, lhs: Self) -> Self {$/;"	f
add	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/material_manager.rs	/^    pub fn add(&mut self, material: Rc<RefCell<Box<Material + 'static>>>, name: &str) {$/;"	f
add	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/mesh_manager.rs	/^    pub fn add(&mut self, mesh: Rc<RefCell<Mesh>>, name: &str) {$/;"	f
add	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/texture_manager.rs	/^    pub fn add(&mut self, path: &Path, name: &str) -> Rc<Texture> {$/;"	f
add	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^    fn add(self, rhs: usize) -> Dynamic {$/;"	f
add_assign	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^    fn add_assign(&mut self, _: Id) {$/;"	f
add_capsule	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn add_capsule(&mut self, r: f32, h: f32) -> SceneNode {$/;"	f
add_capsule	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn add_capsule(&mut self, r: GLfloat, h: GLfloat) -> SceneNode {$/;"	f
add_child	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn add_child(&mut self, node: SceneNode) {$/;"	f
add_cone	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn add_cone(&mut self, r: f32, h: f32) -> SceneNode {$/;"	f
add_cone	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn add_cone(&mut self, r: GLfloat, h: GLfloat) -> SceneNode {$/;"	f
add_cube	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn add_cube(&mut self, wx: f32, wy: f32, wz: f32) -> SceneNode {$/;"	f
add_cube	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn add_cube(&mut self, wx: GLfloat, wy: GLfloat, wz: GLfloat) -> SceneNode {$/;"	f
add_cylinder	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn add_cylinder(&mut self, r: f32, h: f32) -> SceneNode {$/;"	f
add_cylinder	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn add_cylinder(&mut self, r: GLfloat, h: GLfloat) -> SceneNode {$/;"	f
add_empty	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/texture_manager.rs	/^    pub fn add_empty(&mut self, name: &str) -> Rc<Texture> {$/;"	f
add_geom_with_name	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn add_geom_with_name(&mut self, geometry_name: &str, scale: Vector3<f32>) -> Option<SceneNode> {$/;"	f
add_geom_with_name	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn add_geom_with_name(&mut self, geometry_name: &str, scale: Vector3<f32>) -> Option<SceneNode> {$/;"	f
add_group	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn add_group(&mut self) -> SceneNode {$/;"	f
add_group	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn add_group(&mut self) -> SceneNode {$/;"	f
add_mesh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn add_mesh(&mut self, mesh: Rc<RefCell<Mesh>>, scale: Vector3<f32>) -> SceneNode {$/;"	f
add_mesh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn add_mesh(&mut self, mesh: Rc<RefCell<Mesh>>, scale: Vector3<f32>) -> SceneNode {$/;"	f
add_obj	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn add_obj(&mut self, path: &Path, mtl_dir: &Path, scale: Vector3<f32>) -> SceneNode {$/;"	f
add_obj	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn add_obj(&mut self, path: &Path, mtl_dir: &Path, scale: Vector3<f32>) -> SceneNode {$/;"	f
add_object	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn add_object(&mut self, local_scale: Vector3<f32>, local_transform: Isometry3<f32>, object: Object) -> SceneNode {$/;"	f
add_quad	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn add_quad(&mut self, w: f32, h: f32, usubdivs: usize, vsubdivs: usize) -> SceneNode {$/;"	f
add_quad	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn add_quad(&mut self, w: f32, h: f32, usubdivs: usize, vsubdivs: usize) -> SceneNode {$/;"	f
add_quad_with_vertices	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn add_quad_with_vertices(&mut self, vertices: &[Point3<f32>], nhpoints: usize, nvpoints: usize) -> SceneNode {$/;"	f
add_quad_with_vertices	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn add_quad_with_vertices(&mut self,$/;"	f
add_scalar	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^    pub fn add_scalar(&self, rhs: N) -> MatrixMN<N, R, C>$/;"	f
add_scalar_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^    pub fn add_scalar_mut(&mut self, rhs: N)$/;"	f
add_sphere	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn add_sphere(&mut self, r: f32) -> SceneNode {$/;"	f
add_sphere	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn add_sphere(&mut self, r: GLfloat) -> SceneNode {$/;"	f
add_sub_assign_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/op_macros.rs	/^macro_rules! add_sub_assign_impl($/;"	d
add_sub_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/op_macros.rs	/^macro_rules! add_sub_impl($/;"	d
add_texture	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn add_texture(&mut self, path: &Path, name: &str) -> Rc<Texture> {$/;"	f
add_trimesh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/mesh_manager.rs	/^    pub fn add_trimesh(&mut self, descr: TriMesh3<f32>, dynamic_draw: bool, name: &str) -> Rc<RefCell<Mesh>> {$/;"	f
add_trimesh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn add_trimesh(&mut self, descr: TriMesh3<f32>, scale: Vector3<f32>) -> SceneNode {$/;"	f
add_trimesh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn add_trimesh(&mut self, descr: TriMesh3<f32>, scale: Vector3<f32>) -> SceneNode {$/;"	f
alias	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/mod.rs	/^mod alias;$/;"	m
allocate_from_iterator	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/allocator.rs	/^    fn allocate_from_iterator<I: IntoIterator<Item = N>>(nrows: R, ncols: C, iter: I) -> Self::Buffer;$/;"	f
allocate_from_iterator	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/default_allocator.rs	/^    fn allocate_from_iterator<I: IntoIterator<Item = N>>(nrows: Dynamic, ncols: C, iter: I) -> Self::Buffer {$/;"	f
allocate_from_iterator	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/default_allocator.rs	/^    fn allocate_from_iterator<I: IntoIterator<Item = N>>(nrows: R, ncols: C, iter: I) -> Self::Buffer {$/;"	f
allocate_from_iterator	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/default_allocator.rs	/^    fn allocate_from_iterator<I: IntoIterator<Item = N>>(nrows: R, ncols: Dynamic, iter: I) -> Self::Buffer {$/;"	f
allocate_uninitialized	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/allocator.rs	/^    unsafe fn allocate_uninitialized(nrows: R, ncols: C) -> Self::Buffer;$/;"	f
allocate_uninitialized	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/default_allocator.rs	/^    unsafe fn allocate_uninitialized(_: R, _: C) -> Self::Buffer {$/;"	f
allocate_uninitialized	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/default_allocator.rs	/^    unsafe fn allocate_uninitialized(nrows: Dynamic, ncols: C) -> Self::Buffer {$/;"	f
allocate_uninitialized	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/default_allocator.rs	/^    unsafe fn allocate_uninitialized(nrows: R, ncols: Dynamic) -> Self::Buffer {$/;"	f
allocator	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/mod.rs	/^pub mod allocator;$/;"	m
amax	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^    pub fn amax(&self) -> N {$/;"	f
amin	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^    pub fn amin(&self) -> N {$/;"	f
angle	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/vector.rs	/^    fn angle(&self, other: &Self) -> Self::Real {$/;"	f
angle	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn angle<R2: Dim, C2: Dim, SB>(&self, other: &Matrix<N, R2, C2, SB>) -> N$/;"	f
angle	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^    fn angle(&self, other: &Self) -> N {$/;"	f
angle	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    pub fn angle(&self) -> N {$/;"	f
angle	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_specialization.rs	/^    pub fn angle(&self) -> N {$/;"	f
angle	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex.rs	/^    pub fn angle(&self) -> N {$/;"	f
angle	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub fn angle<V: InnerSpace>(a: &V, b: &V) -> V::Real {$/;"	f
angle_to	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    pub fn angle_to(&self, other: &UnitQuaternion<N>) -> N {$/;"	f
angle_to	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_specialization.rs	/^    pub fn angle_to(&self, other: &Rotation2<N>) -> N {$/;"	f
angle_to	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_specialization.rs	/^    pub fn angle_to(&self, other: &Rotation3<N>) -> N {$/;"	f
angle_to	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex.rs	/^    pub fn angle_to(&self, other: &Self) -> N {$/;"	f
append_nonuniform_scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/cg.rs	/^    pub fn append_nonuniform_scaling<SB>(&self, scaling: &Vector<N, DimNameDiff<D, U1>, SB>) -> MatrixN<N, D>$/;"	f
append_nonuniform_scaling_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/cg.rs	/^    pub fn append_nonuniform_scaling_mut<SB>(&mut self, scaling: &Vector<N, DimNameDiff<D, U1>, SB>)$/;"	f
append_permutation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/permutation_sequence.rs	/^    pub fn append_permutation(&mut self, i: usize, i2: usize) {$/;"	f
append_rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/id.rs	/^    fn append_rotation(&self, _: &Self::Rotation) -> Self {$/;"	f
append_rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn append_rotation(&self, _: &Self::Rotation) -> Self {$/;"	f
append_rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn append_rotation(&self, r: &Self::Rotation) -> Self;$/;"	f
append_rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn append_rotation(&mut self, r: &UnitQuaternion<f32>) {$/;"	f
append_rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_alga.rs	/^    fn append_rotation(&self, r: &Self::Rotation) -> Self {$/;"	f
append_rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^    fn append_rotation(&self, r: &Self::Rotation) -> Self {$/;"	f
append_rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    fn append_rotation(&self, r: &Self::Rotation) -> Self {$/;"	f
append_rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_alga.rs	/^    fn append_rotation(&self, r: &Self::Rotation) -> Self {$/;"	f
append_rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_alga.rs	/^    fn append_rotation(&self, _: &Self::Rotation) -> Self {$/;"	f
append_rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_alga.rs	/^    fn append_rotation(&self, r: &Self::Rotation) -> Self {$/;"	f
append_rotation_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry.rs	/^    pub fn append_rotation_mut(&mut self, r: &R) {$/;"	f
append_rotation_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity.rs	/^    pub fn append_rotation_mut(&mut self, r: &R) {$/;"	f
append_rotation_wrt_center	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn append_rotation_wrt_center(&mut self, r: &UnitQuaternion<f32>) {$/;"	f
append_rotation_wrt_center_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry.rs	/^    pub fn append_rotation_wrt_center_mut(&mut self, r: &R) {$/;"	f
append_rotation_wrt_center_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity.rs	/^    pub fn append_rotation_wrt_center_mut(&mut self, r: &R) {$/;"	f
append_rotation_wrt_point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn append_rotation_wrt_point(&self, r: &Self::Rotation, p: &E) -> Option<Self> {$/;"	f
append_rotation_wrt_point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_alga.rs	/^    fn append_rotation_wrt_point(&self, r: &Self::Rotation, p: &Point<N, D>) -> Option<Self> {$/;"	f
append_rotation_wrt_point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_alga.rs	/^    fn append_rotation_wrt_point(&self, r: &Self::Rotation, p: &Point<N, D>) -> Option<Self> {$/;"	f
append_rotation_wrt_point_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry.rs	/^    pub fn append_rotation_wrt_point_mut(&mut self, r: &R, p: &Point<N, D>) {$/;"	f
append_rotation_wrt_point_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity.rs	/^    pub fn append_rotation_wrt_point_mut(&mut self, r: &R, p: &Point<N, D>) {$/;"	f
append_scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/id.rs	/^    fn append_scaling(&self, _: &Self::NonUniformScaling) -> Self {$/;"	f
append_scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn append_scaling(&self, s: &Self::NonUniformScaling) -> Self {$/;"	f
append_scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn append_scaling(&self, s: &Self::NonUniformScaling) -> Self;$/;"	f
append_scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/cg.rs	/^    pub fn append_scaling(&self, scaling: N) -> MatrixN<N, D>$/;"	f
append_scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_alga.rs	/^    fn append_scaling(&self, _: &Self::NonUniformScaling) -> Self {$/;"	f
append_scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^    fn append_scaling(&self, _: &Self::NonUniformScaling) -> Self {$/;"	f
append_scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    fn append_scaling(&self, _: &Self::NonUniformScaling) -> Self {$/;"	f
append_scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity.rs	/^    pub fn append_scaling(&self, scaling: N) -> Self {$/;"	f
append_scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_alga.rs	/^    fn append_scaling(&self, s: &Self::NonUniformScaling) -> Self {$/;"	f
append_scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_alga.rs	/^    fn append_scaling(&self, _: &Self::NonUniformScaling) -> Self {$/;"	f
append_scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_alga.rs	/^    fn append_scaling(&self, _: &Self::NonUniformScaling) -> Self {$/;"	f
append_scaling_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/cg.rs	/^    pub fn append_scaling_mut(&mut self, scaling: N)$/;"	f
append_scaling_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity.rs	/^    pub fn append_scaling_mut(&mut self, scaling: N) {$/;"	f
append_transformation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn append_transformation(&mut self, t: &Isometry3<f32>) {$/;"	f
append_translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/id.rs	/^    fn append_translation(&self, _: &Self::Translation) -> Self {$/;"	f
append_translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn append_translation(&self, _: &Self::Translation) -> Self {$/;"	f
append_translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn append_translation(&self, t: &Self::Translation) -> Self;$/;"	f
append_translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn append_translation(&mut self, t: &Translation3<f32>) {$/;"	f
append_translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/cg.rs	/^    pub fn append_translation<SB>(&self, shift: &Vector<N, DimNameDiff<D, U1>, SB>) -> MatrixN<N, D>$/;"	f
append_translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_alga.rs	/^    fn append_translation(&self, t: &Self::Translation) -> Self {$/;"	f
append_translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^    fn append_translation(&self, _: &Self::Translation) -> Self {$/;"	f
append_translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    fn append_translation(&self, _: &Self::Translation) -> Self {$/;"	f
append_translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_alga.rs	/^    fn append_translation(&self, t: &Self::Translation) -> Self {$/;"	f
append_translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_alga.rs	/^    fn append_translation(&self, t: &Self::Translation) -> Self {$/;"	f
append_translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_alga.rs	/^    fn append_translation(&self, _: &Self::Translation) -> Self {$/;"	f
append_translation_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/cg.rs	/^    pub fn append_translation_mut<SB>(&mut self, shift: &Vector<N, DimNameDiff<D, U1>, SB>)$/;"	f
append_translation_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry.rs	/^    pub fn append_translation_mut(&mut self, t: &Translation<N, D>) {$/;"	f
append_translation_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity.rs	/^    pub fn append_translation_mut(&mut self, t: &Translation<N, D>) {$/;"	f
apply	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn apply<F: FnMut(N) -> N>(&mut self, mut f: F)$/;"	f
apply_to_objects	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn apply_to_objects<F: FnMut(&Object)>(&self, f: &mut F) {$/;"	f
apply_to_objects_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn apply_to_objects_mut<F: FnMut(&mut Object)>(&mut self, f: &mut F) {$/;"	f
apply_to_scene_nodes	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn apply_to_scene_nodes<F: FnMut(&SceneNode)>(&self, f: &mut F) {$/;"	f
apply_to_scene_nodes_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn apply_to_scene_nodes_mut<F: FnMut(&mut SceneNode)>(&mut self, f: &mut F) {$/;"	f
approx_eq_eps	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/macros.rs	/^            fn approx_eq_eps(&self, b: &$T, epsilon: &$T) -> bool {$/;"	f
arbitrary	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^    fn arbitrary<G: Gen>(g: &mut G) -> Self {$/;"	f
arbitrary	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/debug/random_orthogonal.rs	/^    fn arbitrary<G: Gen>(g: &mut G) -> Self {$/;"	f
arbitrary	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/debug/random_sdp.rs	/^    fn arbitrary<G: Gen>(g: &mut G) -> Self {$/;"	f
arbitrary	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_construction.rs	/^    fn arbitrary<G: Gen>(rng: &mut G) -> Self {$/;"	f
arbitrary	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/orthographic.rs	/^    fn arbitrary<G: Gen>(g: &mut G) -> Self {$/;"	f
arbitrary	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/perspective.rs	/^    fn arbitrary<G: Gen>(g: &mut G) -> Self {$/;"	f
arbitrary	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_construction.rs	/^    fn arbitrary<G: Gen>(g: &mut G) -> Self {$/;"	f
arbitrary	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_construction.rs	/^    fn arbitrary<G: Gen>(g: &mut G) -> Self {$/;"	f
arbitrary	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_specialization.rs	/^    fn arbitrary<G: Gen>(g: &mut G) -> Self {$/;"	f
arbitrary	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_construction.rs	/^    fn arbitrary<G: Gen>(rng: &mut G) -> Self {$/;"	f
arbitrary	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_construction.rs	/^    fn arbitrary<G: Gen>(rng: &mut G) -> Self {$/;"	f
arbitrary	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_construction.rs	/^    fn arbitrary<G: Gen>(g: &mut G) -> Self {$/;"	f
arc_ball	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/mod.rs	/^mod arc_ball;$/;"	m
array_ax	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/blas.rs	/^fn array_ax<N>(y: &mut [N], a: N, x: &[N], stride1: usize, stride2: usize, len: usize)$/;"	f
array_axpy	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/blas.rs	/^fn array_axpy<N>(y: &mut [N], a: N, x: &[N], beta: N, stride1: usize, stride2: usize, len: usize)$/;"	f
as_	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^    fn as_(self) -> T;$/;"	f
as_matrix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/orthographic.rs	/^    pub fn as_matrix(&self) -> &Matrix4<N> {$/;"	f
as_matrix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/perspective.rs	/^    pub fn as_matrix(&self) -> &Matrix4<N> {$/;"	f
as_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/conversion.rs	/^            fn as_mut(&mut self) -> &mut [N; $SZ] {$/;"	f
as_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/conversion.rs	/^            fn as_mut(&mut self) -> &mut [[N; $SZRows]; $SZCols] {$/;"	f
as_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/conversion.rs	/^            fn as_mut(&mut self) -> &mut mint::$VT<N> {$/;"	f
as_mut_slice	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn as_mut_slice(&mut self) -> &mut [N] {$/;"	f
as_mut_slice	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^    fn as_mut_slice(&mut self) -> &mut [N] {$/;"	f
as_mut_slice	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^    fn as_mut_slice(&mut self) -> &mut [N] {$/;"	f
as_mut_slice	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_vec.rs	/^    fn as_mut_slice(&mut self) -> &mut [N] {$/;"	f
as_mut_slice	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/storage.rs	/^    fn as_mut_slice(&mut self) -> &mut [N];$/;"	f
as_mut_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/unit.rs	/^    pub fn as_mut_unchecked(&mut self) -> &mut T {$/;"	f
as_ref	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/conversion.rs	/^            fn as_ref(&self) -> &[N; $SZ] {$/;"	f
as_ref	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/conversion.rs	/^            fn as_ref(&self) -> &[[N; $SZRows]; $SZCols] {$/;"	f
as_ref	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/conversion.rs	/^            fn as_ref(&self) -> &mint::$VT<N> {$/;"	f
as_ref	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/unit.rs	/^    fn as_ref(&self) -> &T {$/;"	f
as_slice	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn as_slice(&self) -> &[N] {$/;"	f
as_slice	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^    fn as_slice(&self) -> &[N] {$/;"	f
as_slice	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^            fn as_slice(&self) -> &[N] {$/;"	f
as_slice	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_vec.rs	/^    fn as_slice(&self) -> &[N] {$/;"	f
as_slice	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/storage.rs	/^    fn as_slice(&self) -> &[N];$/;"	f
as_vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    pub fn as_vector(&self) -> &Vector4<N> {$/;"	f
as_vector_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    pub fn as_vector_mut(&mut self) -> &mut Vector4<N> {$/;"	f
asin	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn asin(self) -> Self {$/;"	f
asin	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn asin(self) -> Self;$/;"	f
asin	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn asin(self) -> Self;$/;"	f
asin	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn asin(self) -> Self;$/;"	f
asinh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn asinh(self) -> Self {$/;"	f
asinh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn asinh(self) -> Self;$/;"	f
asinh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn asinh(self) -> Self;$/;"	f
asinh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn asinh(self) -> Self;$/;"	f
aspect	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/perspective.rs	/^    pub fn aspect(&self) -> N {$/;"	f
assemble_q	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/householder.rs	/^pub fn assemble_q<N: Real, D: Dim>(m: &MatrixN<N, D>) -> MatrixN<N, D>  $/;"	f
assert_slice_index	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^    fn assert_slice_index(&self, start: (usize, usize), shape: (usize, usize), steps: (usize, usize)) {$/;"	f
at	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/arc_ball.rs	/^    pub fn at(&self) -> Point3<f32> {$/;"	f
at	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^    pub fn at(&self) -> Point3<f32> {$/;"	f
at	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person_stereo.rs	/^    pub fn at(&self) -> Point3<f32> {$/;"	f
atan	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn atan(self) -> Self {$/;"	f
atan	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn atan(self) -> Self;$/;"	f
atan	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn atan(self) -> Self;$/;"	f
atan	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn atan(self) -> Self;$/;"	f
atan2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn atan2(self, other: Self) -> Self {$/;"	f
atan2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn atan2(self, other: Self) -> Self;$/;"	f
atan2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn atan2(self, other: Self) -> Self;$/;"	f
atan2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn atan2(self, other: Self) -> Self;$/;"	f
atanh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn atanh(self) -> Self {$/;"	f
atanh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn atanh(self) -> Self;$/;"	f
atanh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn atanh(self) -> Self;$/;"	f
atanh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn atanh(self) -> Self;$/;"	f
atlas_dimensions	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/text/font.rs	/^    pub fn atlas_dimensions(&self) -> Vector2<usize> {$/;"	f
avformat_init	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/tools/kiss3d_recording.rs	/^static mut avformat_init: Once = ONCE_INIT;$/;"	c
axis	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    pub fn axis(&self) -> Option<Unit<Vector3<N>>> {$/;"	f
axis	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/reflection.rs	/^    pub fn axis(&self) -> &Vector<N, D, S> {$/;"	f
axis	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_specialization.rs	/^    pub fn axis(&self) -> Option<Unit<Vector3<N>>> {$/;"	f
axis_shift	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/bidiagonal.rs	/^    fn axis_shift(&self) -> (usize, usize) {$/;"	f
axpy	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/blas.rs	/^    pub fn axpy<D2: Dim, SB>(&mut self, a: N, x: &Vector<N, D2, SB>, b: N)$/;"	f
b	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^    pub fn b() -> Self$/;"	f
b_axis	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^    pub fn b_axis() -> Unit<Self>$/;"	f
backface_culling_enabled	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/object.rs	/^    pub fn backface_culling_enabled(&self) -> bool {$/;"	f
balance_parlett_reinsch	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/balancing.rs	/^pub fn balance_parlett_reinsch<N: Real, D: Dim>(m: &mut MatrixN<N, D>) -> VectorN<N, D>$/;"	f
balancing	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/mod.rs	/^pub mod balancing;$/;"	m
base	/home/berger/playground/rust/slam/slam-rs/src/lib.rs	/^pub mod base;$/;"	m
begin	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^    fn begin(&self, _: D) -> usize {$/;"	f
begin	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^    fn begin(&self, shape: D) -> usize;$/;"	f
bidiagonal	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/mod.rs	/^mod bidiagonal;$/;"	m
bidiagonalize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/bidiagonal.rs	/^    pub fn bidiagonalize(self) -> Bidiagonal<N, R, C> {$/;"	f
bind	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gpu_vector.rs	/^    pub fn bind(&mut self) {$/;"	f
bind	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/mesh.rs	/^    pub fn bind(&mut self,$/;"	f
bind	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/shader.rs	/^    pub fn bind(&mut self, vector: &mut GPUVec<T>) {$/;"	f
bind_coords	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/mesh.rs	/^    pub fn bind_coords(&mut self, coords: &mut ShaderAttribute<Point3<GLfloat>>) {$/;"	f
bind_faces	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/mesh.rs	/^    pub fn bind_faces(&mut self) {$/;"	f
bind_normals	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/mesh.rs	/^    pub fn bind_normals(&mut self, normals: &mut ShaderAttribute<Vector3<GLfloat>>) {$/;"	f
bind_sub_buffer	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/shader.rs	/^    pub fn bind_sub_buffer(&mut self, vector: &mut GPUVec<T>, strides: usize, start_index: usize) {$/;"	f
bind_uvs	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/mesh.rs	/^    pub fn bind_uvs(&mut self, uvs: &mut ShaderAttribute<Point2<GLfloat>>) {$/;"	f
blas	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/mod.rs	/^mod blas;$/;"	m
bottom	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/orthographic.rs	/^    pub fn bottom(&self) -> N {$/;"	f
bounded_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/bounds.rs	/^macro_rules! bounded_impl {$/;"	d
bounded_tuple	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/bounds.rs	/^macro_rules! bounded_tuple {$/;"	d
bounds	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^pub mod bounds;$/;"	m
builtin	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/lib.rs	/^pub mod builtin;$/;"	m
camera	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/mod.rs	/^pub mod camera;$/;"	m
camera	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/lib.rs	/^pub mod camera;$/;"	m
cancel_horizontal_off_diagonal_elt	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/svd.rs	/^    fn cancel_horizontal_off_diagonal_elt(b:   &mut Bidiagonal<N, R, C>,$/;"	f
cancel_vertical_off_diagonal_elt	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/svd.rs	/^    fn cancel_vertical_off_diagonal_elt(b:   &mut Bidiagonal<N, R, C>,$/;"	f
cancel_x	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/givens.rs	/^pub fn cancel_x<N: Real, S: Storage<N, U2>>(v: &Vector<N, U2, S>) -> Option<(UnitComplex<N>, N)> {$/;"	f
cancel_y	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/givens.rs	/^pub fn cancel_y<N: Real, S: Storage<N, U2>>(v: &Vector<N, U2, S>) -> Option<(UnitComplex<N>, N)> {$/;"	f
canonical_basis	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/vector.rs	/^    fn canonical_basis<F: FnMut(&Self) -> bool>(mut f: F) {$/;"	f
canonical_basis_element	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/vector.rs	/^    fn canonical_basis_element(i: usize) -> Self;$/;"	f
canonical_basis_element	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^    fn canonical_basis_element(i: usize) -> Self {$/;"	f
canonical_basis_element	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^    fn canonical_basis_element(i: usize) -> Self {$/;"	f
cast	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^pub fn cast<T: NumCast, U: NumCast>(n: T) -> Option<U> {$/;"	f
cast	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^pub mod cast;$/;"	m
category_mul_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^macro_rules! category_mul_impl($/;"	d
cbrt	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn cbrt(self) -> Self {$/;"	f
cbrt	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn cbrt(self) -> Self;$/;"	f
cbrt	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn cbrt(self) -> Self;$/;"	f
cbrt	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn cbrt(self) -> Self;$/;"	f
ceil	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn ceil(self) -> Self {$/;"	f
ceil	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn ceil(self) -> Self;$/;"	f
ceil	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn ceil(self) -> Self {$/;"	f
ceil	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn ceil(self) -> Self;$/;"	f
ceil	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn ceil(self) -> Self;$/;"	f
center	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub fn center<P: EuclideanSpace>(p1: &P, p2: &P) -> P {$/;"	f
cg	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/mod.rs	/^mod cg;$/;"	m
check_homogeneous_invariants	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^    fn check_homogeneous_invariants<N: Real, D: DimName>(_: &MatrixN<N, D>) -> bool$/;"	f
check_homogeneous_invariants	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^    fn check_homogeneous_invariants<N: Real, D: DimName>(mat: &MatrixN<N, D>) -> bool$/;"	f
check_num_ops	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^fn check_num_ops() {$/;"	f
check_numassign_ops	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^fn check_numassign_ops() {$/;"	f
check_numref_ops	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^fn check_numref_ops() {$/;"	f
check_optional_key_state	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^fn check_optional_key_state(window: &glfw::Window, key: Option<Key>, key_state: Action) -> bool {$/;"	f
check_refnum_ops	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^fn check_refnum_ops() {$/;"	f
check_refref_ops	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^fn check_refref_ops() {$/;"	f
check_shader_error	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/shader.rs	/^fn check_shader_error(shader: GLuint) {$/;"	f
checked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/mod.rs	/^pub mod checked;$/;"	m
checked_add	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/checked.rs	/^    fn checked_add(&self, v: &Self) -> Option<Self>;$/;"	f
checked_div	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/checked.rs	/^    fn checked_div(&self, v: &Self) -> Option<Self>;$/;"	f
checked_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/checked.rs	/^macro_rules! checked_impl {$/;"	d
checked_impl_unary	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/checked.rs	/^macro_rules! checked_impl_unary {$/;"	d
checked_mul	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/checked.rs	/^    fn checked_mul(&self, v: &Self) -> Option<Self>;$/;"	f
checked_neg	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/checked.rs	/^    fn checked_neg(&self) -> Option<Self>;$/;"	f
checked_pow	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/pow.rs	/^pub fn checked_pow<T: Clone + One + CheckedMul>(mut base: T, mut exp: usize) -> Option<T> {$/;"	f
checked_rem	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/checked.rs	/^    fn checked_rem(&self, v: &Self) -> Option<Self>;$/;"	f
checked_shift_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/checked.rs	/^macro_rules! checked_shift_impl {$/;"	d
checked_shl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/checked.rs	/^    fn checked_shl(&self, rhs: u32) -> Option<Self>;$/;"	f
checked_shr	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/checked.rs	/^    fn checked_shr(&self, rhs: u32) -> Option<Self>;$/;"	f
checked_sub	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/checked.rs	/^    fn checked_sub(&self, v: &Self) -> Option<Self>;$/;"	f
checks_homogeneous_invariants_of_square_identity_matrix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^    fn checks_homogeneous_invariants_of_square_identity_matrix() {$/;"	f
cholesky	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/cholesky.rs	/^    pub fn cholesky(self) -> Option<Cholesky<N, D>> {$/;"	f
cholesky	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/mod.rs	/^mod cholesky;$/;"	m
clamp	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub fn clamp<T: PartialOrd>(val: T, min: T, max: T) -> T {$/;"	f
clamp	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^pub fn clamp<T: PartialOrd>(input: T, min: T, max: T) -> T {$/;"	f
clamp_test	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^fn clamp_test() {$/;"	f
classify	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn classify(self) -> FpCategory {$/;"	f
classify	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn classify(self) -> FpCategory;$/;"	f
clear_column_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/householder.rs	/^pub fn clear_column_unchecked<N: Real, R: Dim, C: Dim>(matrix:    &mut MatrixMN<N, R, C>,$/;"	f
clear_row_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/householder.rs	/^pub fn clear_row_unchecked<N: Real, R: Dim, C: Dim>(matrix:      &mut MatrixMN<N, R, C>,$/;"	f
clip_planes	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/arc_ball.rs	/^    fn clip_planes(&self) -> (f32, f32) {$/;"	f
clip_planes	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/camera.rs	/^    fn clip_planes(&self) -> (f32, f32); \/\/ FIXME: should this be here?$/;"	f
clip_planes	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^    fn clip_planes(&self) -> (f32, f32) {$/;"	f
clip_planes	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person_stereo.rs	/^    fn clip_planes(&self) -> (f32, f32) {$/;"	f
clone	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^    fn clone(&self) -> Id<O> {$/;"	f
clone	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/wrapper.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/orthographic.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/perspective.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^    pub fn clone(&self) -> Point<N, D> {$/;"	f
clone	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation.rs	/^    fn clone(&self) -> Self {$/;"	f
clone_owned	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn clone_owned(&self) -> MatrixMN<N, R, C>$/;"	f
clone_owned	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^    fn clone_owned(&self) -> Owned<N, R, C>$/;"	f
clone_owned	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^            fn clone_owned(&self) -> Owned<N, R, C>$/;"	f
clone_owned	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_vec.rs	/^    fn clone_owned(&self) -> Owned<N, Dynamic, C>$/;"	f
clone_owned	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_vec.rs	/^    fn clone_owned(&self) -> Owned<N, R, Dynamic>$/;"	f
clone_owned	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/storage.rs	/^    fn clone_owned(&self) -> Owned<N, R, C>$/;"	f
clone_owned	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    pub fn clone_owned(&self) -> Quaternion<N> {$/;"	f
clone_owned	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    pub fn clone_owned(&self) -> UnitQuaternion<N> {$/;"	f
clone_owned	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^    pub fn clone_owned(&self) -> Transform<N, D, C> {$/;"	f
clone_owned_sum	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn clone_owned_sum<R2, C2>(&self) -> MatrixSum<N, R, C, R2, C2>$/;"	f
close	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn close(&mut self) {$/;"	f
color	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/object.rs	/^    pub fn color(&self) -> &Point3<f32> {$/;"	f
column	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/matrix.rs	/^    fn column(&self, i: usize) -> Self::Column;$/;"	f
column	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    fn column(&self, i: usize) -> Self::Column {$/;"	f
columns_range	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^    pub fn columns_range<ColRange: SliceRange<C>>(&self, cols: ColRange)$/;"	f
columns_range_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^    pub fn columns_range_mut<ColRange: SliceRange<C>>(&mut self, cols: ColRange)$/;"	f
complex	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex.rs	/^    pub fn complex(&self) -> &Complex<N> {$/;"	f
complex_eigenvalues	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/schur.rs	/^    pub fn complex_eigenvalues(&self) -> VectorN<Complex<N>, D>$/;"	f
complex_op_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_ops.rs	/^macro_rules! complex_op_impl($/;"	d
complex_op_impl_all	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_ops.rs	/^macro_rules! complex_op_impl_all($/;"	d
component_binop_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/componentwise.rs	/^macro_rules! component_binop_impl($/;"	d
component_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/vector.rs	/^    unsafe fn component_unchecked(&self, i: usize) -> &Self::Field;$/;"	f
component_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^    unsafe fn component_unchecked(&self, i: usize) -> &N {$/;"	f
component_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^    unsafe fn component_unchecked(&self, i: usize) -> &N {$/;"	f
component_unchecked_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/vector.rs	/^    unsafe fn component_unchecked_mut(&mut self, i: usize) -> &mut Self::Field;$/;"	f
component_unchecked_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^    unsafe fn component_unchecked_mut(&mut self, i: usize) -> &mut N {$/;"	f
component_unchecked_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^    unsafe fn component_unchecked_mut(&mut self, i: usize) -> &mut N {$/;"	f
componentwise	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/mod.rs	/^mod componentwise;$/;"	m
componentwise_binop_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^macro_rules! componentwise_binop_impl($/;"	d
componentwise_constructors_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^macro_rules! componentwise_constructors_impl($/;"	d
componentwise_constructors_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_construction.rs	/^macro_rules! componentwise_constructors_impl($/;"	d
componentwise_constructors_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_construction.rs	/^macro_rules! componentwise_constructors_impl($/;"	d
componentwise_scalarop_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^macro_rules! componentwise_scalarop_impl($/;"	d
componentwise_scalarop_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_ops.rs	/^macro_rules! componentwise_scalarop_impl($/;"	d
compress_rows	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/edition.rs	/^unsafe fn compress_rows<N: Scalar>(data: &mut [N], nrows: usize, ncols: usize, i: usize, nremove: usize) {$/;"	f
compute	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^    fn compute<T: Copy>(x: &T, y: T) -> T$/;"	f
compute	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^    fn compute<T: Num + Copy>(x: T, y: T) -> T {$/;"	f
compute	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^    fn compute<T: NumAssign + Copy>(mut x: T, y: T) -> T {$/;"	f
compute	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^    fn compute<T: NumRef>(x: T, y: &T) -> T {$/;"	f
compute	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^    fn compute<T>(x: &T, y: &T) -> T$/;"	f
compute_2x2_basis	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/schur.rs	/^fn compute_2x2_basis<N: Real, S: Storage<N, U2, U2>>(m: &SquareMatrix<N, U2, S>)$/;"	f
compute_2x2_eigvals	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/schur.rs	/^fn compute_2x2_eigvals<N: Real, S: Storage<N, U2, U2>>(m: &SquareMatrix<N, U2, S>)$/;"	f
compute_2x2_uptrig_svd	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/svd.rs	/^    fn compute_2x2_uptrig_svd(m11: N, m12: N, m22: N, compute_u: bool, compute_v: bool)$/;"	f
compute_normals	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/mesh.rs	/^    pub fn compute_normals(coordinates: &[Point3<GLfloat>],$/;"	f
compute_normals_array	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/mesh.rs	/^    pub fn compute_normals_array(coordinates: &[Point3<GLfloat>], faces: &[Point3<GLuint>]) -> Vec<Vector3<GLfloat>> {$/;"	f
conjugate	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    pub fn conjugate(&self) -> Quaternion<N> {$/;"	f
conjugate	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    pub fn conjugate(&self) -> UnitQuaternion<N> {$/;"	f
conjugate	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex.rs	/^    pub fn conjugate(&self) -> Self {$/;"	f
conjugate_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    pub fn conjugate_mut(&mut self) {$/;"	f
conjugate_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex.rs	/^    pub fn conjugate_mut(&mut self) {$/;"	f
conjugate_transpose	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn conjugate_transpose(&self) -> MatrixMN<Complex<N>, C, R>$/;"	f
conjugate_transpose_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn conjugate_transpose_mut(&mut self) {$/;"	f
conjugate_transpose_to	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn conjugate_transpose_to<R2, C2, SB>(&self, out: &mut Matrix<Complex<N>, R2, C2, SB>)$/;"	f
constant	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/macros.rs	/^macro_rules! constant {$/;"	d
constraint	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/mod.rs	/^pub mod constraint;$/;"	m
construction	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/mod.rs	/^mod construction;$/;"	m
context	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn context() -> glfw::Glfw {$/;"	f
conversion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/mod.rs	/^mod conversion;$/;"	m
convert	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub fn convert<From, To: SupersetOf<From>>(t: From) -> To {$/;"	f
convert_deg_rad	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn convert_deg_rad() {$/;"	f
convert_deg_rad_std	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn convert_deg_rad_std() {$/;"	f
convert_ref	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub fn convert_ref<From, To: SupersetOf<From>>(t: &From) -> To {$/;"	f
convert_ref_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub unsafe fn convert_ref_unchecked<From: SupersetOf<To>, To>(t: &From) -> To {$/;"	f
convert_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub unsafe fn convert_unchecked<From: SupersetOf<To>, To>(t: From) -> To {$/;"	f
coordinates	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/vector.rs	/^    fn coordinates(&self) -> Self::Coordinates {$/;"	f
coordinates	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/mod.rs	/^pub mod coordinates;$/;"	m
coordinates	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_alga.rs	/^    fn coordinates(&self) -> Self::Coordinates {$/;"	f
coords	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/mesh.rs	/^    pub fn coords(&self) -> &Arc<RwLock<GPUVec<Point3<GLfloat>>>> {$/;"	f
coords_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/coordinates.rs	/^macro_rules! coords_impl($/;"	d
copy_from	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn copy_from<R2, C2, SB>(&mut self, other: &Matrix<N, R2, C2, SB>)$/;"	f
core	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub mod core;$/;"	m
cos	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn cos(self) -> Self {$/;"	f
cos	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn cos(self) -> Self;$/;"	f
cos	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn cos(self) -> Self;$/;"	f
cos	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn cos(self) -> Self;$/;"	f
cos_angle	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex.rs	/^    pub fn cos_angle(&self) -> N {$/;"	f
cosh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn cosh(self) -> Self {$/;"	f
cosh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn cosh(self) -> Self;$/;"	f
cosh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn cosh(self) -> Self;$/;"	f
cosh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn cosh(self) -> Self;$/;"	f
count	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/iter.rs	/^            fn count(self) -> usize {$/;"	f
count_ones	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/int.rs	/^            fn count_ones(self) -> u32 {$/;"	f
count_ones	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/int.rs	/^    fn count_ones(self) -> u32;$/;"	f
count_zeros	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/int.rs	/^            fn count_zeros(self) -> u32 {$/;"	f
count_zeros	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/int.rs	/^    fn count_zeros(self) -> u32;$/;"	f
cross	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn cross<R2, C2, SB>(&self, b: &Matrix<N, R2, C2, SB>) -> MatrixCross<N, R, C, R2, C2>$/;"	f
d	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/bidiagonal.rs	/^    pub fn d(&self) -> MatrixN<N, DimMinimum<R, C>>$/;"	f
data	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gpu_vector.rs	/^    pub fn data(&self) -> &Option<Vec<T>> {$/;"	f
data	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/object.rs	/^    pub fn data(&self) -> &ObjectData {$/;"	f
data	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn data(&self) -> Ref<SceneNodeData> {$/;"	f
data	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_vec.rs	/^    pub fn data(&self) -> &Vec<N> {$/;"	f
data_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gpu_vector.rs	/^    pub fn data_mut(&mut self) -> &mut Option<Vec<T>> {$/;"	f
data_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/object.rs	/^    pub fn data_mut(&mut self) -> &mut ObjectData {$/;"	f
data_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn data_mut(&mut self) -> RefMut<SceneNodeData> {$/;"	f
data_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_vec.rs	/^    pub unsafe fn data_mut(&mut self) -> &mut Vec<N> {$/;"	f
deactivate	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/builtin/object_material.rs	/^    fn deactivate(&mut self) {$/;"	f
debug	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub mod debug;$/;"	m
decompose	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/id.rs	/^    fn decompose(&self) -> (Id, Id, Id, Id) {$/;"	f
decompose	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn decompose($/;"	f
decompose	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn decompose(&self) -> (Id, Id, R, Id) {$/;"	f
decompose	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_alga.rs	/^    fn decompose(&self) -> (Translation<N, D>, R, Id, R) {$/;"	f
decompose	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^    fn decompose(&self) -> (Id, Self, Id, Self) {$/;"	f
decompose	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    fn decompose(&self) -> (Id, Self, Id, Self) {$/;"	f
decompose	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_alga.rs	/^    fn decompose(&self) -> (Translation<N, D>, R, N, R) {$/;"	f
decompose	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_alga.rs	/^    fn decompose(&self) -> (Self, Id, Id, Id) {$/;"	f
decompose	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_alga.rs	/^    fn decompose(&self) -> (Id, Self, Id, Self) {$/;"	f
decompose_2x2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/schur.rs	/^fn decompose_2x2<N: Real, D: Dim>(mut m: MatrixN<N, D>, compute_q: bool)$/;"	f
default_allocator	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/mod.rs	/^pub mod default_allocator;$/;"	m
default_epsilon	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^    fn default_epsilon() -> Self::Epsilon {$/;"	f
default_epsilon	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/wrapper.rs	/^    fn default_epsilon() -> Self::Epsilon {$/;"	f
default_epsilon	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/macros.rs	/^            fn default_epsilon() -> Self::Eps { $V }$/;"	f
default_epsilon	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    fn default_epsilon() -> Self::Epsilon {$/;"	f
default_epsilon	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry.rs	/^    fn default_epsilon() -> Self::Epsilon {$/;"	f
default_epsilon	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^    fn default_epsilon() -> Self::Epsilon {$/;"	f
default_epsilon	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    fn default_epsilon() -> Self::Epsilon {$/;"	f
default_epsilon	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation.rs	/^    fn default_epsilon() -> Self::Epsilon {$/;"	f
default_epsilon	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity.rs	/^    fn default_epsilon() -> Self::Epsilon {$/;"	f
default_epsilon	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation.rs	/^    fn default_epsilon() -> Self::Epsilon {$/;"	f
default_epsilon	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex.rs	/^    fn default_epsilon() -> Self::Epsilon {$/;"	f
default_max_relative	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^    fn default_max_relative() -> Self::Epsilon {$/;"	f
default_max_relative	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/wrapper.rs	/^    fn default_max_relative() -> Self::Epsilon {$/;"	f
default_max_relative	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    fn default_max_relative() -> Self::Epsilon {$/;"	f
default_max_relative	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry.rs	/^    fn default_max_relative() -> Self::Epsilon {$/;"	f
default_max_relative	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^    fn default_max_relative() -> Self::Epsilon {$/;"	f
default_max_relative	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    fn default_max_relative() -> Self::Epsilon {$/;"	f
default_max_relative	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation.rs	/^    fn default_max_relative() -> Self::Epsilon {$/;"	f
default_max_relative	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity.rs	/^    fn default_max_relative() -> Self::Epsilon {$/;"	f
default_max_relative	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation.rs	/^    fn default_max_relative() -> Self::Epsilon {$/;"	f
default_max_relative	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex.rs	/^    fn default_max_relative() -> Self::Epsilon {$/;"	f
default_max_ulps	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^    fn default_max_ulps() -> u32 {$/;"	f
default_max_ulps	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/wrapper.rs	/^    fn default_max_ulps() -> u32 {$/;"	f
default_max_ulps	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    fn default_max_ulps() -> u32 {$/;"	f
default_max_ulps	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry.rs	/^    fn default_max_ulps() -> u32 {$/;"	f
default_max_ulps	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^    fn default_max_ulps() -> u32 {$/;"	f
default_max_ulps	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    fn default_max_ulps() -> u32 {$/;"	f
default_max_ulps	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation.rs	/^    fn default_max_ulps() -> u32 {$/;"	f
default_max_ulps	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity.rs	/^    fn default_max_ulps() -> u32 {$/;"	f
default_max_ulps	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation.rs	/^    fn default_max_ulps() -> u32 {$/;"	f
default_max_ulps	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex.rs	/^    fn default_max_ulps() -> u32 {$/;"	f
delimit_subproblem	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/schur.rs	/^    fn delimit_subproblem(t: &mut MatrixN<N, D>, eps: N, end: usize) -> (usize, usize)$/;"	f
delimit_subproblem	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/svd.rs	/^    fn delimit_subproblem(b:   &mut Bidiagonal<N, R, C>,$/;"	f
delimit_subproblem	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/symmetric_eigen.rs	/^    fn delimit_subproblem(diag:     &VectorN<N, D>,$/;"	f
depth_id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/framebuffer_manager.rs	/^    pub fn depth_id(&self) -> GLuint {$/;"	f
deref	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/coordinates.rs	/^            fn deref(&self) -> &Self::Target {$/;"	f
deref	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^    fn deref(&self) -> &Self::Target {$/;"	f
deref	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_vec.rs	/^    fn deref(&self) -> &Self::Target {$/;"	f
deref	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/unit.rs	/^    fn deref(&self) -> &T {$/;"	f
deref	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_coordinates.rs	/^            fn deref(&self) -> &Self::Target {$/;"	f
deref	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_coordinates.rs	/^    fn deref(&self) -> &Self::Target {$/;"	f
deref_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/coordinates.rs	/^macro_rules! deref_impl($/;"	d
deref_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_coordinates.rs	/^macro_rules! deref_impl($/;"	d
deref_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/coordinates.rs	/^            fn deref_mut(&mut self) -> &mut Self::Target {$/;"	f
deref_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^    fn deref_mut(&mut self) -> &mut Self::Target {$/;"	f
deref_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_coordinates.rs	/^            fn deref_mut(&mut self) -> &mut Self::Target {$/;"	f
deref_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_coordinates.rs	/^    fn deref_mut(&mut self) -> &mut Self::Target {$/;"	f
deserialize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/unit.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/orthographic.rs	/^    fn deserialize<Des>(deserializer: Des) -> Result<Self, Des::Error>$/;"	f
deserialize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/perspective.rs	/^    fn deserialize<Des>(deserializer: Des) -> Result<Self, Des::Error>$/;"	f
deserialize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^    fn deserialize<Des>(deserializer: Des) -> Result<Self, Des::Error>$/;"	f
deserialize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    fn deserialize<Des>(deserializer: Des) -> Result<Self, Des::Error>$/;"	f
deserialize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation.rs	/^    fn deserialize<Des>(deserializer: Des) -> Result<Self, Des::Error>$/;"	f
deserialize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^    fn deserialize<Des>(deserializer: Des) -> Result<Self, Des::Error>$/;"	f
deserialize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation.rs	/^    fn deserialize<Des>(deserializer: Des) -> Result<Self, Des::Error>$/;"	f
determinant	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/matrix.rs	/^    fn determinant(&self) -> Self::Field;$/;"	f
determinant	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    fn determinant(&self) -> Self::Field {$/;"	f
determinant	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/determinant.rs	/^    pub fn determinant(&self) -> N$/;"	f
determinant	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/full_piv_lu.rs	/^    pub fn determinant(&self) -> N {$/;"	f
determinant	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/lu.rs	/^    pub fn determinant(&self) -> N {$/;"	f
determinant	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/mod.rs	/^mod determinant;$/;"	m
determinant	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/permutation_sequence.rs	/^    pub fn determinant<N: One + ClosedNeg>(&self) -> N {$/;"	f
diagonal	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/matrix.rs	/^    fn diagonal(&self) -> Self::Vector;$/;"	f
diagonal	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn diagonal(&self) -> VectorN<N, D>$/;"	f
diagonal	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    fn diagonal(&self) -> Self::Coordinates {$/;"	f
diagonal	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/bidiagonal.rs	/^    pub fn diagonal(&self) -> &VectorN<N, DimMinimum<R, C>> {$/;"	f
diagonal	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/symmetric_tridiagonal.rs	/^    pub fn diagonal(&self) -> VectorN<N, D>$/;"	f
dim	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^    fn dim() -> usize {$/;"	f
dim_ops	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^macro_rules! dim_ops($/;"	d
dimension	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/matrix.rs	/^    fn dimension(&self) -> usize {$/;"	f
dimension	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/vector.rs	/^    fn dimension() -> usize;$/;"	f
dimension	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^    fn dimension() -> usize {$/;"	f
dimension	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/mod.rs	/^pub mod dimension;$/;"	m
dimension	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^    fn dimension() -> usize {$/;"	f
dimension	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub fn dimension<V: FiniteDimVectorSpace>() -> usize {$/;"	f
dims	/home/berger/playground/rust/slam/slam-rs/src/factors/mod.rs	/^    fn dims(&self) -> u8 {$/;"	f
dims	/home/berger/playground/rust/slam/slam-rs/src/factors/mod.rs	/^    fn dims(&self) -> u8;$/;"	f
dims	/home/berger/playground/rust/slam/slam-rs/src/geometry/poses.rs	/^    fn dims() -> u8 {$/;"	f
dims	/home/berger/playground/rust/slam/slam-rs/src/geometry/poses.rs	/^    fn dims() -> u8;$/;"	f
disable	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/shader.rs	/^    pub fn disable(&mut self) {$/;"	f
display_bidiag	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/svd.rs	/^    fn display_bidiag(b: &Bidiagonal<N, R, C>, begin: usize, end: usize) {$/;"	f
dist	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/arc_ball.rs	/^    pub fn dist(&self) -> f32 {$/;"	f
distance	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/vector.rs	/^    fn distance(&self, b: &Self) -> Self::Real {$/;"	f
distance	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub fn distance<P: EuclideanSpace>(p1: &P, p2: &P) -> P::Real {$/;"	f
distance_squared	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/vector.rs	/^    fn distance_squared(&self, b: &Self) -> Self::Real {$/;"	f
distance_squared	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub fn distance_squared<P: EuclideanSpace>(p1: &P, p2: &P) -> P::Real {$/;"	f
div	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^    fn div(self, _: Id) -> Id {$/;"	f
div	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/wrapper.rs	/^    fn div(self, lhs: Self) -> Self {$/;"	f
div	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_ops.rs	/^    fn div(self, rhs: &'b UnitComplex<N>) -> UnitComplex<N> {$/;"	f
div	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_ops.rs	/^    fn div(self, rhs: UnitComplex<N>) -> UnitComplex<N> {$/;"	f
div_assign	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^    fn div_assign(&mut self, _: Id) {$/;"	f
div_assign	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_ops.rs	/^    fn div_assign(&mut self, rhs: &'b Rotation<N, U2>) {$/;"	f
div_assign	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_ops.rs	/^    fn div_assign(&mut self, rhs: &'b UnitComplex<N>) {$/;"	f
div_assign	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_ops.rs	/^    fn div_assign(&mut self, rhs: Rotation<N, U2>) {$/;"	f
div_assign	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_ops.rs	/^    fn div_assign(&mut self, rhs: UnitComplex<N>) {$/;"	f
do_complex_eigenvalues	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/schur.rs	/^    fn do_complex_eigenvalues(t: &MatrixN<N, D>, out: &mut VectorN<Complex<N>, D>)$/;"	f
do_decompose	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/schur.rs	/^    fn do_decompose(mut m: MatrixN<N, D>, work: &mut VectorN<N, D>, eps: N, max_niter: usize, compute_q: bool)$/;"	f
do_decompose	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/symmetric_eigen.rs	/^    fn do_decompose(mut m: MatrixN<N, D>, eigenvectors: bool, eps: N, max_niter: usize)$/;"	f
do_eigenvalues	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/schur.rs	/^    fn do_eigenvalues(t: &MatrixN<N, D>, out: &mut VectorN<N, D>) -> bool {$/;"	f
do_inverse4	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/inverse.rs	/^fn do_inverse4<N: Real, D: Dim, S: StorageMut<N, D, D>>(m: &MatrixN<N, D>, out: &mut SquareMatrix<N, D, S>) -> bool$/;"	f
do_new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/text/font.rs	/^    pub fn do_new(path: Option<&Path>, memory: &[u8], size: i32) -> Rc<Font> {$/;"	f
do_new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    fn do_new(title: &str, hide: bool, width: u32, height: u32) -> Window {$/;"	f
do_render	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    fn do_render(&mut self,$/;"	f
do_render_with	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    fn do_render_with(&mut self,$/;"	f
do_select	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/framebuffer_manager.rs	/^    fn do_select(&mut self, fbo: GLuint) {$/;"	f
dot	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/vector.rs	/^    fn dot(&self, other: &Self) -> Self::Field;$/;"	f
dot	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/blas.rs	/^    pub fn dot<R2: Dim, C2: Dim, SB>(&self, rhs: &Matrix<N, R2, C2, SB>) -> N$/;"	f
dot	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^    fn dot(&self, other: &Self) -> N {$/;"	f
dot	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^    fn dot(&self, other: &Self) -> N {$/;"	f
dot	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub fn dot<V: FiniteDimVectorSpace>(a: &V, b: &V) -> V::Field {$/;"	f
down_key	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^    pub fn down_key(&self) -> Option<Key> {$/;"	f
download_buffer	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gpu_vector.rs	/^pub fn download_buffer<T: GLPrimitive>(buf_id: GLuint, buf_type: BufferType, out: &mut [T]) {$/;"	f
drag_button	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/arc_ball.rs	/^    pub fn drag_button(&self) -> Option<MouseButton> {$/;"	f
drag_button	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^    pub fn drag_button(&self) -> Option<MouseButton> {$/;"	f
draw	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/grayscales.rs	/^    fn draw(&mut self, target: &RenderTarget) {$/;"	f
draw	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/oculus_stereo.rs	/^    fn draw(&mut self, target: &RenderTarget) {$/;"	f
draw	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/post_processing_effect.rs	/^    fn draw(&mut self, target: &RenderTarget);$/;"	f
draw	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/sobel_edge_highlight.rs	/^    fn draw(&mut self, target: &RenderTarget) {$/;"	f
draw	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/waves.rs	/^    fn draw(&mut self, target: &RenderTarget) {$/;"	f
draw_line	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/line_renderer.rs	/^    pub fn draw_line(&mut self, a: Point3<GLfloat>, b: Point3<GLfloat>, color: Point3<GLfloat>) {$/;"	f
draw_line	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn draw_line(&mut self, a: &Point3<f32>, b: &Point3<f32>, color: &Point3<f32>) {$/;"	f
draw_point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/point_renderer.rs	/^    pub fn draw_point(&mut self, pt: Point3<GLfloat>, color: Point3<GLfloat>) {$/;"	f
draw_point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn draw_point(&mut self, pt: &Point3<f32>, color: &Point3<f32>) {$/;"	f
draw_text	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/text/renderer.rs	/^    pub fn draw_text(&mut self, text: &str, pos: &Point2<f32>, font: &Rc<Font>, color: &Point3<f32>) {$/;"	f
draw_text	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn draw_text(&mut self, text: &str, pos: &Point2<f32>, font: &Rc<Font>, color: &Point3<f32>) {$/;"	f
drop	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/framebuffer_manager.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gpu_vector.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/shader.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/texture_manager.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/text/font.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/tools/kiss3d_recording.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/event.rs	/^    fn drop(&mut self) {$/;"	f
dst	/home/berger/playground/rust/slam/slam-rs/src/factors/mod.rs	/^    fn dst(&self) -> NodeId {$/;"	f
e	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn e() -> Self {$/;"	f
e	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn e() -> Self;$/;"	f
edition	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/mod.rs	/^mod edition;$/;"	m
eigenvalues	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/schur.rs	/^    pub fn eigenvalues(&self) -> Option<VectorN<N, D>> {$/;"	f
embalm	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    unsafe fn embalm(&mut self) {$/;"	f
embalm	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^    unsafe fn embalm(&mut self) {$/;"	f
embalm	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_vec.rs	/^    unsafe fn embalm(&mut self) {$/;"	f
embalm	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/unit.rs	/^    unsafe fn embalm(&mut self) {$/;"	f
embalm	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry.rs	/^    unsafe fn embalm(&mut self) {$/;"	f
embalm	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^    unsafe fn embalm(&mut self) {$/;"	f
embalm	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    unsafe fn embalm(&mut self) {$/;"	f
embalm	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation.rs	/^    unsafe fn embalm(&mut self) {$/;"	f
embalm	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity.rs	/^    unsafe fn embalm(&mut self) {$/;"	f
embalm	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation.rs	/^    unsafe fn embalm(&mut self) {$/;"	f
empty_trait_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/sign.rs	/^macro_rules! empty_trait_impl {$/;"	d
enable	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/shader.rs	/^    pub fn enable(&mut self) {$/;"	f
enable_backface_culling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/object.rs	/^    pub fn enable_backface_culling(&mut self, active: bool) {$/;"	f
enable_backface_culling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn enable_backface_culling(&mut self, active: bool) {$/;"	f
end	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^    fn end(&self, _: D) -> usize {$/;"	f
end	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^    fn end(&self, dim: D) -> usize {$/;"	f
end	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^    fn end(&self, shape: D) -> usize;$/;"	f
entomb	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    unsafe fn entomb(&self, writer: &mut Vec<u8>) {$/;"	f
entomb	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^    unsafe fn entomb(&self, writer: &mut Vec<u8>) {$/;"	f
entomb	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_vec.rs	/^    unsafe fn entomb(&self, writer: &mut Vec<u8>) {$/;"	f
entomb	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/unit.rs	/^    unsafe fn entomb(&self, writer: &mut Vec<u8>) {$/;"	f
entomb	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry.rs	/^    unsafe fn entomb(&self, writer: &mut Vec<u8>) {$/;"	f
entomb	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^    unsafe fn entomb(&self, writer: &mut Vec<u8>) {$/;"	f
entomb	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    unsafe fn entomb(&self, writer: &mut Vec<u8>) {$/;"	f
entomb	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation.rs	/^    unsafe fn entomb(&self, writer: &mut Vec<u8>) {$/;"	f
entomb	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity.rs	/^    unsafe fn entomb(&self, writer: &mut Vec<u8>) {$/;"	f
entomb	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation.rs	/^    unsafe fn entomb(&self, writer: &mut Vec<u8>) {$/;"	f
epsilon	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn epsilon() -> Self {$/;"	f
epsilon	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn epsilon() -> Self;$/;"	f
epsilon	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn epsilon() -> Self;$/;"	f
eq	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^    fn eq(&self, _: &Id<O>) -> bool {$/;"	f
eq	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/wrapper.rs	/^    fn eq(&self, other: &Self) -> bool {$/;"	f
eq	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    fn eq(&self, right: &Matrix<N, R, C, S>) -> bool {$/;"	f
eq	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn eq<R2, C2, SB>(&self, other: &Matrix<N, R2, C2, SB>) -> bool$/;"	f
eq	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^    fn eq(&self, right: &Self) -> bool {$/;"	f
eq	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry.rs	/^    fn eq(&self, right: &Isometry<N, D, R>) -> bool {$/;"	f
eq	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/orthographic.rs	/^    fn eq(&self, right: &Self) -> bool {$/;"	f
eq	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/perspective.rs	/^    fn eq(&self, right: &Self) -> bool {$/;"	f
eq	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^    fn eq(&self, right: &Self) -> bool {$/;"	f
eq	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    fn eq(&self, rhs: &Self) -> bool {$/;"	f
eq	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation.rs	/^    fn eq(&self, right: &Rotation<N, D>) -> bool {$/;"	f
eq	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity.rs	/^    fn eq(&self, right: &Similarity<N, D, R>) -> bool {$/;"	f
eq	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^    fn eq(&self, right: &Self) -> bool {$/;"	f
eq	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation.rs	/^    fn eq(&self, right: &Translation<N, D>) -> bool {$/;"	f
equality_trait_decl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/constraint.rs	/^macro_rules! equality_trait_decl($/;"	d
error	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/builtin/normals_material.rs	/^mod error;$/;"	m
error	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/builtin/object_material.rs	/^mod error;$/;"	m
error	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/builtin/uvs_material.rs	/^mod error;$/;"	m
error	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person_stereo.rs	/^mod error;$/;"	m
error	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/lib.rs	/^mod error;$/;"	m
error	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/line_renderer.rs	/^mod error;$/;"	m
error	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/loader/mtl.rs	/^fn error(line: usize, err: &str) -> ! {$/;"	f
error	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/loader/obj.rs	/^fn error(line: usize, err: &str) -> ! {$/;"	f
error	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/point_renderer.rs	/^mod error;$/;"	m
error	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/grayscales.rs	/^mod error;$/;"	m
error	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/oculus_stereo.rs	/^mod error;$/;"	m
error	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/sobel_edge_highlight.rs	/^mod error;$/;"	m
error	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/waves.rs	/^mod error;$/;"	m
error	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/framebuffer_manager.rs	/^mod error;$/;"	m
error	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^mod error;$/;"	m
error	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gpu_vector.rs	/^mod error;$/;"	m
error	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/mesh.rs	/^mod error;$/;"	m
error	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/shader.rs	/^mod error;$/;"	m
error	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/texture_manager.rs	/^mod error;$/;"	m
error	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/object.rs	/^mod error;$/;"	m
error	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/text/font.rs	/^mod error;$/;"	m
error	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/text/renderer.rs	/^mod error;$/;"	m
event	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/mod.rs	/^mod event;$/;"	m
events	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn events(&self) -> EventManager {$/;"	f
exhume	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    unsafe fn exhume<'a, 'b>(&'a mut self, bytes: &'b mut [u8]) -> Option<&'b mut [u8]> {$/;"	f
exhume	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^    unsafe fn exhume<'a, 'b>(&'a mut self, mut bytes: &'b mut [u8]) -> Option<&'b mut [u8]> {$/;"	f
exhume	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_vec.rs	/^    unsafe fn exhume<'a, 'b>(&'a mut self, bytes: &'b mut [u8]) -> Option<&'b mut [u8]> {$/;"	f
exhume	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/unit.rs	/^    unsafe fn exhume<'a, 'b>(&'a mut self, bytes: &'b mut [u8]) -> Option<&'b mut [u8]> {$/;"	f
exhume	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry.rs	/^    unsafe fn exhume<'a, 'b>(&'a mut self, bytes: &'b mut [u8]) -> Option<&'b mut [u8]> {$/;"	f
exhume	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^    unsafe fn exhume<'a, 'b>(&'a mut self, bytes: &'b mut [u8]) -> Option<&'b mut [u8]> {$/;"	f
exhume	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    unsafe fn exhume<'a, 'b>(&'a mut self, bytes: &'b mut [u8]) -> Option<&'b mut [u8]> {$/;"	f
exhume	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation.rs	/^    unsafe fn exhume<'a, 'b>(&'a mut self, bytes: &'b mut [u8]) -> Option<&'b mut [u8]> {$/;"	f
exhume	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity.rs	/^    unsafe fn exhume<'a, 'b>(&'a mut self, bytes: &'b mut [u8]) -> Option<&'b mut [u8]> {$/;"	f
exhume	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation.rs	/^    unsafe fn exhume<'a, 'b>(&'a mut self, bytes: &'b mut [u8]) -> Option<&'b mut [u8]> {$/;"	f
exp	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn exp(self) -> Self {$/;"	f
exp	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn exp(self) -> Self;$/;"	f
exp	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    pub fn exp(&self) -> Quaternion<N> {$/;"	f
exp	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn exp(self) -> Self;$/;"	f
exp	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn exp(self) -> Self;$/;"	f
exp2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn exp2(self) -> Self {$/;"	f
exp2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn exp2(self) -> Self;$/;"	f
exp2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn exp2(self) -> Self;$/;"	f
exp2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn exp2(self) -> Self;$/;"	f
exp_m1	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn exp_m1(self) -> Self {$/;"	f
exp_m1	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn exp_m1(self) -> Self;$/;"	f
exp_m1	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn exp_m1(self) -> Self;$/;"	f
exp_m1	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn exp_m1(self) -> Self;$/;"	f
expected_shift	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/symmetric_eigen.rs	/^    fn expected_shift(m: Matrix2<f64>) -> f64 {$/;"	f
expecting	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^    fn expecting(&self, formatter: &mut Formatter) -> fmt::Result {$/;"	f
export_to_g2o	/home/berger/playground/rust/slam/slam-rs/src/graphs/mod.rs	/^    fn export_to_g2o(&self, fname: &str) {$/;"	f
export_to_toro	/home/berger/playground/rust/slam/slam-rs/src/graphs/mod.rs	/^    fn export_to_toro(&self, _fname: &str) {$/;"	f
extend_rows	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/edition.rs	/^unsafe fn extend_rows<N: Scalar>(data: &mut [N], nrows: usize, ncols: usize, i: usize, ninsert: usize) {$/;"	f
eye	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/arc_ball.rs	/^    fn eye(&self) -> Point3<f32> {$/;"	f
eye	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/camera.rs	/^    fn eye(&self) -> Point3<f32>; \/\/ FIXME: should this be here?$/;"	f
eye	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^    fn eye(&self) -> Point3<f32> {$/;"	f
eye	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person_stereo.rs	/^    fn eye(&self) -> Point3<f32> {$/;"	f
eye_dir	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^    pub fn eye_dir(&self) -> Vector3<f32> {$/;"	f
faces	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/mesh.rs	/^    pub fn faces(&self) -> &Arc<RwLock<GPUVec<Point3<GLuint>>>> {$/;"	f
factors	/home/berger/playground/rust/slam/slam-rs/src/lib.rs	/^pub mod factors;$/;"	m
fill	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/edition.rs	/^    pub fn fill(&mut self, val: N) {$/;"	f
fill_column	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/edition.rs	/^    pub fn fill_column(&mut self, j: usize, val: N) {$/;"	f
fill_diagonal	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/edition.rs	/^    pub fn fill_diagonal(&mut self, val: N) {$/;"	f
fill_lower_triangle	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/edition.rs	/^    pub fn fill_lower_triangle(&mut self, val: N, shift: usize) {$/;"	f
fill_lower_triangle_with_upper_triangle	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/edition.rs	/^    pub fn fill_lower_triangle_with_upper_triangle(&mut self) {$/;"	f
fill_row	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/edition.rs	/^    pub fn fill_row(&mut self, i: usize, val: N) {$/;"	f
fill_upper_triangle	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/edition.rs	/^    pub fn fill_upper_triangle(&mut self, val: N, shift: usize) {$/;"	f
fill_upper_triangle_with_lower_triangle	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/edition.rs	/^    pub fn fill_upper_triangle_with_lower_triangle(&mut self) {$/;"	f
fill_with_identity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/edition.rs	/^    pub fn fill_with_identity(&mut self)$/;"	f
first_person	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/mod.rs	/^mod first_person;$/;"	m
first_person_stereo	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/mod.rs	/^mod first_person_stereo;$/;"	m
fixed_resize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/edition.rs	/^    pub fn fixed_resize<R2: DimName, C2: DimName>(self, val: N) -> MatrixMN<N, R2, C2>$/;"	f
float	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^pub mod float;$/;"	m
float_const_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^macro_rules! float_const_impl {$/;"	d
float_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^macro_rules! float_impl {$/;"	d
float_impls	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/pow.rs	/^mod float_impls {$/;"	m
float_trait_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^macro_rules! float_trait_impl {$/;"	d
floor	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn floor(self) -> Self {$/;"	f
floor	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn floor(self) -> Self;$/;"	f
floor	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn floor(self) -> Self {$/;"	f
floor	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn floor(self) -> Self;$/;"	f
floor	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn floor(self) -> Self;$/;"	f
fmt	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/wrapper.rs	/^    fn fmt(&self, fmt: &mut Formatter) -> Result<(), Error> {$/;"	f
fmt	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^    fn fmt(&self, fmt: &mut Formatter) -> fmt::Result {$/;"	f
fmt	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/unit.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/orthographic.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {$/;"	f
fmt	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/perspective.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {$/;"	f
fmt	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt::Debug for Orthographic3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/orthographic.rs	/^impl<N: Real> fmt::Debug for Orthographic3<N> {$/;"	i
fmt::Debug for Perspective3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/perspective.rs	/^impl<N: Real> fmt::Debug for Perspective3<N> {$/;"	i
fmt::Display for Id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^impl<O: Operator> fmt::Display for Id<O> {$/;"	i
fmt::Display for Isometry	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry.rs	/^impl<N: Real + fmt::Display, D: DimName, R> fmt::Display for Isometry<N, D, R>$/;"	i
fmt::Display for Matrix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^impl<N, R: Dim, C: Dim, S> fmt::Display for Matrix<N, R, C, S>$/;"	i
fmt::Display for ParseFloatError	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^impl fmt::Display for ParseFloatError {$/;"	i
fmt::Display for Point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^impl<N: Scalar + fmt::Display, D: DimName> fmt::Display for Point<N, D>$/;"	i
fmt::Display for Quaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^impl<N: Real + fmt::Display> fmt::Display for Quaternion<N> {$/;"	i
fmt::Display for Rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation.rs	/^impl<N, D: DimName> fmt::Display for Rotation<N, D>$/;"	i
fmt::Display for Similarity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity.rs	/^impl<N, D: DimName, R> fmt::Display for Similarity<N, D, R>$/;"	i
fmt::Display for Translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation.rs	/^impl<N: Real + fmt::Display, D: DimName> fmt::Display for Translation<N, D>$/;"	i
fmt::Display for Unit	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/unit.rs	/^impl<T: fmt::Display> fmt::Display for Unit<T> {$/;"	i
fmt::Display for UnitComplex	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex.rs	/^impl<N: Real + fmt::Display> fmt::Display for UnitComplex<N> {$/;"	i
fmt::Display for UnitQuaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^impl<N: Real + fmt::Display> fmt::Display for UnitQuaternion<N> {$/;"	i
font	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/text/mod.rs	/^mod font;$/;"	m
for_each_tuple	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/bounds.rs	/^macro_rules! for_each_tuple {$/;"	d
for_each_tuple_	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/bounds.rs	/^macro_rules! for_each_tuple_ {$/;"	d
forward	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/macros.rs	/^macro_rules! forward {$/;"	d
fovy	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/perspective.rs	/^    pub fn fovy(&self) -> N {$/;"	f
frac_1_pi	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn frac_1_pi() -> Self {$/;"	f
frac_1_pi	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn frac_1_pi() -> Self;$/;"	f
frac_2_pi	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn frac_2_pi() -> Self {$/;"	f
frac_2_pi	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn frac_2_pi() -> Self;$/;"	f
frac_2_sqrt_pi	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn frac_2_sqrt_pi() -> Self {$/;"	f
frac_2_sqrt_pi	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn frac_2_sqrt_pi() -> Self;$/;"	f
frac_pi_2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn frac_pi_2() -> Self {$/;"	f
frac_pi_2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn frac_pi_2() -> Self;$/;"	f
frac_pi_3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn frac_pi_3() -> Self {$/;"	f
frac_pi_3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn frac_pi_3() -> Self;$/;"	f
frac_pi_4	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn frac_pi_4() -> Self {$/;"	f
frac_pi_4	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn frac_pi_4() -> Self;$/;"	f
frac_pi_6	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn frac_pi_6() -> Self {$/;"	f
frac_pi_6	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn frac_pi_6() -> Self;$/;"	f
frac_pi_8	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn frac_pi_8() -> Self {$/;"	f
frac_pi_8	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn frac_pi_8() -> Self;$/;"	f
fract	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn fract(self) -> Self {$/;"	f
fract	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn fract(self) -> Self;$/;"	f
fract	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn fract(self) -> Self {$/;"	f
fract	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn fract(self) -> Self;$/;"	f
fract	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn fract(self) -> Self;$/;"	f
framebuffer_manager	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/mod.rs	/^mod framebuffer_manager;$/;"	m
from	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/conversion.rs	/^            fn from(arr: [N; $SZ]) -> Self {$/;"	f
from	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/conversion.rs	/^            fn from(arr: [[N; $SZRows]; $SZCols]) -> Self {$/;"	f
from	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/conversion.rs	/^            fn from(m: mint::$MV<N>) -> Self {$/;"	f
from	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/conversion.rs	/^            fn from(v: mint::$VT<N>) -> Self {$/;"	f
from	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_conversion.rs	/^    fn from(q: mint::Quaternion<N>) -> Self {$/;"	f
from	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_conversion.rs	/^    fn from(euler: mint::EulerAngles<N, mint::IntraXYZ>) -> Self {$/;"	f
from	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^            fn from<N: ToPrimitive>(n: N) -> Option<$T> {$/;"	f
from	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^    fn from<T: ToPrimitive>(n: T) -> Option<Self>;$/;"	f
from	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^    fn from<U: ToPrimitive>(n: U) -> Option<Self> {$/;"	f
from_angle	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_construction.rs	/^    pub fn from_angle(angle: N) -> Self {$/;"	f
from_axis_angle	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/cg.rs	/^    pub fn from_axis_angle(axis: &Unit<Vector3<N>>, angle: N) -> Self {$/;"	f
from_axis_angle	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_construction.rs	/^    pub fn from_axis_angle<SB>(axis: &Unit<Vector<N, U3, SB>>, angle: N) -> Self$/;"	f
from_axis_angle	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_specialization.rs	/^    pub fn from_axis_angle<SB>(axis: &Unit<Vector<N, U3, SB>>, angle: N) -> Self$/;"	f
from_be	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/int.rs	/^            fn from_be(x: Self) -> Self {$/;"	f
from_be	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/int.rs	/^    fn from_be(x: Self) -> Self;$/;"	f
from_column_slice	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^            pub fn from_column_slice($($args: usize,)* slice: &[N]) -> Self {$/;"	f
from_column_slice_generic	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^    pub fn from_column_slice_generic(nrows: R, ncols: C, slice: &[N]) -> Self {$/;"	f
from_columns	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^    pub fn from_columns<SB>(columns: &[Vector<N, R, SB>]) -> Self$/;"	f
from_complex	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_construction.rs	/^    pub fn from_complex(q: Complex<N>) -> Self {$/;"	f
from_complex_and_get	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_construction.rs	/^    pub fn from_complex_and_get(q: Complex<N>) -> (Self, N) {$/;"	f
from_coordinates	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/vector.rs	/^    fn from_coordinates(coords: Self::Coordinates) -> Self {$/;"	f
from_coordinates	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^    pub fn from_coordinates(coords: VectorN<N, D>) -> Point<N, D> {$/;"	f
from_coordinates	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_alga.rs	/^    fn from_coordinates(coords: Self::Coordinates) -> Self {$/;"	f
from_cos_sin_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_construction.rs	/^    pub fn from_cos_sin_unchecked(cos: N, sin: N) -> Self {$/;"	f
from_data	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn from_data(data: S) -> Matrix<N, R, C, S> {$/;"	f
from_data_statically_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub unsafe fn from_data_statically_unchecked(data: S) -> Matrix<N, R, C, S> {$/;"	f
from_diagonal	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/matrix.rs	/^    fn from_diagonal(diag: &Self::Vector) -> Self;$/;"	f
from_diagonal	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^    pub fn from_diagonal<SB: Storage<N, D>>(diag: &Vector<N, D, SB>) -> Self$/;"	f
from_diagonal_element	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^            pub fn from_diagonal_element($($args: usize,)* elt: N) -> Self$/;"	f
from_diagonal_element_generic	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^    pub fn from_diagonal_element_generic(nrows: R, ncols: C, elt: N) -> Self$/;"	f
from_element	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^            pub fn from_element($($args: usize,)* elem: N) -> Self {$/;"	f
from_element_generic	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^    pub fn from_element_generic(nrows: R, ncols: C, elem: N) -> Self {$/;"	f
from_euler_angles	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/cg.rs	/^    pub fn from_euler_angles(roll: N, pitch: N, yaw: N) -> Self {$/;"	f
from_euler_angles	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_construction.rs	/^    pub fn from_euler_angles(roll: N, pitch: N, yaw: N) -> Self {$/;"	f
from_euler_angles	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_specialization.rs	/^    pub fn from_euler_angles(roll: N, pitch: N, yaw: N) -> Self {$/;"	f
from_f32	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^        fn from_f32(f32);$/;"	f
from_f32	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^    fn from_f32(n: f32) -> Option<Self> {$/;"	f
from_f64	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^        fn from_f64(f64);$/;"	f
from_f64	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^    fn from_f64(n: f64) -> Option<Self> {$/;"	f
from_fn	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^            pub fn from_fn<F>($($args: usize,)* f: F) -> Self$/;"	f
from_fn_generic	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^    pub fn from_fn_generic<F>(nrows: R, ncols: C, mut f: F) -> Self$/;"	f
from_fov	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/orthographic.rs	/^    pub fn from_fov(aspect: N, vfov: N, znear: N, zfar: N) -> Self {$/;"	f
from_homogeneous	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn from_homogeneous<SB>(v: Vector<N, DimSum<D, U1>, SB>) -> Option<VectorN<N, D>>$/;"	f
from_homogeneous	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_construction.rs	/^    pub fn from_homogeneous(v: VectorN<N, DimNameSum<D, U1>>) -> Option<Self>$/;"	f
from_i128	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^        fn from_i128(i128);$/;"	f
from_i128	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^    fn from_i128(n: i128) -> Option<Self> {$/;"	f
from_i16	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^        fn from_i16(i16);$/;"	f
from_i16	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^    fn from_i16(n: i16) -> Option<Self> {$/;"	f
from_i32	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^        fn from_i32(i32);$/;"	f
from_i32	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^    fn from_i32(n: i32) -> Option<Self> {$/;"	f
from_i64	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^        fn from_i64(i64);$/;"	f
from_i64	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^    fn from_i64(n: i64) -> Option<Self>;$/;"	f
from_i8	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^        fn from_i8(i8);$/;"	f
from_i8	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^    fn from_i8(n: i8) -> Option<Self> {$/;"	f
from_isize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^        fn from_isize(isize);$/;"	f
from_isize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^    fn from_isize(n: isize) -> Option<Self> {$/;"	f
from_isometry	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity.rs	/^    pub fn from_isometry(isometry: Isometry<N, D, R>, scaling: N) -> Similarity<N, D, R> {$/;"	f
from_iterator	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^            pub fn from_iterator<I>($($args: usize,)* iter: I) -> Self$/;"	f
from_iterator_generic	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^    pub fn from_iterator_generic<I>(nrows: R, ncols: C, iter: I) -> Self$/;"	f
from_le	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/int.rs	/^            fn from_le(x: Self) -> Self {$/;"	f
from_le	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/int.rs	/^    fn from_le(x: Self) -> Self;$/;"	f
from_matrix_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/orthographic.rs	/^    pub fn from_matrix_unchecked(matrix: Matrix4<N>) -> Self {$/;"	f
from_matrix_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/perspective.rs	/^    pub fn from_matrix_unchecked(matrix: Matrix4<N>) -> Self {$/;"	f
from_matrix_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation.rs	/^    pub fn from_matrix_unchecked(matrix: MatrixN<N, D>) -> Rotation<N, D> {$/;"	f
from_matrix_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^    pub fn from_matrix_unchecked(matrix: MatrixN<N, DimNameSum<D, U1>>) -> Self {$/;"	f
from_memory	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/text/font.rs	/^    pub fn from_memory(font: &[u8], size: i32) -> Rc<Font> {$/;"	f
from_partial_diagonal	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^            pub fn from_partial_diagonal($($args: usize,)* elts: &[N]) -> Self$/;"	f
from_partial_diagonal_generic	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^    pub fn from_partial_diagonal_generic(nrows: R, ncols: C, elts: &[N]) -> Self$/;"	f
from_parts	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry.rs	/^    pub fn from_parts(translation: Translation<N, D>, rotation: R) -> Isometry<N, D, R> {$/;"	f
from_parts	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_construction.rs	/^    pub fn from_parts<SB>(scalar: N, vector: Vector<N, U3, SB>) -> Self$/;"	f
from_parts	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity.rs	/^    pub fn from_parts(translation: Translation<N, D>, rotation: R, scaling: N) -> Similarity<N, D, R> {$/;"	f
from_polar_decomposition	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_construction.rs	/^    pub fn from_polar_decomposition<SB>(scale: N, theta: N, axis: Unit<Vector<N, U3, SB>>) -> Self$/;"	f
from_quaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_construction.rs	/^    pub fn from_quaternion(q: Quaternion<N>) -> Self {$/;"	f
from_raw_parts	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^            pub unsafe fn from_raw_parts<RStride, CStride>(ptr:     $Ptr,$/;"	f
from_real	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn from_real(r: E::Real) -> Option<Self> {$/;"	f
from_rotation_matrix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_construction.rs	/^    pub fn from_rotation_matrix(rotmat: &Rotation<N, U3>) -> Self {$/;"	f
from_rotation_matrix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_construction.rs	/^    pub fn from_rotation_matrix(rotmat: &Rotation<N, U2>) -> Self$/;"	f
from_row_slice	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^            pub fn from_row_slice($($args: usize,)* slice: &[N]) -> Self {$/;"	f
from_row_slice_generic	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^    pub fn from_row_slice_generic(nrows: R, ncols: C, slice: &[N]) -> Self {$/;"	f
from_rows	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^    pub fn from_rows<SB>(rows: &[Matrix<N, U1, C, SB>]) -> Self$/;"	f
from_scaled_axis	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/cg.rs	/^    pub fn from_scaled_axis(axisangle: Vector3<N>) -> Self {$/;"	f
from_scaled_axis	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_construction.rs	/^    pub fn from_scaled_axis<SB>(axisangle: Vector<N, U3, SB>) -> Self$/;"	f
from_scaled_axis	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_specialization.rs	/^    pub fn from_scaled_axis<SB: Storage<N, U1>>(axisangle: Vector<N, U1, SB>) -> Self {$/;"	f
from_scaled_axis	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_specialization.rs	/^    pub fn from_scaled_axis<SB: Storage<N, U3>>(axisangle: Vector<N, U3, SB>) -> Self {$/;"	f
from_scaled_axis	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_construction.rs	/^    pub fn from_scaled_axis<SB: Storage<N, U1, U1>>(axisangle: Vector<N, U1, SB>) -> Self {$/;"	f
from_scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity.rs	/^    pub fn from_scaling(scaling: N) -> Similarity<N, D, R> {$/;"	f
from_str_radix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^            fn from_str_radix(s: &str, radix: u32)$/;"	f
from_str_radix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^            fn from_str_radix(src: &str, radix: u32)$/;"	f
from_str_radix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^    fn from_str_radix(str: &str, radix: u32) -> Result<Self, Self::FromStrRadixErr> {$/;"	f
from_str_radix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^    fn from_str_radix(str: &str, radix: u32) -> Result<Self, Self::FromStrRadixErr>;$/;"	f
from_str_radix_unwrap	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^fn from_str_radix_unwrap() {$/;"	f
from_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/subset.rs	/^    fn from_subset(element: &SS) -> Self {$/;"	f
from_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/subset.rs	/^    fn from_subset(element: &T) -> Self;$/;"	f
from_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/subset.rs	/^    fn from_superset(element: &T) -> Option<Self> {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^    unsafe fn from_superset_unchecked(_: &T) -> Self {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/subset.rs	/^            unsafe fn from_superset_unchecked(element: &$superset) -> $subset {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/subset.rs	/^            unsafe fn from_superset_unchecked(element: &Complex<N2>) -> $t {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/subset.rs	/^    unsafe fn from_superset_unchecked(element: &Complex<N2>) -> Complex<N1> {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/subset.rs	/^    unsafe fn from_superset_unchecked(element: &T) -> Self;$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/conversion.rs	/^    unsafe fn from_superset_unchecked(m: &MatrixMN<N2, R2, C2>) -> Self {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/unit.rs	/^    unsafe fn from_superset_unchecked(value: &T) -> Self {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_conversion.rs	/^    unsafe fn from_superset_unchecked(iso: &Isometry<N2, D, R2>) -> Self {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_conversion.rs	/^    unsafe fn from_superset_unchecked(m: &MatrixN<N2, DimNameSum<D, U1>>) -> Self {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_conversion.rs	/^    unsafe fn from_superset_unchecked(sim: &Similarity<N2, D, R2>) -> Self {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_conversion.rs	/^    unsafe fn from_superset_unchecked(t: &Transform<N2, D, C>) -> Self {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_conversion.rs	/^    unsafe fn from_superset_unchecked(m: &Point<N2, D>) -> Self {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_conversion.rs	/^    unsafe fn from_superset_unchecked(v: &VectorN<N2, DimNameSum<D, U1>>) -> Self {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_conversion.rs	/^    unsafe fn from_superset_unchecked(iso: &Isometry<N2, U3, R>) -> Self {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_conversion.rs	/^    unsafe fn from_superset_unchecked(m: &Matrix4<N2>) -> Self {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_conversion.rs	/^    unsafe fn from_superset_unchecked(q: &Quaternion<N2>) -> Self {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_conversion.rs	/^    unsafe fn from_superset_unchecked(rot: &Rotation3<N2>) -> Self {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_conversion.rs	/^    unsafe fn from_superset_unchecked(sim: &Similarity<N2, U3, R>) -> Self {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_conversion.rs	/^    unsafe fn from_superset_unchecked(t: &Transform<N2, U3, C>) -> Self {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_conversion.rs	/^    unsafe fn from_superset_unchecked(uq: &UnitQuaternion<N2>) -> Self {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_conversion.rs	/^    unsafe fn from_superset_unchecked(iso: &Isometry<N2, D, R>) -> Self {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_conversion.rs	/^    unsafe fn from_superset_unchecked(m: &MatrixN<N2, DimNameSum<D, U1>>) -> Self {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_conversion.rs	/^    unsafe fn from_superset_unchecked(q: &UnitComplex<N2>) -> Self {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_conversion.rs	/^    unsafe fn from_superset_unchecked(q: &UnitQuaternion<N2>) -> Self {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_conversion.rs	/^    unsafe fn from_superset_unchecked(rot: &Rotation<N2, D>) -> Self {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_conversion.rs	/^    unsafe fn from_superset_unchecked(sim: &Similarity<N2, D, R>) -> Self {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_conversion.rs	/^    unsafe fn from_superset_unchecked(t: &Transform<N2, D, C>) -> Self {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_conversion.rs	/^    unsafe fn from_superset_unchecked(m: &MatrixN<N2, DimNameSum<D, U1>>) -> Self {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_conversion.rs	/^    unsafe fn from_superset_unchecked(sim: &Similarity<N2, D, R2>) -> Self {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_conversion.rs	/^    unsafe fn from_superset_unchecked(t: &Transform<N2, D, C>) -> Self {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform_conversion.rs	/^    unsafe fn from_superset_unchecked(m: &MatrixN<N2, DimNameSum<D, U1>>) -> Self {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform_conversion.rs	/^    unsafe fn from_superset_unchecked(t: &Transform<N2, D, C2>) -> Self {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_conversion.rs	/^    unsafe fn from_superset_unchecked(iso: &Isometry<N2, D, R>) -> Self {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_conversion.rs	/^    unsafe fn from_superset_unchecked(m: &MatrixN<N2, DimNameSum<D, U1>>) -> Self {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_conversion.rs	/^    unsafe fn from_superset_unchecked(rot: &Translation<N2, D>) -> Self {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_conversion.rs	/^    unsafe fn from_superset_unchecked(sim: &Similarity<N2, D, R>) -> Self {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_conversion.rs	/^    unsafe fn from_superset_unchecked(t: &Transform<N2, D, C>) -> Self {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_conversion.rs	/^    unsafe fn from_superset_unchecked(iso: &Isometry<N2, U2, R>) -> Self {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_conversion.rs	/^    unsafe fn from_superset_unchecked(m: &Matrix3<N2>) -> Self {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_conversion.rs	/^    unsafe fn from_superset_unchecked(rot: &Rotation2<N2>) -> Self {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_conversion.rs	/^    unsafe fn from_superset_unchecked(sim: &Similarity<N2, U2, R>) -> Self {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_conversion.rs	/^    unsafe fn from_superset_unchecked(t: &Transform<N2, U2, C>) -> Self {$/;"	f
from_superset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_conversion.rs	/^    unsafe fn from_superset_unchecked(uq: &UnitComplex<N2>) -> Self {$/;"	f
from_trimesh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/mesh.rs	/^    pub fn from_trimesh(mesh: TriMesh3<GLfloat>, dynamic_draw: bool) -> Mesh {$/;"	f
from_u128	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^        fn from_u128(u128);$/;"	f
from_u128	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^    fn from_u128(n: u128) -> Option<Self> {$/;"	f
from_u16	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^        fn from_u16(u16);$/;"	f
from_u16	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^    fn from_u16(n: u16) -> Option<Self> {$/;"	f
from_u32	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^        fn from_u32(u32);$/;"	f
from_u32	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^    fn from_u32(n: u32) -> Option<Self> {$/;"	f
from_u64	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^        fn from_u64(u64);$/;"	f
from_u64	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^    fn from_u64(n: u64) -> Option<Self>;$/;"	f
from_u8	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^        fn from_u8(u8);$/;"	f
from_u8	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^    fn from_u8(n: u8) -> Option<Self> {$/;"	f
from_usize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^            fn from_usize(dim: usize) -> Self {$/;"	f
from_usize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^    fn from_usize(dim: usize) -> Self {$/;"	f
from_usize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^    fn from_usize(dim: usize) -> Self;$/;"	f
from_usize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^        fn from_usize(usize);$/;"	f
from_usize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^    fn from_usize(n: usize) -> Option<Self> {$/;"	f
from_vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/id.rs	/^    fn from_vector(v: E::Coordinates) -> Option<Self> {$/;"	f
from_vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn from_vector(v: E::Coordinates) -> Option<Self>;$/;"	f
from_vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_construction.rs	/^    pub fn from_vector(vector: Vector4<N>) -> Self {$/;"	f
from_vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation.rs	/^    pub fn from_vector(vector: VectorN<N, D>) -> Translation<N, D> {$/;"	f
from_vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_alga.rs	/^    fn from_vector(v: VectorN<N, D>) -> Option<Self> {$/;"	f
full_piv_lu	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/full_piv_lu.rs	/^    pub fn full_piv_lu(self) -> FullPivLU<N, R, C> {$/;"	f
full_piv_lu	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/mod.rs	/^mod full_piv_lu;$/;"	m
gauss_step	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/lu.rs	/^pub fn gauss_step<N, R: Dim, C: Dim, S>(matrix: &mut Matrix<N, R, C, S>, diag: N, i: usize)$/;"	f
gauss_step_swap	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/lu.rs	/^pub fn gauss_step_swap<N, R: Dim, C: Dim, S>(matrix: &mut Matrix<N, R, C, S>, diag: N, i: usize, piv: usize)$/;"	f
ge	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    fn ge(&self, right: &Self) -> bool {$/;"	f
ge	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^    fn ge(&self, right: &Self) -> bool {$/;"	f
gemm	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/blas.rs	/^    pub fn gemm<R2: Dim, C2: Dim, R3: Dim, C3: Dim, SB, SC>(&mut self,$/;"	f
gemv	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/blas.rs	/^    pub fn gemv<R2: Dim, C2: Dim, D3: Dim, SB, SC>(&mut self,$/;"	f
gemv_symm	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/blas.rs	/^    pub fn gemv_symm<D2: Dim, D3: Dim, SB, SC>(&mut self,$/;"	f
general	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/lib.rs	/^pub mod general;$/;"	m
geometry	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub mod geometry;$/;"	m
geometry	/home/berger/playground/rust/slam/slam-rs/src/lib.rs	/^pub mod geometry;$/;"	m
ger	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/blas.rs	/^    pub fn ger<D2: Dim, D3: Dim, SB, SC>(&mut self, alpha: N, x: &Vector<N, D2, SB>, y: &Vector<N, D3, SC>, beta: N)$/;"	f
ger_symm	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/blas.rs	/^    pub fn ger_symm<D2: Dim, D3: Dim, SB, SC>(&mut self,$/;"	f
get	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/matrix.rs	/^    fn get(&self, i: usize, j: usize) -> Self::Field {$/;"	f
get	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/material_manager.rs	/^    pub fn get(&mut self, name: &str) -> Option<Rc<RefCell<Box<Material + 'static>>>> {$/;"	f
get	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/mesh_manager.rs	/^    pub fn get(&mut self, name: &str) -> Option<Rc<RefCell<Mesh>>> {$/;"	f
get	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/texture_manager.rs	/^    pub fn get(&mut self, name: &str) -> Option<Rc<Texture>> {$/;"	f
get	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    fn get(&self, i: usize, j: usize) -> Self::Field {$/;"	f
get_address_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/storage.rs	/^    unsafe fn get_address_unchecked(&self, irow: usize, icol: usize) -> *const N {$/;"	f
get_address_unchecked_linear	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/storage.rs	/^    unsafe fn get_address_unchecked_linear(&self, i: usize) -> *const N {$/;"	f
get_address_unchecked_linear_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/storage.rs	/^    unsafe fn get_address_unchecked_linear_mut(&mut self, i: usize) -> *mut N {$/;"	f
get_address_unchecked_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/storage.rs	/^    unsafe fn get_address_unchecked_mut(&mut self, irow: usize, icol: usize) -> *mut N {$/;"	f
get_attrib	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/shader.rs	/^    pub fn get_attrib<T: GLPrimitive>(&self, name: &str) -> Option<ShaderAttribute<T>> {$/;"	f
get_default	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/material_manager.rs	/^    pub fn get_default(&self) -> Rc<RefCell<Box<Material + 'static>>> {$/;"	f
get_default	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/texture_manager.rs	/^    pub fn get_default(&self) -> Rc<Texture> {$/;"	f
get_factors	/home/berger/playground/rust/slam/slam-rs/src/graphs/mod.rs	/^    fn get_factors(&self) -> Vec<Box<FactorTrait>> {$/;"	f
get_factors	/home/berger/playground/rust/slam/slam-rs/src/graphs/mod.rs	/^    fn get_factors(&self) -> Vec<Box<FactorTrait>>;$/;"	f
get_factors_count	/home/berger/playground/rust/slam/slam-rs/src/graphs/mod.rs	/^    fn get_factors_count(&self) -> usize {$/;"	f
get_global_manager	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/material_manager.rs	/^    pub fn get_global_manager<T, F: FnMut(&mut MaterialManager) -> T>(mut f: F) -> T {$/;"	f
get_global_manager	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/mesh_manager.rs	/^    pub fn get_global_manager<T, F: FnMut(&mut MeshManager) -> T>(mut f: F) -> T {$/;"	f
get_global_manager	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/texture_manager.rs	/^    pub fn get_global_manager<T, F: FnMut(&mut TextureManager) -> T>(mut f: F) -> T {$/;"	f
get_node_ids	/home/berger/playground/rust/slam/slam-rs/src/graphs/mod.rs	/^    fn get_node_ids(&self) -> Vec<NodeId> {$/;"	f
get_node_ids	/home/berger/playground/rust/slam/slam-rs/src/graphs/mod.rs	/^    fn get_node_ids(&self) -> Vec<NodeId>;$/;"	f
get_nodes_count	/home/berger/playground/rust/slam/slam-rs/src/graphs/mod.rs	/^    fn get_nodes_count(&self) -> usize {$/;"	f
get_object	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn get_object(&self) -> &Object {$/;"	f
get_object_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn get_object_mut(&mut self) -> &mut Object {$/;"	f
get_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/matrix.rs	/^    unsafe fn get_unchecked(&self, i: usize, j: usize) -> Self::Field;$/;"	f
get_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub unsafe fn get_unchecked(&self, irow: usize, icol: usize) -> &N {$/;"	f
get_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/storage.rs	/^    unsafe fn get_unchecked(&self, irow: usize, icol: usize) -> &N {$/;"	f
get_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^    pub unsafe fn get_unchecked(&self, i: usize) -> &N {$/;"	f
get_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    unsafe fn get_unchecked(&self, i: usize, j: usize) -> Self::Field {$/;"	f
get_unchecked_linear	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/storage.rs	/^    unsafe fn get_unchecked_linear(&self, i: usize) -> &N {$/;"	f
get_unchecked_linear_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/storage.rs	/^    unsafe fn get_unchecked_linear_mut(&mut self, i: usize) -> &mut N {$/;"	f
get_unchecked_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub unsafe fn get_unchecked_mut(&mut self, irow: usize, icol: usize) -> &mut N {$/;"	f
get_unchecked_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/storage.rs	/^    unsafe fn get_unchecked_mut(&mut self, irow: usize, icol: usize) -> &mut N {$/;"	f
get_unchecked_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^    pub unsafe fn get_unchecked_mut(&mut self, i: usize) -> &mut N {$/;"	f
get_uniform	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/shader.rs	/^    pub fn get_uniform<T: GLPrimitive>(&self, name: &str) -> Option<ShaderUniform<T>> {$/;"	f
givens	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/mod.rs	/^pub mod givens;$/;"	m
gl_primitive	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/mod.rs	/^mod gl_primitive;$/;"	m
gl_type	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn gl_type(_: Option<(GLfloat, GLfloat)>) -> GLuint {$/;"	f
gl_type	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn gl_type(_: Option<(GLfloat, GLfloat, GLfloat)>) -> GLuint {$/;"	f
gl_type	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn gl_type(_: Option<(GLuint, GLuint)>) -> GLuint {$/;"	f
gl_type	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn gl_type(_: Option<(GLuint, GLuint, GLuint)>) -> GLuint {$/;"	f
gl_type	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn gl_type(_: Option<GLfloat>) -> GLuint {$/;"	f
gl_type	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn gl_type(_: Option<GLint>) -> GLuint {$/;"	f
gl_type	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn gl_type(_: Option<GLuint>) -> GLuint {$/;"	f
gl_type	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn gl_type(_: Option<Matrix2<GLfloat>>) -> GLuint {$/;"	f
gl_type	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn gl_type(_: Option<Matrix3<GLfloat>>) -> GLuint {$/;"	f
gl_type	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn gl_type(_: Option<Matrix4<GLfloat>>) -> GLuint {$/;"	f
gl_type	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn gl_type(_: Option<Point2<GLfloat>>) -> GLuint {$/;"	f
gl_type	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn gl_type(_: Option<Point2<GLuint>>) -> GLuint {$/;"	f
gl_type	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn gl_type(_: Option<Point3<GLfloat>>) -> GLuint {$/;"	f
gl_type	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn gl_type(_: Option<Point3<GLuint>>) -> GLuint {$/;"	f
gl_type	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn gl_type(_: Option<Rotation2<GLfloat>>) -> GLuint {$/;"	f
gl_type	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn gl_type(_: Option<Rotation3<GLfloat>>) -> GLuint {$/;"	f
gl_type	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn gl_type(_: Option<Vector2<GLfloat>>) -> GLuint {$/;"	f
gl_type	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn gl_type(_: Option<Vector2<GLuint>>) -> GLuint {$/;"	f
gl_type	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn gl_type(_: Option<Vector3<GLfloat>>) -> GLuint {$/;"	f
gl_type	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn gl_type(_: Option<Vector3<GLuint>>) -> GLuint {$/;"	f
gl_type	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn gl_type(_type: Option<Self>) -> GLuint;$/;"	f
glfw_window	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn glfw_window(&self) -> &glfw::Window {$/;"	f
glfw_window_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn glfw_window_mut(&mut self) -> &mut glfw::Window {$/;"	f
glyph	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/text/mod.rs	/^mod glyph;$/;"	m
glyphs	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/text/font.rs	/^    pub fn glyphs(&self) -> &[Option<Glyph>] {$/;"	f
gpu_vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/mod.rs	/^mod gpu_vector;$/;"	m
graphs	/home/berger/playground/rust/slam/slam-rs/src/lib.rs	/^pub mod graphs;$/;"	m
grayscales	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/mod.rs	/^mod grayscales;$/;"	m
gt	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    fn gt(&self, right: &Self) -> bool {$/;"	f
gt	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^    fn gt(&self, right: &Self) -> bool {$/;"	f
h	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/hessenberg.rs	/^    pub fn h(&self) -> MatrixN<N, D>$/;"	f
handle	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gpu_vector.rs	/^    pub fn handle(&self) -> GLuint {$/;"	f
handle_event	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/arc_ball.rs	/^    fn handle_event(&mut self, window: &glfw::Window, event: &WindowEvent) {$/;"	f
handle_event	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/camera.rs	/^    fn handle_event(&mut self, _window: &glfw::Window, _event: &glfw::WindowEvent);$/;"	f
handle_event	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^    fn handle_event(&mut self, window: &glfw::Window, event: &WindowEvent) {$/;"	f
handle_event	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person_stereo.rs	/^    fn handle_event(&mut self, window: &glfw::Window, event: &WindowEvent) {$/;"	f
handle_event	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    fn handle_event(&mut self, camera: &mut Option<&mut Camera>, event: &WindowEvent) {$/;"	f
handle_events	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    fn handle_events(&mut self, camera: &mut Option<&mut Camera>) {$/;"	f
handle_left_button_displacement	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/arc_ball.rs	/^    fn handle_left_button_displacement(&mut self, dpos: &Vector2<f32>) {$/;"	f
handle_left_button_displacement	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^    pub fn handle_left_button_displacement(&mut self, dpos: &Vector2<f32>) {$/;"	f
handle_left_button_displacement	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person_stereo.rs	/^    pub fn handle_left_button_displacement(&mut self, dpos: &Vector2<f32>) {$/;"	f
handle_right_button_displacement	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/arc_ball.rs	/^    fn handle_right_button_displacement(&mut self, dpos: &Vector2<f32>) {$/;"	f
handle_right_button_displacement	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^    pub fn handle_right_button_displacement(&mut self, dpos: &Vector2<f32>) {$/;"	f
handle_right_button_displacement	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person_stereo.rs	/^    pub fn handle_right_button_displacement(&mut self, dpos: &Vector2<f32>) {$/;"	f
handle_scroll	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/arc_ball.rs	/^    fn handle_scroll(&mut self, off: f32) {$/;"	f
handle_scroll	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^    pub fn handle_scroll(&mut self, yoff: f32) {$/;"	f
handle_scroll	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person_stereo.rs	/^    pub fn handle_scroll(&mut self, yoff: f32) {$/;"	f
has_normalizer	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^    fn has_normalizer() -> bool {$/;"	f
has_object	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn has_object(&self) -> bool {$/;"	f
has_uncertainty	/home/berger/playground/rust/slam/slam-rs/src/geometry/poses.rs	/^    fn has_uncertainty() -> bool {$/;"	f
hash	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^    fn hash<H: Hasher>(&self, state: &mut H) {$/;"	f
hash	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry.rs	/^    fn hash<H: hash::Hasher>(&self, state: &mut H) {$/;"	f
hash	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^    fn hash<H: hash::Hasher>(&self, state: &mut H) {$/;"	f
hash	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    fn hash<H: hash::Hasher>(&self, state: &mut H) {$/;"	f
hash	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation.rs	/^    fn hash<H: hash::Hasher>(&self, state: &mut H) {$/;"	f
hash	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity.rs	/^    fn hash<H: hash::Hasher>(&self, state: &mut H) {$/;"	f
hash	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation.rs	/^    fn hash<H: hash::Hasher>(&self, state: &mut H) {$/;"	f
hash::Hash for Isometry	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry.rs	/^impl<N: Real + hash::Hash, D: DimName + hash::Hash, R: hash::Hash> hash::Hash for Isometry<N, D, R>$/;"	i
hash::Hash for Point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^impl<N: Scalar + hash::Hash, D: DimName + hash::Hash> hash::Hash for Point<N, D>$/;"	i
hash::Hash for Quaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^impl<N: Real + hash::Hash> hash::Hash for Quaternion<N> {$/;"	i
hash::Hash for Rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation.rs	/^impl<N: Scalar + hash::Hash, D: DimName + hash::Hash> hash::Hash for Rotation<N, D>$/;"	i
hash::Hash for Similarity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity.rs	/^impl<N: Real + hash::Hash, D: DimName + hash::Hash, R: hash::Hash> hash::Hash for Similarity<N, D, R>$/;"	i
hash::Hash for Translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation.rs	/^impl<N: Scalar + hash::Hash, D: DimName + hash::Hash> hash::Hash for Translation<N, D>$/;"	i
height	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/text/font.rs	/^    pub fn height(&self) -> i32 {$/;"	f
height	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn height(&self) -> f32 {$/;"	f
helper	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/mod.rs	/^pub mod helper;$/;"	m
hess_internal	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/hessenberg.rs	/^    pub fn hess_internal(&self) -> &MatrixN<N, D> {$/;"	f
hessenberg	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/hessenberg.rs	/^    pub fn hessenberg(self) -> Hessenberg<N, D> {$/;"	f
hessenberg	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/mod.rs	/^mod hessenberg;$/;"	m
hide	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn hide(&mut self) {$/;"	f
householder	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/mod.rs	/^pub mod householder;$/;"	m
hypot	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn hypot(self, other: Self) -> Self {$/;"	f
hypot	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn hypot(self, other: Self) -> Self;$/;"	f
hypot	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn hypot(self, other: Self) -> Self;$/;"	f
hypot	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn hypot(self, other: Self) -> Self;$/;"	f
iamax	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/blas.rs	/^    pub fn iamax(&self) -> usize {$/;"	f
iamax_full	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/blas.rs	/^    pub fn iamax_full(&self) -> (usize, usize) {$/;"	f
id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^    fn id(_: O) -> Self$/;"	f
id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/mod.rs	/^mod id;$/;"	m
id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/texture_manager.rs	/^    pub fn id(&self) -> GLuint {$/;"	f
id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub fn id() -> Id {$/;"	f
identities	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^pub mod identities;$/;"	m
identity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^    fn identity() -> Id<O> {$/;"	f
identity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^    fn identity() -> Self {$/;"	f
identity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^    fn identity() -> Self;$/;"	f
identity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/mod.rs	/^mod identity;$/;"	m
identity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^            pub fn identity($($args: usize,)*) -> Self$/;"	f
identity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^    fn identity() -> Self {$/;"	f
identity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_alga.rs	/^    fn identity() -> Self {$/;"	f
identity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_construction.rs	/^    pub fn identity() -> Self {$/;"	f
identity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^    fn identity() -> Self {$/;"	f
identity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_construction.rs	/^    pub fn identity() -> Self {$/;"	f
identity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    fn identity() -> Self {$/;"	f
identity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_construction.rs	/^    pub fn identity() -> Rotation<N, D> {$/;"	f
identity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_alga.rs	/^    fn identity() -> Self {$/;"	f
identity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_construction.rs	/^    pub fn identity() -> Self {$/;"	f
identity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform_alga.rs	/^    fn identity() -> Self {$/;"	f
identity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform_construction.rs	/^    pub fn identity() -> Self {$/;"	f
identity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_alga.rs	/^    fn identity() -> Self {$/;"	f
identity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_construction.rs	/^    pub fn identity() -> Translation<N, D> {$/;"	f
identity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_alga.rs	/^    fn identity() -> Self {$/;"	f
identity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_construction.rs	/^    pub fn identity() -> Self {$/;"	f
identity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/permutation_sequence.rs	/^    pub fn identity() -> Self {$/;"	f
identity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/permutation_sequence.rs	/^    pub fn identity(n: usize) -> Self {$/;"	f
identity_generic	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^    pub fn identity_generic(nrows: R, ncols: C) -> Self$/;"	f
identity_generic	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/permutation_sequence.rs	/^    pub fn identity_generic(dim: D) -> Self {$/;"	f
impl_abelian	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/one_operator.rs	/^macro_rules! impl_abelian($/;"	d
impl_additive_inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/operator.rs	/^macro_rules! impl_additive_inverse($/;"	d
impl_approx_eq	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/macros.rs	/^macro_rules! impl_approx_eq {$/;"	d
impl_as_primitive	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^macro_rules! impl_as_primitive {$/;"	d
impl_constructors	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^macro_rules! impl_constructors($/;"	d
impl_field	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/two_operators.rs	/^macro_rules! impl_field($/;"	d
impl_from_into_asref_1D	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/conversion.rs	/^macro_rules! impl_from_into_asref_1D($/;"	d
impl_from_into_asref_2D	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/conversion.rs	/^macro_rules! impl_from_into_asref_2D($/;"	d
impl_from_into_mint_1D	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/conversion.rs	/^macro_rules! impl_from_into_mint_1D($/;"	d
impl_from_into_mint_2D	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/conversion.rs	/^macro_rules! impl_from_into_mint_2D($/;"	d
impl_from_primitive	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^macro_rules! impl_from_primitive {$/;"	d
impl_from_primitive_wrapping	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^macro_rules! impl_from_primitive_wrapping {$/;"	d
impl_group	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/one_operator.rs	/^macro_rules! impl_group($/;"	d
impl_ident	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/macros.rs	/^macro_rules! impl_ident {$/;"	d
impl_inversible_multiplicative_structures	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform_alga.rs	/^macro_rules! impl_inversible_multiplicative_structures($/;"	d
impl_lattice	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/lattice.rs	/^macro_rules! impl_lattice($/;"	d
impl_loop	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/one_operator.rs	/^macro_rules! impl_loop($/;"	d
impl_magma	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/one_operator.rs	/^macro_rules! impl_magma($/;"	d
impl_marker	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/macros.rs	/^macro_rules! impl_marker($/;"	d
impl_monoid	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/one_operator.rs	/^macro_rules! impl_monoid($/;"	d
impl_multiplicative_structure	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^macro_rules! impl_multiplicative_structure($/;"	d
impl_multiplicative_structures	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_alga.rs	/^macro_rules! impl_multiplicative_structures($/;"	d
impl_multiplicative_structures	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^macro_rules! impl_multiplicative_structures($/;"	d
impl_multiplicative_structures	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_alga.rs	/^macro_rules! impl_multiplicative_structures($/;"	d
impl_multiplicative_structures	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform_alga.rs	/^macro_rules! impl_multiplicative_structures($/;"	d
impl_multiplicative_structures	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_alga.rs	/^macro_rules! impl_multiplicative_structures($/;"	d
impl_num_cast	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^macro_rules! impl_num_cast {$/;"	d
impl_quasigroup	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/one_operator.rs	/^macro_rules! impl_quasigroup($/;"	d
impl_real	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^macro_rules! impl_real($/;"	d
impl_ring	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/two_operators.rs	/^macro_rules! impl_ring($/;"	d
impl_ring_commutative	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/two_operators.rs	/^macro_rules! impl_ring_commutative($/;"	d
impl_scalar_subset_of_complex	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/subset.rs	/^macro_rules! impl_scalar_subset_of_complex($/;"	d
impl_semigroup	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/one_operator.rs	/^macro_rules! impl_semigroup($/;"	d
impl_structures	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^macro_rules! impl_structures($/;"	d
impl_structures	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_alga.rs	/^macro_rules! impl_structures($/;"	d
impl_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/subset.rs	/^macro_rules! impl_subset($/;"	d
impl_to_primitive_float	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^macro_rules! impl_to_primitive_float {$/;"	d
impl_to_primitive_float_to_float	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^macro_rules! impl_to_primitive_float_to_float {$/;"	d
impl_to_primitive_float_to_signed_int	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^macro_rules! impl_to_primitive_float_to_signed_int {$/;"	d
impl_to_primitive_float_to_unsigned_int	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^macro_rules! impl_to_primitive_float_to_unsigned_int {$/;"	d
impl_to_primitive_int	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^macro_rules! impl_to_primitive_int {$/;"	d
impl_to_primitive_int_to_int	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^macro_rules! impl_to_primitive_int_to_int {$/;"	d
impl_to_primitive_int_to_uint	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^macro_rules! impl_to_primitive_int_to_uint {$/;"	d
impl_to_primitive_uint	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^macro_rules! impl_to_primitive_uint {$/;"	d
impl_to_primitive_uint_to_int	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^macro_rules! impl_to_primitive_uint_to_int {$/;"	d
impl_to_primitive_uint_to_uint	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^macro_rules! impl_to_primitive_uint_to_uint {$/;"	d
impl_to_primitive_wrapping	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^macro_rules! impl_to_primitive_wrapping {$/;"	d
index	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^    fn index(&self, i: usize) -> &N {$/;"	f
index	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^    fn index(&self, ij: (usize, usize)) -> &N {$/;"	f
index	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_ops.rs	/^    fn index(&self, i: usize) -> &Self::Output {$/;"	f
index	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_ops.rs	/^    fn index(&self, i: usize) -> &N {$/;"	f
index	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_ops.rs	/^    fn index(&self, row_col: (usize, usize)) -> &N {$/;"	f
index	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform_ops.rs	/^    fn index(&self, ij: (usize, usize)) -> &N {$/;"	f
index_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^    fn index_mut(&mut self, i: usize) -> &mut N {$/;"	f
index_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^    fn index_mut(&mut self, ij: (usize, usize)) -> &mut N {$/;"	f
index_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_ops.rs	/^    fn index_mut(&mut self, i: usize) -> &mut Self::Output {$/;"	f
index_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_ops.rs	/^    fn index_mut(&mut self, i: usize) -> &mut N {$/;"	f
index_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform_ops.rs	/^    fn index_mut(&mut self, ij: (usize, usize)) -> &mut N {$/;"	f
inf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub fn inf<T: MeetSemilattice>(a: &T, b: &T) -> T {$/;"	f
inf_sup	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub fn inf_sup<T: Lattice>(a: &T, b: &T) -> (T, T) {$/;"	f
infinity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn infinity() -> Self;$/;"	f
inherit_additive_structure	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^macro_rules! inherit_additive_structure($/;"	d
init	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/tools/kiss3d_recording.rs	/^    pub fn init(&mut self) {$/;"	f
init_gl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^fn init_gl() {$/;"	f
inner_product	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/vector.rs	/^    fn inner_product(&self, other: &Self) -> Self::Real;$/;"	f
inner_product	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^    fn inner_product(&self, other: &Self) -> N {$/;"	f
insert_column	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/edition.rs	/^    pub fn insert_column(self, i: usize, val: N) -> MatrixMN<N, R, DimSum<C, U1>>$/;"	f
insert_columns	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/edition.rs	/^    pub fn insert_columns(self, i: usize, n: usize, val: N) -> MatrixMN<N, R, Dynamic>$/;"	f
insert_columns_generic_uninitialized	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/edition.rs	/^    pub unsafe fn insert_columns_generic_uninitialized<D>(self, i: usize, ninsert: D)$/;"	f
insert_fixed_columns	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/edition.rs	/^    pub fn insert_fixed_columns<D>(self, i: usize, val: N) -> MatrixMN<N, R, DimSum<C, D>>$/;"	f
insert_fixed_rows	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/edition.rs	/^    pub fn insert_fixed_rows<D>(self, i: usize, val: N) -> MatrixMN<N, DimSum<R, D>, C>$/;"	f
insert_row	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/edition.rs	/^    pub fn insert_row(self, i: usize, val: N) -> MatrixMN<N, DimSum<R, U1>, C>$/;"	f
insert_rows	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/edition.rs	/^    pub fn insert_rows(self, i: usize, n: usize, val: N) -> MatrixMN<N, Dynamic, C>$/;"	f
insert_rows_generic_uninitialized	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/edition.rs	/^    pub unsafe fn insert_rows_generic_uninitialized<D>(self, i: usize, ninsert: D)$/;"	f
int	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^pub mod int;$/;"	m
int_trait_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^macro_rules! int_trait_impl {$/;"	d
integer_decode	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^            fn integer_decode(self) -> (u64, i16, i8) {$/;"	f
integer_decode	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn integer_decode(self) -> (u64, i16, i8) {$/;"	f
integer_decode	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn integer_decode(self) -> (u64, i16, i8);$/;"	f
integer_decode_f32	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^fn integer_decode_f32(f: f32) -> (u64, i16, i8) {$/;"	f
integer_decode_f64	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^fn integer_decode_f64(f: f64) -> (u64, i16, i8) {$/;"	f
internal_tri	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/symmetric_tridiagonal.rs	/^    pub fn internal_tri(&self) -> &MatrixN<N, D> {$/;"	f
into	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/conversion.rs	/^            fn into(self) -> [N; $SZ] {$/;"	f
into	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/conversion.rs	/^            fn into(self) -> [[N; $SZRows]; $SZCols] {$/;"	f
into	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/conversion.rs	/^            fn into(self) -> mint::$MV<N> {$/;"	f
into	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/conversion.rs	/^            fn into(self) -> mint::$VT<N> {$/;"	f
into	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_conversion.rs	/^    fn into(self) -> mint::Quaternion<N> {$/;"	f
into_iter	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/conversion.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	f
into_owned	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn into_owned(self) -> MatrixMN<N, R, C>$/;"	f
into_owned	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^    fn into_owned(self) -> Owned<N, R, C>$/;"	f
into_owned	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^            fn into_owned(self) -> Owned<N, R, C>$/;"	f
into_owned	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_vec.rs	/^    fn into_owned(self) -> Owned<N, Dynamic, C>$/;"	f
into_owned	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_vec.rs	/^    fn into_owned(self) -> Owned<N, R, Dynamic>$/;"	f
into_owned	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/storage.rs	/^    fn into_owned(self) -> Owned<N, R, C>$/;"	f
into_owned	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    pub fn into_owned(self) -> Quaternion<N> {$/;"	f
into_owned	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    pub fn into_owned(self) -> UnitQuaternion<N> {$/;"	f
into_owned_sum	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn into_owned_sum<R2, C2>(self) -> MatrixSum<N, R, C, R2, C2>$/;"	f
inv	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/inv.rs	/^    fn inv(self) -> Self::Output;$/;"	f
inv	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/inv.rs	/^    fn inv(self) -> f32 { 1.0 \/ *self }$/;"	f
inv	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/inv.rs	/^    fn inv(self) -> f32 { 1.0 \/ self }$/;"	f
inv	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/inv.rs	/^    fn inv(self) -> f64 { 1.0 \/ *self }$/;"	f
inv	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/inv.rs	/^    fn inv(self) -> f64 { 1.0 \/ self }$/;"	f
inv	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/mod.rs	/^pub mod inv;$/;"	m
inv_permute_columns	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/permutation_sequence.rs	/^    pub fn inv_permute_columns<N: Scalar, R2: Dim, C2: Dim, S2>(&self, rhs: &mut Matrix<N, R2, C2, S2>)$/;"	f
inv_permute_rows	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/permutation_sequence.rs	/^    pub fn inv_permute_rows<N: Scalar, R2: Dim, C2: Dim, S2>(&self, rhs: &mut Matrix<N, R2, C2, S2>)$/;"	f
invalidate	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    fn invalidate(&mut self) {$/;"	f
inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^    fn inverse(&self) -> Self {$/;"	f
inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/operator.rs	/^            fn inverse(&self) -> Self {$/;"	f
inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/operator.rs	/^    fn inverse(&self) -> Complex<N> {$/;"	f
inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/operator.rs	/^    fn inverse(&self) -> Self {$/;"	f
inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/operator.rs	/^    fn inverse(&self) -> Self;$/;"	f
inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/operator.rs	/^    fn inverse(&self) -> decimal::d128 {$/;"	f
inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/operator.rs	/^    fn inverse(&self) -> f32 {$/;"	f
inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/operator.rs	/^    fn inverse(&self) -> f64 {$/;"	f
inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/wrapper.rs	/^    fn inverse(&self) -> Self {$/;"	f
inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^    fn inverse(&self) -> MatrixMN<N, R, C> {$/;"	f
inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry.rs	/^    pub fn inverse(&self) -> Isometry<N, D, R> {$/;"	f
inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_alga.rs	/^    fn inverse(&self) -> Self {$/;"	f
inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/orthographic.rs	/^    pub fn inverse(&self) -> Matrix4<N> {$/;"	f
inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/perspective.rs	/^    pub fn inverse(&self) -> Matrix4<N> {$/;"	f
inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    pub fn inverse(&self) -> UnitQuaternion<N> {$/;"	f
inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^    fn inverse(&self) -> Self {$/;"	f
inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation.rs	/^    pub fn inverse(&self) -> Rotation<N, D> {$/;"	f
inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    fn inverse(&self) -> Self {$/;"	f
inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity.rs	/^    pub fn inverse(&self) -> Similarity<N, D, R> {$/;"	f
inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_alga.rs	/^    fn inverse(&self) -> Self {$/;"	f
inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^    pub fn inverse(self) -> Transform<N, D, C>$/;"	f
inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform_alga.rs	/^    fn inverse(&self) -> Self {$/;"	f
inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation.rs	/^    pub fn inverse(&self) -> Translation<N, D>$/;"	f
inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_alga.rs	/^    fn inverse(&self) -> Self {$/;"	f
inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex.rs	/^    pub fn inverse(&self) -> Self {$/;"	f
inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_alga.rs	/^    fn inverse(&self) -> Self {$/;"	f
inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub fn inverse<M: Inverse<Multiplicative>>(m: &M) -> M {$/;"	f
inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/cholesky.rs	/^    pub fn inverse(&self) -> MatrixN<N, D> {$/;"	f
inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/mod.rs	/^mod inverse;$/;"	m
inverse_local_rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn inverse_local_rotation(&self) -> UnitQuaternion<f32> {$/;"	f
inverse_local_transformation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn inverse_local_transformation(&self) -> Isometry3<f32> {$/;"	f
inverse_local_translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn inverse_local_translation(&self) -> Translation3<f32> {$/;"	f
inverse_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^    fn inverse_mut(&mut self) {$/;"	f
inverse_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/operator.rs	/^    fn inverse_mut(&mut self) {$/;"	f
inverse_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^    fn inverse_mut(&mut self) {$/;"	f
inverse_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry.rs	/^    pub fn inverse_mut(&mut self) {$/;"	f
inverse_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_alga.rs	/^    fn inverse_mut(&mut self) {$/;"	f
inverse_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    pub fn inverse_mut(&mut self) {$/;"	f
inverse_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^    fn inverse_mut(&mut self) {$/;"	f
inverse_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation.rs	/^    pub fn inverse_mut(&mut self) {$/;"	f
inverse_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    fn inverse_mut(&mut self) {$/;"	f
inverse_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity.rs	/^    pub fn inverse_mut(&mut self) {$/;"	f
inverse_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_alga.rs	/^    fn inverse_mut(&mut self) {$/;"	f
inverse_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^    pub fn inverse_mut(&mut self)$/;"	f
inverse_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform_alga.rs	/^    fn inverse_mut(&mut self) {$/;"	f
inverse_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation.rs	/^    pub fn inverse_mut(&mut self)$/;"	f
inverse_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_alga.rs	/^    fn inverse_mut(&mut self) {$/;"	f
inverse_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex.rs	/^    pub fn inverse_mut(&mut self) {$/;"	f
inverse_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_alga.rs	/^    fn inverse_mut(&mut self) {$/;"	f
inverse_rotate_point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn inverse_rotate_point(&self, pt: &E) -> E {$/;"	f
inverse_rotate_vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn inverse_rotate_vector(&self, pt: &E::Coordinates) -> E::Coordinates {$/;"	f
inverse_scale_point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn inverse_scale_point(&self, pt: &E) -> E {$/;"	f
inverse_scale_vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn inverse_scale_vector(&self, pt: &E::Coordinates) -> E::Coordinates {$/;"	f
inverse_transform_point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/id.rs	/^    fn inverse_transform_point(&self, pt: &E) -> E {$/;"	f
inverse_transform_point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn inverse_transform_point(&self, pt: &E) -> E {$/;"	f
inverse_transform_point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn inverse_transform_point(&self, pt: &E) -> E;$/;"	f
inverse_transform_point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_alga.rs	/^    fn inverse_transform_point(&self, pt: &Point<N, D>) -> Point<N, D> {$/;"	f
inverse_transform_point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^    fn inverse_transform_point(&self, pt: &Point3<N>) -> Point3<N> {$/;"	f
inverse_transform_point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    fn inverse_transform_point(&self, pt: &Point<N, D>) -> Point<N, D> {$/;"	f
inverse_transform_point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_alga.rs	/^    fn inverse_transform_point(&self, pt: &Point<N, D>) -> Point<N, D> {$/;"	f
inverse_transform_point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform_alga.rs	/^    fn inverse_transform_point(&self, pt: &Point<N, D>) -> Point<N, D> {$/;"	f
inverse_transform_point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_alga.rs	/^    fn inverse_transform_point(&self, pt: &Point<N, D>) -> Point<N, D> {$/;"	f
inverse_transform_point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_alga.rs	/^    fn inverse_transform_point(&self, pt: &Point2<N>) -> Point2<N> {$/;"	f
inverse_transform_vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/id.rs	/^    fn inverse_transform_vector(&self, v: &E::Coordinates) -> E::Coordinates {$/;"	f
inverse_transform_vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn inverse_transform_vector(&self, v: &E::Coordinates) -> E::Coordinates {$/;"	f
inverse_transform_vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn inverse_transform_vector(&self, v: &E::Coordinates) -> E::Coordinates;$/;"	f
inverse_transform_vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_alga.rs	/^    fn inverse_transform_vector(&self, v: &VectorN<N, D>) -> VectorN<N, D> {$/;"	f
inverse_transform_vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^    fn inverse_transform_vector(&self, v: &Vector3<N>) -> Vector3<N> {$/;"	f
inverse_transform_vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    fn inverse_transform_vector(&self, v: &VectorN<N, D>) -> VectorN<N, D> {$/;"	f
inverse_transform_vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_alga.rs	/^    fn inverse_transform_vector(&self, v: &VectorN<N, D>) -> VectorN<N, D> {$/;"	f
inverse_transform_vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform_alga.rs	/^    fn inverse_transform_vector(&self, v: &VectorN<N, D>) -> VectorN<N, D> {$/;"	f
inverse_transform_vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_alga.rs	/^    fn inverse_transform_vector(&self, v: &VectorN<N, D>) -> VectorN<N, D> {$/;"	f
inverse_transform_vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_alga.rs	/^    fn inverse_transform_vector(&self, v: &Vector2<N>) -> Vector2<N> {$/;"	f
inverse_transformation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/arc_ball.rs	/^    fn inverse_transformation(&self) -> Matrix4<f32> {$/;"	f
inverse_transformation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/camera.rs	/^    fn inverse_transformation(&self) -> Matrix4<f32>;$/;"	f
inverse_transformation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^    fn inverse_transformation(&self) -> Matrix4<f32> {$/;"	f
inverse_transformation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person_stereo.rs	/^    fn inverse_transformation(&self) -> Matrix4<f32> {$/;"	f
inverse_translate_point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn inverse_translate_point(&self, pt: &E) -> E {$/;"	f
inverse_world_transformation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn inverse_world_transformation(&self) -> Isometry3<f32> {$/;"	f
ipd	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person_stereo.rs	/^    pub fn ipd(&self) -> f32 {$/;"	f
is	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^    fn is<D: Dim>() -> bool {$/;"	f
is	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/scalar.rs	/^    fn is<T: Scalar>() -> bool {$/;"	f
is_closed	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn is_closed(&self) -> bool {$/;"	f
is_contiguous	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^    fn is_contiguous(&self) -> bool {$/;"	f
is_contiguous	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^            fn is_contiguous(&self) -> bool {$/;"	f
is_contiguous	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_vec.rs	/^    fn is_contiguous(&self) -> bool {$/;"	f
is_contiguous	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/storage.rs	/^    fn is_contiguous(&self) -> bool;$/;"	f
is_convertible	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub fn is_convertible<From: SupersetOf<To>, To>(t: &From) -> bool {$/;"	f
is_empty	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/properties.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_finite	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn is_finite(self) -> bool {$/;"	f
is_finite	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn is_finite(self) -> bool;$/;"	f
is_identity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/properties.rs	/^    pub fn is_identity(&self, eps: N::Epsilon) -> bool$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^    fn is_in_subset(t: &T) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/subset.rs	/^            fn is_in_subset(_: &$superset) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/subset.rs	/^            fn is_in_subset(c: &Complex<N2>) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/subset.rs	/^    fn is_in_subset(&self) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/subset.rs	/^    fn is_in_subset(&self) -> bool;$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/subset.rs	/^    fn is_in_subset(c: &Complex<N2>) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/subset.rs	/^    fn is_in_subset(element: &T) -> bool;$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/conversion.rs	/^    fn is_in_subset(m: &MatrixMN<N2, R2, C2>) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/unit.rs	/^    fn is_in_subset(value: &T) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_conversion.rs	/^    fn is_in_subset(iso: &Isometry<N2, D, R2>) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_conversion.rs	/^    fn is_in_subset(m: &MatrixN<N2, DimNameSum<D, U1>>) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_conversion.rs	/^    fn is_in_subset(sim: &Similarity<N2, D, R2>) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_conversion.rs	/^    fn is_in_subset(t: &Transform<N2, D, C>) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_conversion.rs	/^    fn is_in_subset(m: &Point<N2, D>) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_conversion.rs	/^    fn is_in_subset(v: &VectorN<N2, DimNameSum<D, U1>>) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_conversion.rs	/^    fn is_in_subset(iso: &Isometry<N2, U3, R>) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_conversion.rs	/^    fn is_in_subset(m: &Matrix4<N2>) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_conversion.rs	/^    fn is_in_subset(q: &Quaternion<N2>) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_conversion.rs	/^    fn is_in_subset(rot: &Rotation3<N2>) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_conversion.rs	/^    fn is_in_subset(sim: &Similarity<N2, U3, R>) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_conversion.rs	/^    fn is_in_subset(t: &Transform<N2, U3, C>) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_conversion.rs	/^    fn is_in_subset(uq: &UnitQuaternion<N2>) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_conversion.rs	/^    fn is_in_subset(iso: &Isometry<N2, D, R>) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_conversion.rs	/^    fn is_in_subset(m: &MatrixN<N2, DimNameSum<D, U1>>) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_conversion.rs	/^    fn is_in_subset(q: &UnitComplex<N2>) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_conversion.rs	/^    fn is_in_subset(q: &UnitQuaternion<N2>) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_conversion.rs	/^    fn is_in_subset(rot: &Rotation<N2, D>) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_conversion.rs	/^    fn is_in_subset(sim: &Similarity<N2, D, R>) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_conversion.rs	/^    fn is_in_subset(t: &Transform<N2, D, C>) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_conversion.rs	/^    fn is_in_subset(m: &MatrixN<N2, DimNameSum<D, U1>>) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_conversion.rs	/^    fn is_in_subset(sim: &Similarity<N2, D, R2>) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_conversion.rs	/^    fn is_in_subset(t: &Transform<N2, D, C>) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform_conversion.rs	/^    fn is_in_subset(m: &MatrixN<N2, DimNameSum<D, U1>>) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform_conversion.rs	/^    fn is_in_subset(t: &Transform<N2, D, C2>) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_conversion.rs	/^    fn is_in_subset(iso: &Isometry<N2, D, R>) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_conversion.rs	/^    fn is_in_subset(m: &MatrixN<N2, DimNameSum<D, U1>>) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_conversion.rs	/^    fn is_in_subset(rot: &Translation<N2, D>) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_conversion.rs	/^    fn is_in_subset(sim: &Similarity<N2, D, R>) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_conversion.rs	/^    fn is_in_subset(t: &Transform<N2, D, C>) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_conversion.rs	/^    fn is_in_subset(iso: &Isometry<N2, U2, R>) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_conversion.rs	/^    fn is_in_subset(m: &Matrix3<N2>) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_conversion.rs	/^    fn is_in_subset(rot: &Rotation2<N2>) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_conversion.rs	/^    fn is_in_subset(sim: &Similarity<N2, U2, R>) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_conversion.rs	/^    fn is_in_subset(t: &Transform<N2, U2, C>) -> bool {$/;"	f
is_in_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_conversion.rs	/^    fn is_in_subset(uq: &UnitComplex<N2>) -> bool {$/;"	f
is_infinite	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn is_infinite(self) -> bool {$/;"	f
is_infinite	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn is_infinite(self) -> bool;$/;"	f
is_invertible	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/properties.rs	/^    pub fn is_invertible(&self) -> bool {$/;"	f
is_invertible	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/full_piv_lu.rs	/^    pub fn is_invertible(&self) -> bool {$/;"	f
is_invertible	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/lu.rs	/^    pub fn is_invertible(&self) -> bool {$/;"	f
is_invertible	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/qr.rs	/^    pub fn is_invertible(&self) -> bool {$/;"	f
is_nan	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn is_nan(self) -> bool {$/;"	f
is_nan	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn is_nan(self) -> bool;$/;"	f
is_negative	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/sign.rs	/^            fn is_negative(&self) -> bool { *self < 0 }$/;"	f
is_negative	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/sign.rs	/^            fn is_negative(&self) -> bool { FloatCore::is_sign_negative(*self) }$/;"	f
is_negative	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/sign.rs	/^    fn is_negative(&self) -> bool { self.0.is_negative() }$/;"	f
is_negative	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/sign.rs	/^    fn is_negative(&self) -> bool;$/;"	f
is_normal	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn is_normal(self) -> bool {$/;"	f
is_normal	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn is_normal(self) -> bool;$/;"	f
is_not_empty	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/loader/obj.rs	/^    fn is_not_empty(s: &&str) -> bool { !s.is_empty() }$/;"	f
is_on_gpu	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gpu_vector.rs	/^    pub fn is_on_gpu(&self) -> bool {$/;"	f
is_on_ram	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gpu_vector.rs	/^    pub fn is_on_ram(&self) -> bool {$/;"	f
is_one	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/identities.rs	/^    fn is_one(&self) -> bool where Self: PartialEq {$/;"	f
is_orthogonal	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/properties.rs	/^    pub fn is_orthogonal(&self, eps: N::Epsilon) -> bool$/;"	f
is_positive	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/sign.rs	/^            fn is_positive(&self) -> bool { *self > 0 }$/;"	f
is_positive	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/sign.rs	/^            fn is_positive(&self) -> bool { FloatCore::is_sign_positive(*self) }$/;"	f
is_positive	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/sign.rs	/^    fn is_positive(&self) -> bool { self.0.is_positive() }$/;"	f
is_positive	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/sign.rs	/^    fn is_positive(&self) -> bool;$/;"	f
is_root	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn is_root(&self) -> bool {$/;"	f
is_sign_negative	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn is_sign_negative(self) -> bool {$/;"	f
is_sign_negative	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn is_sign_negative(self) -> bool;$/;"	f
is_sign_negative	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn is_sign_negative(self) -> bool {$/;"	f
is_sign_negative	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn is_sign_negative(self) -> bool;$/;"	f
is_sign_negative	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn is_sign_negative(self) -> bool;$/;"	f
is_sign_positive	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn is_sign_positive(self) -> bool {$/;"	f
is_sign_positive	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn is_sign_positive(self) -> bool;$/;"	f
is_sign_positive	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn is_sign_positive(self) -> bool {$/;"	f
is_sign_positive	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn is_sign_positive(self) -> bool;$/;"	f
is_sign_positive	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn is_sign_positive(self) -> bool;$/;"	f
is_special_orthogonal	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/properties.rs	/^    pub fn is_special_orthogonal(&self, eps: N) -> bool$/;"	f
is_square	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/properties.rs	/^    pub fn is_square(&self) -> bool {$/;"	f
is_upper_diagonal	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/bidiagonal.rs	/^    pub fn is_upper_diagonal(&self) -> bool {$/;"	f
is_visible	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn is_visible(&self) -> bool {$/;"	f
is_whitespace	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/loader/obj.rs	/^    fn is_whitespace(c: char) -> bool { c.is_whitespace() }$/;"	f
is_zero	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^    fn is_zero(&self) -> bool {$/;"	f
is_zero	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^    fn is_zero(&self) -> bool {$/;"	f
is_zero	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_construction.rs	/^    fn is_zero(&self) -> bool {$/;"	f
is_zero	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/identities.rs	/^            fn is_zero(&self) -> bool { *self == $v }$/;"	f
is_zero	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/identities.rs	/^    fn is_zero(&self) -> bool {$/;"	f
is_zero	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/identities.rs	/^    fn is_zero(&self) -> bool;$/;"	f
isometry	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod isometry;$/;"	m
isometry_alga	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod isometry_alga;$/;"	m
isometry_alias	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod isometry_alias;$/;"	m
isometry_binop_assign_impl_all	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_ops.rs	/^macro_rules! isometry_binop_assign_impl_all($/;"	d
isometry_binop_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_ops.rs	/^macro_rules! isometry_binop_impl($/;"	d
isometry_binop_impl_all	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_ops.rs	/^macro_rules! isometry_binop_impl_all($/;"	d
isometry_construction	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod isometry_construction;$/;"	m
isometry_construction_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_construction.rs	/^macro_rules! isometry_construction_impl($/;"	d
isometry_conversion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod isometry_conversion;$/;"	m
isometry_from_composition_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_ops.rs	/^macro_rules! isometry_from_composition_impl($/;"	d
isometry_from_composition_impl_all	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_ops.rs	/^macro_rules! isometry_from_composition_impl_all($/;"	d
isometry_ops	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod isometry_ops;$/;"	m
it_works	/home/berger/playground/rust/slam/slam-rs/src/lib.rs	/^    fn it_works() {$/;"	f
iter	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/event.rs	/^    pub fn iter(&mut self) -> Events {$/;"	f
iter	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn iter(&self) -> MatrixIter<N, R, C, S> {$/;"	f
iter	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/mod.rs	/^pub mod iter;$/;"	m
iter	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^impl<'a, N, D: DimName> iter::Product<&'a MatrixN<N, D>> for MatrixN<N, D>$/;"	i
iter	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^impl<'a, N, R: DimName, C: DimName> iter::Sum<&'a MatrixMN<N, R, C>> for MatrixMN<N, R, C>$/;"	i
iter	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^    pub fn iter(&self) -> MatrixIter<N, D, U1, <DefaultAllocator as Allocator<N, D>>::Buffer> {$/;"	f
iter::Product for MatrixN	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^impl<N, D: DimName> iter::Product for MatrixN<N, D>$/;"	i
iter::Sum for MatrixMN	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^impl<N, R: DimName, C: DimName> iter::Sum for MatrixMN<N, R, C>$/;"	i
iter_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn iter_mut(&mut self) -> MatrixIterMut<N, R, C, S> {$/;"	f
iter_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^    pub fn iter_mut(&mut self) -> MatrixIterMut<N, D, U1, <DefaultAllocator as Allocator<N, D>>::Buffer> {$/;"	f
iterator	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/iter.rs	/^macro_rules! iterator {$/;"	d
join	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^    fn join(&self, _: &Self) -> Self {$/;"	f
join	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/lattice.rs	/^            fn join(&self, other: &Self) -> Self {$/;"	f
join	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/lattice.rs	/^    fn join(&self, other: &Self) -> Self;$/;"	f
join	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^    fn join(&self, other: &Self) -> Self {$/;"	f
join	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_alga.rs	/^    fn join(&self, other: &Self) -> Self {$/;"	f
kronecker	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^    pub fn kronecker<R2: Dim, C2: Dim, SB>(&self, rhs: &Matrix<N, R2, C2, SB>)$/;"	f
l	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/cholesky.rs	/^    pub fn l(&self) -> MatrixN<N, D> {$/;"	f
l	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/full_piv_lu.rs	/^    pub fn l(&self) -> MatrixMN<N, R, DimMinimum<R, C>>$/;"	f
l	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/lu.rs	/^    pub fn l(&self) -> MatrixMN<N, R, DimMinimum<R, C>>$/;"	f
l_dirty	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/cholesky.rs	/^    pub fn l_dirty(&self) -> &MatrixN<N, D> {$/;"	f
l_unpack	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/lu.rs	/^    pub fn l_unpack(self) -> MatrixMN<N, R, DimMinimum<R, C>>$/;"	f
l_unpack_with_p	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/lu.rs	/^    fn l_unpack_with_p(self) -> (MatrixMN<N, R, DimMinimum<R, C>>,$/;"	f
lattice	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/mod.rs	/^mod lattice;$/;"	m
le	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    fn le(&self, right: &Self) -> bool {$/;"	f
le	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^    fn le(&self, right: &Self) -> bool {$/;"	f
leading_zeros	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/int.rs	/^            fn leading_zeros(self) -> u32 {$/;"	f
leading_zeros	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/int.rs	/^    fn leading_zeros(self) -> u32;$/;"	f
left	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/orthographic.rs	/^    pub fn left(&self) -> N {$/;"	f
left_key	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^    pub fn left_key(&self) -> Option<Key> {$/;"	f
left_scalar_mul_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^macro_rules! left_scalar_mul_impl($/;"	d
left_scalar_mul_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_ops.rs	/^macro_rules! left_scalar_mul_impl($/;"	d
left_scalar_mul_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_ops.rs	/^macro_rules! left_scalar_mul_impl($/;"	d
len	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gpu_vector.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/iter.rs	/^            fn len(&self) -> usize {$/;"	f
len	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/permutation_sequence.rs	/^    pub fn len(&self) -> usize {$/;"	f
lerp	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    pub fn lerp(&self, other: &Quaternion<N>, t: N) -> Quaternion<N> {$/;"	f
lerp	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    pub fn lerp(&self, other: &UnitQuaternion<N>, t: N) -> Quaternion<N> {$/;"	f
light	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/lib.rs	/^pub mod light;$/;"	m
linalg	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub mod linalg;$/;"	m
line_renderer	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/lib.rs	/^pub mod line_renderer;$/;"	m
linear	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/lib.rs	/^pub mod linear;$/;"	m
linear	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^impl<N: Real, D: DimName> linear::Rotation<Point<N, D>> for Rotation<N, D>$/;"	i
linear_index	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/storage.rs	/^    fn linear_index(&self, irow: usize, icol: usize) -> usize {$/;"	f
lines_width	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/object.rs	/^    pub fn lines_width(&self) -> f32 {$/;"	f
ln	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn ln(self) -> Self {$/;"	f
ln	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn ln(self) -> Self;$/;"	f
ln	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    pub fn ln(&self) -> Quaternion<N> {$/;"	f
ln	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn ln(self) -> Self;$/;"	f
ln	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn ln(self) -> Self;$/;"	f
ln_10	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn ln_10() -> Self {$/;"	f
ln_10	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn ln_10() -> Self;$/;"	f
ln_1p	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn ln_1p(self) -> Self {$/;"	f
ln_1p	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn ln_1p(self) -> Self;$/;"	f
ln_1p	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn ln_1p(self) -> Self;$/;"	f
ln_1p	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn ln_1p(self) -> Self;$/;"	f
ln_2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn ln_2() -> Self {$/;"	f
ln_2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn ln_2() -> Self;$/;"	f
load_from_g2o	/home/berger/playground/rust/slam/slam-rs/src/graphs/mod.rs	/^    fn load_from_g2o(&mut self, fname: &str) {$/;"	f
load_from_g2o	/home/berger/playground/rust/slam/slam-rs/src/graphs/mod.rs	/^    fn load_from_g2o(&mut self, fname: &str);$/;"	f
load_from_g2o	/home/berger/playground/rust/slam/slam-rs/src/graphs/mod.rs	/^    fn load_from_g2o() {$/;"	f
load_from_toro	/home/berger/playground/rust/slam/slam-rs/src/graphs/mod.rs	/^    fn load_from_toro(&mut self, _fname: &str) {$/;"	f
load_obj	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/mesh_manager.rs	/^    pub fn load_obj(path: &Path, mtl_dir: &Path, geometry_name: &str)$/;"	f
load_shader_program	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/shader.rs	/^fn load_shader_program(vertex_shader: &str, fragment_shader: &str) -> (GLuint, GLuint, GLuint) {$/;"	f
load_texture	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/texture_manager.rs	/^    fn load_texture(path: &Path) -> Rc<Texture> {$/;"	f
load_to_gpu	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gpu_vector.rs	/^    pub fn load_to_gpu(&mut self) {$/;"	f
load_to_ram	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gpu_vector.rs	/^    pub fn load_to_ram(&mut self) {$/;"	f
loader	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/lib.rs	/^pub mod loader;$/;"	m
local_rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn local_rotation(&self) -> UnitQuaternion<f32> {$/;"	f
local_scale	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn local_scale(&self) -> Vector3<f32> {$/;"	f
local_transformation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn local_transformation(&self) -> Isometry3<f32> {$/;"	f
local_translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn local_translation(&self) -> Translation3<f32> {$/;"	f
log	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn log(self, base: Self) -> Self {$/;"	f
log	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn log(self, base: Self) -> Self;$/;"	f
log	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn log(self, base: Self) -> Self;$/;"	f
log	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn log(self, base: Self) -> Self;$/;"	f
log10	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn log10(self) -> Self {$/;"	f
log10	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn log10(self) -> Self;$/;"	f
log10	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn log10(self) -> Self;$/;"	f
log10	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn log10(self) -> Self;$/;"	f
log10_e	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn log10_e() -> Self {$/;"	f
log10_e	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn log10_e() -> Self;$/;"	f
log2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn log2(self) -> Self {$/;"	f
log2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn log2(self) -> Self;$/;"	f
log2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn log2(self) -> Self;$/;"	f
log2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn log2(self) -> Self;$/;"	f
log2_e	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn log2_e() -> Self {$/;"	f
log2_e	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn log2_e() -> Self;$/;"	f
look_at	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/arc_ball.rs	/^    pub fn look_at(&mut self, eye: Point3<f32>, at: Point3<f32>) {$/;"	f
look_at	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^    pub fn look_at(&mut self, eye: Point3<f32>, at: Point3<f32>) {$/;"	f
look_at	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person_stereo.rs	/^    pub fn look_at(&mut self, eye: Point3<f32>, at: Point3<f32>) {$/;"	f
look_at_lh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/cg.rs	/^    pub fn look_at_lh(eye: &Point3<N>, target: &Point3<N>, up: &Vector3<N>) -> Self {$/;"	f
look_at_lh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_construction.rs	/^            pub fn look_at_lh(eye:    &Point3<N>,$/;"	f
look_at_lh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_construction.rs	/^    pub fn look_at_lh<SB, SC>(dir: &Vector<N, U3, SB>, up: &Vector<N, U3, SC>) -> Self$/;"	f
look_at_lh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_specialization.rs	/^    pub fn look_at_lh<SB, SC>(dir: &Vector<N, U3, SB>, up: &Vector<N, U3, SC>) -> Self$/;"	f
look_at_lh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_construction.rs	/^            pub fn look_at_lh(eye:     &Point3<N>,$/;"	f
look_at_rh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/cg.rs	/^    pub fn look_at_rh(eye: &Point3<N>, target: &Point3<N>, up: &Vector3<N>) -> Self {$/;"	f
look_at_rh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_construction.rs	/^            pub fn look_at_rh(eye:    &Point3<N>,$/;"	f
look_at_rh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_construction.rs	/^    pub fn look_at_rh<SB, SC>(dir: &Vector<N, U3, SB>, up: &Vector<N, U3, SC>) -> Self$/;"	f
look_at_rh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_specialization.rs	/^    pub fn look_at_rh<SB, SC>(dir: &Vector<N, U3, SB>, up: &Vector<N, U3, SC>) -> Self$/;"	f
look_at_rh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_construction.rs	/^            pub fn look_at_rh(eye:     &Point3<N>,$/;"	f
lower_triangle	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/edition.rs	/^    pub fn lower_triangle(&self) -> MatrixMN<N, R, C>$/;"	f
lt	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    fn lt(&self, right: &Self) -> bool {$/;"	f
lt	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^    fn lt(&self, right: &Self) -> bool {$/;"	f
lu	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/lu.rs	/^    pub fn lu(self) -> LU<N, R, C> {$/;"	f
lu	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/mod.rs	/^mod lu;$/;"	m
lu_internal	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/full_piv_lu.rs	/^    pub fn lu_internal(&self) -> &MatrixMN<N, R, C> {$/;"	f
lu_internal	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/lu.rs	/^    pub fn lu_internal(&self) -> &MatrixMN<N, R, C> {$/;"	f
macros	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/lib.rs	/^mod macros;$/;"	m
macros	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^mod macros;$/;"	m
main	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/lib.rs	/^fn main() {$/;"	f
main	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^fn main() {$/;"	f
main	/home/berger/playground/rust/slam/slam-rs/src/bin/graph-visualiser/main.rs	/^fn main() {$/;"	f
map	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn map<N2: Scalar, F: FnMut(N) -> N2>(&self, mut f: F) -> MatrixMN<N2, R, C>$/;"	f
marker_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_alga.rs	/^macro_rules! marker_impl($/;"	d
marker_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^macro_rules! marker_impl($/;"	d
marker_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^macro_rules! marker_impl($/;"	d
marker_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_alga.rs	/^macro_rules! marker_impl($/;"	d
marker_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_alga.rs	/^macro_rules! marker_impl($/;"	d
material	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/mod.rs	/^pub mod material;$/;"	m
material	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/object.rs	/^    pub fn material(&self) -> Rc<RefCell<Box<Material + 'static>>> {$/;"	f
material_manager	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/mod.rs	/^mod material_manager;$/;"	m
matrix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/mod.rs	/^mod matrix;$/;"	m
matrix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/mod.rs	/^mod matrix;$/;"	m
matrix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation.rs	/^    pub fn matrix(&self) -> &MatrixN<N, D> {$/;"	f
matrix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^    pub fn matrix(&self) -> &MatrixN<N, DimNameSum<D, U1>> {$/;"	f
matrix_alga	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/mod.rs	/^mod matrix_alga;$/;"	m
matrix_array	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/mod.rs	/^mod matrix_array;$/;"	m
matrix_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation.rs	/^    pub unsafe fn matrix_mut(&mut self) -> &mut MatrixN<N, D> {$/;"	f
matrix_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^    pub fn matrix_mut(&mut self) -> &mut MatrixN<N, DimNameSum<D, U1>> {$/;"	f
matrix_mut_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^    pub fn matrix_mut_unchecked(&mut self) -> &mut MatrixN<N, DimNameSum<D, U1>> {$/;"	f
matrix_slice	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/mod.rs	/^mod matrix_slice;$/;"	m
matrix_slice_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^macro_rules! matrix_slice_impl($/;"	d
matrix_vec	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/mod.rs	/^mod matrix_vec;$/;"	m
max	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn max(self, other: Self) -> Self {$/;"	f
max	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn max(self, other: Self) -> Self;$/;"	f
max	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub fn max<T: Ord>(a: T, b: T) -> T {$/;"	f
max	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn max(self, other: Self) -> Self {$/;"	f
max	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn max(self, other: Self) -> Self;$/;"	f
max	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn max(self, other: Self) -> Self;$/;"	f
max_value	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^    fn max_value() -> Self {$/;"	f
max_value	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_construction.rs	/^    fn max_value() -> Self {$/;"	f
max_value	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/bounds.rs	/^            fn max_value() -> $t { $max }$/;"	f
max_value	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/bounds.rs	/^            fn max_value() -> Self {$/;"	f
max_value	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/bounds.rs	/^    fn max_value() -> Self { Wrapping(T::max_value()) }$/;"	f
max_value	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/bounds.rs	/^    fn max_value() -> Self;$/;"	f
max_value	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn max_value() -> Self;$/;"	f
max_value	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn max_value() -> Self;$/;"	f
md_assign_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/op_macros.rs	/^macro_rules! md_assign_impl($/;"	d
md_assign_impl_all	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/op_macros.rs	/^macro_rules! md_assign_impl_all($/;"	d
md_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/op_macros.rs	/^macro_rules! md_impl($/;"	d
md_impl_all	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/op_macros.rs	/^macro_rules! md_impl_all($/;"	d
meet	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^    fn meet(&self, _: &Self) -> Self {$/;"	f
meet	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/lattice.rs	/^            fn meet(&self, other: &Self) -> Self {$/;"	f
meet	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/lattice.rs	/^    fn meet(&self, other: &Self) -> Self;$/;"	f
meet	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^    fn meet(&self, other: &Self) -> Self {$/;"	f
meet	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_alga.rs	/^    fn meet(&self, other: &Self) -> Self {$/;"	f
meet_join	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/lattice.rs	/^            fn meet_join(&self, other: &Self) -> (Self, Self) {$/;"	f
meet_join	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/lattice.rs	/^    fn meet_join(&self, other: &Self) -> (Self, Self) {$/;"	f
meet_join	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^    fn meet_join(&self, other: &Self) -> (Self, Self) {$/;"	f
meet_join	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_alga.rs	/^    fn meet_join(&self, other: &Self) -> (Self, Self) {$/;"	f
mesh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/mod.rs	/^mod mesh;$/;"	m
mesh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/object.rs	/^    pub fn mesh(&self) -> &Rc<RefCell<Mesh>> {$/;"	f
mesh_manager	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/mod.rs	/^mod mesh_manager;$/;"	m
min	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn min(self, other: Self) -> Self {$/;"	f
min	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn min(self, other: Self) -> Self;$/;"	f
min	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub fn min<T: Ord>(a: T, b: T) -> T {$/;"	f
min	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn min(self, other: Self) -> Self {$/;"	f
min	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn min(self, other: Self) -> Self;$/;"	f
min	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn min(self, other: Self) -> Self;$/;"	f
min_positive_value	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn min_positive_value() -> Self;$/;"	f
min_positive_value	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn min_positive_value() -> Self;$/;"	f
min_value	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^    fn min_value() -> Self {$/;"	f
min_value	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_construction.rs	/^    fn min_value() -> Self {$/;"	f
min_value	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/bounds.rs	/^            fn min_value() -> $t { $min }$/;"	f
min_value	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/bounds.rs	/^            fn min_value() -> Self {$/;"	f
min_value	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/bounds.rs	/^    fn min_value() -> Self { Wrapping(T::min_value()) }$/;"	f
min_value	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/bounds.rs	/^    fn min_value() -> Self;$/;"	f
min_value	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn min_value() -> Self;$/;"	f
min_value	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn min_value() -> Self;$/;"	f
modify_faces	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/object.rs	/^    pub fn modify_faces<F: FnMut(&mut Vec<Point3<GLuint>>)>(&mut self, f: &mut F) {$/;"	f
modify_faces	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn modify_faces<F: FnMut(&mut Vec<Point3<u32>>)>(&mut self, f: &mut F) {$/;"	f
modify_normals	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/object.rs	/^    pub fn modify_normals<F: FnMut(&mut Vec<Vector3<GLfloat>>)>(&mut self, f: &mut F) {$/;"	f
modify_normals	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn modify_normals<F: FnMut(&mut Vec<Vector3<f32>>)>(&mut self, f: &mut F) {$/;"	f
modify_uvs	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/object.rs	/^    pub fn modify_uvs<F: FnMut(&mut Vec<Point2<GLfloat>>)>(&mut self, f: &mut F) {$/;"	f
modify_uvs	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn modify_uvs<F: FnMut(&mut Vec<Point2<f32>>)>(&mut self, f: &mut F) {$/;"	f
modify_vertices	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/object.rs	/^    pub fn modify_vertices<F: FnMut(&mut Vec<Point3<GLfloat>>)>(&mut self, f: &mut F) {$/;"	f
modify_vertices	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn modify_vertices<F: FnMut(&mut Vec<Point3<f32>>)>(&mut self, f: &mut F) {$/;"	f
module	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/mod.rs	/^mod module;$/;"	m
move_dir	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^    pub fn move_dir(&self, up: bool, down: bool, right: bool, left: bool) -> Vector3<f32> {$/;"	f
move_step	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^    pub fn move_step(&self) -> f32 {$/;"	f
mtl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/loader/mod.rs	/^pub mod mtl;$/;"	m
mul	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^    fn mul(self, _: Id) -> Id {$/;"	f
mul	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/wrapper.rs	/^    fn mul(self, lhs: Self) -> Self {$/;"	f
mul	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^            fn mul(self, rhs: &'b Matrix<$T, R, C, S>) -> Self::Output {$/;"	f
mul	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^            fn mul(self, rhs: Matrix<$T, R, C, S>) -> Self::Output {$/;"	f
mul	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^    fn mul(self, rhs: &'b Matrix<N, R2, C2, SB>) -> Self::Output {$/;"	f
mul	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^    fn mul(self, rhs: Matrix<N, R2, C2, SB>) -> Self::Output {$/;"	f
mul	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_ops.rs	/^            fn mul(self, right: &'b Point<$T, D>) -> Self::Output {$/;"	f
mul	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_ops.rs	/^            fn mul(self, right: Point<$T, D>) -> Self::Output {$/;"	f
mul	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_ops.rs	/^            fn mul(self, right: &'b Quaternion<$T>) -> Self::Output {$/;"	f
mul	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_ops.rs	/^            fn mul(self, right: Quaternion<$T>) -> Self::Output {$/;"	f
mul	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_ops.rs	/^    fn mul(self, rhs: &'b UnitComplex<N>) -> UnitComplex<N> {$/;"	f
mul	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_ops.rs	/^    fn mul(self, rhs: UnitComplex<N>) -> UnitComplex<N> {$/;"	f
mul_add	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn mul_add(self, a: Self, b: Self) -> Self {$/;"	f
mul_add	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn mul_add(self, a: Self, b: Self) -> Self;$/;"	f
mul_add	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn mul_add(self, a: Self, b: Self) -> Self;$/;"	f
mul_add	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/mod.rs	/^pub mod mul_add;$/;"	m
mul_add	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/mul_add.rs	/^            fn mul_add(self, a: Self, b: Self) -> Self::Output {$/;"	f
mul_add	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/mul_add.rs	/^    fn mul_add(self, a: A, b: B) -> Self::Output;$/;"	f
mul_add	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/mul_add.rs	/^    fn mul_add(self, a: Self, b: Self) -> Self::Output {$/;"	f
mul_add	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn mul_add(self, a: Self, b: Self) -> Self;$/;"	f
mul_add_assign	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/mul_add.rs	/^            fn mul_add_assign(&mut self, a: Self, b: Self) {$/;"	f
mul_add_assign	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/mul_add.rs	/^    fn mul_add_assign(&mut self, a: A, b: B);$/;"	f
mul_add_assign	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/mul_add.rs	/^    fn mul_add_assign(&mut self, a: Self, b: Self) {$/;"	f
mul_add_assign_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/mul_add.rs	/^macro_rules! mul_add_assign_impl {$/;"	d
mul_add_float	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/mul_add.rs	/^    fn mul_add_float() {$/;"	f
mul_add_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/mul_add.rs	/^macro_rules! mul_add_impl {$/;"	d
mul_add_integer	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/mul_add.rs	/^    fn mul_add_integer() {$/;"	f
mul_assign	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^    fn mul_assign(&mut self, _: Id) {$/;"	f
mul_assign	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^    fn mul_assign(&mut self, rhs: &'b Matrix<N, R2, C1, SB>) {$/;"	f
mul_assign	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^    fn mul_assign(&mut self, rhs: Matrix<N, R2, C1, SB>) {$/;"	f
mul_assign	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_ops.rs	/^    fn mul_assign(&mut self, rhs: &'b Rotation<N, U2>) {$/;"	f
mul_assign	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_ops.rs	/^    fn mul_assign(&mut self, rhs: &'b UnitComplex<N>) {$/;"	f
mul_assign	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_ops.rs	/^    fn mul_assign(&mut self, rhs: Rotation<N, U2>) {$/;"	f
mul_assign	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_ops.rs	/^    fn mul_assign(&mut self, rhs: UnitComplex<N>) {$/;"	f
mul_to	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^    pub fn mul_to<R2: Dim, C2: Dim, SB,$/;"	f
multiply_by	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/module.rs	/^    fn multiply_by(&self, r: Self::AbstractRing) -> Self;$/;"	f
multiply_by	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^    fn multiply_by(&self, n: N) -> Self {$/;"	f
multiply_by	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^    fn multiply_by(&self, n: N) -> Self {$/;"	f
mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/tools/kiss3d_recording.rs	/^static mut avformat_init: Once = ONCE_INIT;$/;"	c
mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^        static mut GLFW_SINGLETON: Option<glfw::Glfw> = None;$/;"	c
name	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^            fn name() -> Self {$/;"	f
name	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^    fn name() -> Self {$/;"	f
name	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^    fn name() -> Self;$/;"	f
named_dimension	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^macro_rules! named_dimension($/;"	d
nan	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn nan() -> Self;$/;"	f
ncols	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn ncols(&self) -> usize {$/;"	f
ncolumns	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/matrix.rs	/^    fn ncolumns(&self) -> usize;$/;"	f
ncolumns	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    fn ncolumns(&self) -> usize {$/;"	f
needs_rendering	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/line_renderer.rs	/^    pub fn needs_rendering(&self) -> bool {$/;"	f
needs_rendering	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/point_renderer.rs	/^    pub fn needs_rendering(&self) -> bool {$/;"	f
neg	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/wrapper.rs	/^    fn neg(mut self) -> Self {$/;"	f
neg	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^    fn neg(self) -> Self::Output {$/;"	f
neg	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/unit.rs	/^    fn neg(self) -> Self::Output {$/;"	f
neg	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_ops.rs	/^    fn neg(self) -> Self::Output {$/;"	f
neg	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_ops.rs	/^    fn neg(self) -> Self::Output {$/;"	f
neg_infinity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn neg_infinity() -> Self;$/;"	f
neg_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^    pub fn neg_mut(&mut self) {$/;"	f
neg_zero	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn neg_zero() -> Self;$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^    pub fn new() -> Id<O> {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/wrapper.rs	/^    pub fn new(val: T) -> Self {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/builtin/normals_material.rs	/^    pub fn new() -> NormalsMaterial {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/builtin/object_material.rs	/^    pub fn new() -> ObjectMaterial {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/builtin/uvs_material.rs	/^    pub fn new() -> UvsMaterial {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/arc_ball.rs	/^    pub fn new(eye: Point3<f32>, at: Point3<f32>) -> ArcBall {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^    pub fn new(eye: Point3<f32>, at: Point3<f32>) -> FirstPerson {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person_stereo.rs	/^    pub fn new(eye: Point3<f32>, at: Point3<f32>, ipd: f32) -> FirstPersonStereo {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/line_renderer.rs	/^    pub fn new() -> LineRenderer {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/loader/mtl.rs	/^    pub fn new(name:             String,$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/point_renderer.rs	/^    pub fn new() -> PointRenderer {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/grayscales.rs	/^    pub fn new() -> Grayscales {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/oculus_stereo.rs	/^    pub fn new() -> OculusStereo {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/sobel_edge_highlight.rs	/^    pub fn new(threshold: f32) -> SobelEdgeHighlight {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/waves.rs	/^    pub fn new() -> Waves {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/framebuffer_manager.rs	/^    pub fn new() -> FramebufferManager {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gpu_vector.rs	/^    pub fn new(data: Vec<T>, buf_type: BufferType, alloc_type: AllocationType) -> GPUVec<T> {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gpu_vector.rs	/^    pub fn new(handle: GLuint) -> GLHandle {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/material_manager.rs	/^    pub fn new() -> MaterialManager {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/mesh.rs	/^    pub fn new(coords:       Vec<Point3<GLfloat>>,$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/mesh_manager.rs	/^    pub fn new() -> MeshManager {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/shader.rs	/^    pub fn new(vshader_path: &Path, fshader_path: &Path) -> Option<Shader> {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/texture_manager.rs	/^    pub fn new() -> Rc<Texture> {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/texture_manager.rs	/^    pub fn new() -> TextureManager {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/object.rs	/^    pub fn new(mesh:         Rc<RefCell<Mesh>>,$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn new(local_scale:     Vector3<f32>,$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/text/font.rs	/^    pub fn new(path: &Path, size: i32) -> Rc<Font> {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/text/glyph.rs	/^    pub fn new(tex:        Vector2<f32>,$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/text/renderer.rs	/^    pub fn new() -> TextRenderer {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/text/renderer.rs	/^    pub fn new(color: Point3<f32>, font: Rc<Font>, begin: usize, size: usize) -> TextRenderContext {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/tools/kiss3d_recording.rs	/^    pub fn new(path: Path, width: usize, height: usize) -> Recorder {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/event.rs	/^    fn new(stream:    glfw::FlushedMessages<'a, (f64, glfw::WindowEvent)>,$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/event.rs	/^    fn new(timestamp: f64,$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/event.rs	/^    pub fn new(events:    Rc<Receiver<(f64, glfw::WindowEvent)>>,$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn new(title: &str) -> Window {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^            pub fn new($($args: N),*) -> Self {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^    pub fn new(value: usize) -> Dynamic {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/iter.rs	/^            pub fn new(storage: $SRef) -> $Name<'a, N, R, C, S> {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^    pub fn new() -> Self {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_vec.rs	/^    pub fn new(nrows: R, ncols: C, data: Vec<N>) -> MatrixVec<N, R, C> {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/debug/random_orthogonal.rs	/^    pub fn new<Rand: FnMut() -> N>(dim: D, mut rand: Rand) -> Self {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/debug/random_sdp.rs	/^    pub fn new<Rand: FnMut() -> N>(dim: D, mut rand: Rand) -> Self {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_construction.rs	/^            pub fn new(translation: Vector3<N>, axisangle: Vector3<N>) -> Self {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_construction.rs	/^    pub fn new(translation: Vector2<N>, angle: N) -> Self {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/orthographic.rs	/^    pub fn new(left: N, right: N, bottom: N, top: N, znear: N, zfar: N) -> Self {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/perspective.rs	/^    pub fn new(aspect: N, fovy: N, znear: N, zfar: N) -> Self {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_construction.rs	/^            pub fn new($($args: N),*) -> Point<N, $D> {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_construction.rs	/^    pub fn new(w: N, x: N, y: N, z: N) -> Self {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_construction.rs	/^    pub fn new<SB>(axisangle: Vector<N, U3, SB>) -> Self$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/reflection.rs	/^    pub fn new(axis: Unit<Vector<N, D, S>>, bias: N) -> Reflection<N, D, S> {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_specialization.rs	/^    pub fn new(angle: N) -> Self {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_specialization.rs	/^    pub fn new<SB: Storage<N, U3>>(axisangle: Vector<N, U3, SB>) -> Self {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_construction.rs	/^            pub fn new(translation: Vector3<N>, axisangle: Vector3<N>, scaling: N) -> Self {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_construction.rs	/^    pub fn new(translation: Vector2<N>, angle: N, scaling: N) -> Self {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_construction.rs	/^            pub fn new($($args: N),*) -> Self {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_construction.rs	/^    pub fn new(angle: N) -> Self {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/bidiagonal.rs	/^    pub fn new(mut matrix: MatrixMN<N, R, C>) -> Self {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/cholesky.rs	/^    pub fn new(mut matrix: MatrixN<N, D>) -> Option<Self> {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/eigen.rs	/^    pub fn new(m: MatrixN<N, D>) -> Option<RealEigen<N, D>> {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/full_piv_lu.rs	/^    pub fn new(mut matrix: MatrixMN<N, R, C>) -> Self {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/hessenberg.rs	/^    pub fn new(hess: MatrixN<N, D>) -> Self {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/lu.rs	/^    pub fn new(mut matrix: MatrixMN<N, R, C>) -> Self {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/qr.rs	/^    pub fn new(mut matrix: MatrixMN<N, R, C>) -> Self {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/schur.rs	/^    pub fn new(m: MatrixN<N, D>) -> RealSchur<N, D> {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/svd.rs	/^    pub fn new(matrix: MatrixMN<N, R, C>, compute_u: bool, compute_v: bool) -> Self {$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/symmetric_eigen.rs	/^    pub fn new(m: MatrixN<N, D>) -> Self$/;"	f
new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/symmetric_tridiagonal.rs	/^    pub fn new(mut m: MatrixN<N, D>) -> Self {$/;"	f
new	/home/berger/playground/rust/slam/slam-rs/src/factors/mod.rs	/^    fn new(src: NodeId, dst: NodeId, pose: P) -> BetweenPosesFactor<P> {$/;"	f
new	/home/berger/playground/rust/slam/slam-rs/src/graphs/mod.rs	/^    pub fn new() -> Graph<F> {$/;"	f
new_and_get	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/unit.rs	/^    pub fn new_and_get(mut value: T) -> (Self, T::Field) {$/;"	f
new_containing_point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/reflection.rs	/^    pub fn new_containing_point(axis: Unit<Vector<N, D, S>>, pt: &Point<N, D>) -> Reflection<N, D, S>$/;"	f
new_default	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/loader/mtl.rs	/^    pub fn new_default(name: String) -> MtlMaterial {$/;"	f
new_empty	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn new_empty() -> SceneNode {$/;"	f
new_from_str	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/shader.rs	/^    pub fn new_from_str(vshader: &str, fshader: &str) -> Shader {$/;"	f
new_hidden	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn new_hidden(title: &str) -> Window {$/;"	f
new_nonuniform_scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/cg.rs	/^    pub fn new_nonuniform_scaling<SB>(scaling: &Vector<N, DimNameDiff<D, U1>, SB>) -> Self$/;"	f
new_normalize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/unit.rs	/^    pub fn new_normalize(value: T) -> Self {$/;"	f
new_observer_frame	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/cg.rs	/^    pub fn new_observer_frame(eye: &Point3<N>, target: &Point3<N>, up: &Vector3<N>) -> Self {$/;"	f
new_observer_frame	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_construction.rs	/^            pub fn new_observer_frame(eye:    &Point3<N>,$/;"	f
new_observer_frame	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_construction.rs	/^    pub fn new_observer_frame<SB, SC>(dir: &Vector<N, U3, SB>, up: &Vector<N, U3, SC>) -> Self$/;"	f
new_observer_frame	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_specialization.rs	/^    pub fn new_observer_frame<SB, SC>(dir: &Vector<N, U3, SB>, up: &Vector<N, U3, SC>) -> Self$/;"	f
new_observer_frame	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_construction.rs	/^            pub fn new_observer_frame(eye:    &Point3<N>,$/;"	f
new_orthographic	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/cg.rs	/^    pub fn new_orthographic(left: N, right: N, bottom: N, top: N, znear: N, zfar: N) -> Self {$/;"	f
new_perspective	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/cg.rs	/^    pub fn new_perspective(aspect: N, fovy: N, znear: N, zfar: N) -> Self {$/;"	f
new_random	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^            pub fn new_random($($args: usize),*) -> Self {$/;"	f
new_random_generic	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^    pub fn new_random_generic(nrows: R, ncols: C) -> Self$/;"	f
new_render_target	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/framebuffer_manager.rs	/^    pub fn new_render_target(width: usize, height: usize) -> RenderTarget {$/;"	f
new_rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/cg.rs	/^    pub fn new_rotation(angle: N) -> Self {$/;"	f
new_rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/cg.rs	/^    pub fn new_rotation(axisangle: Vector3<N>) -> Self {$/;"	f
new_rotation_wrt_point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/cg.rs	/^    pub fn new_rotation_wrt_point(axisangle: Vector3<N>, pt: Point3<N>) -> Self {$/;"	f
new_scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/cg.rs	/^    pub fn new_scaling(scaling: N) -> Self {$/;"	f
new_translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/cg.rs	/^    pub fn new_translation<SB>(translation: &Vector<N, DimNameDiff<D, U1>, SB>) -> Self$/;"	f
new_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^            pub unsafe fn new_unchecked<RStor, CStor, S>(storage: $SRef, start: (usize, usize), shape: (R, C))$/;"	f
new_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/unit.rs	/^    pub fn new_unchecked(value: T) -> Self {$/;"	f
new_uninitialized	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^            pub unsafe fn new_uninitialized($($args: usize),*) -> Self {$/;"	f
new_uninitialized	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_construction.rs	/^    pub unsafe fn new_uninitialized() -> Self {$/;"	f
new_uninitialized_generic	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^    pub unsafe fn new_uninitialized_generic(nrows: R, ncols: C) -> Self {$/;"	f
new_with_frustrum	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/arc_ball.rs	/^    pub fn new_with_frustrum(fov:    f32,$/;"	f
new_with_frustrum	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^    pub fn new_with_frustrum(fov:    f32,$/;"	f
new_with_frustrum	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person_stereo.rs	/^    pub fn new_with_frustrum(fov:    f32,$/;"	f
new_with_gpu_vectors	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/mesh.rs	/^    pub fn new_with_gpu_vectors(coords:  Arc<RwLock<GPUVec<Point3<GLfloat>>>>,$/;"	f
new_with_params	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/tools/kiss3d_recording.rs	/^    pub fn new_with_params(path:         Path,$/;"	f
new_with_size	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn new_with_size(title: &str, width: u32, height: u32) -> Window {$/;"	f
new_with_strides_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^            pub unsafe fn new_with_strides_unchecked<S, RStor, CStor, RStride, CStride>(storage: $SRef,$/;"	f
new_with_workspace	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/hessenberg.rs	/^    pub fn new_with_workspace(mut hess: MatrixN<N, D>, work: &mut VectorN<N, D>) -> Self {$/;"	f
next	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/event.rs	/^    fn next(&mut self) -> Option<Event<'a>> {$/;"	f
next	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/iter.rs	/^            fn next(&mut self) -> Option<$Ref> {$/;"	f
nlerp	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    pub fn nlerp(&self, other: &UnitQuaternion<N>, t: N) -> UnitQuaternion<N> {$/;"	f
norm	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/vector.rs	/^    fn norm(&self) -> Self::Field;$/;"	f
norm	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn norm(&self) -> N {$/;"	f
norm	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^    fn norm(&self) -> N {$/;"	f
norm	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    pub fn norm(&self) -> N {$/;"	f
norm	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^    fn norm(&self) -> N {$/;"	f
norm	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub fn norm<V: NormedSpace>(v: &V) -> V::Field {$/;"	f
norm_squared	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/vector.rs	/^    fn norm_squared(&self) -> Self::Field;$/;"	f
norm_squared	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn norm_squared(&self) -> N {$/;"	f
norm_squared	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^    fn norm_squared(&self) -> N {$/;"	f
norm_squared	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    pub fn norm_squared(&self) -> N {$/;"	f
norm_squared	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^    fn norm_squared(&self) -> N {$/;"	f
norm_squared	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub fn norm_squared<V: NormedSpace>(v: &V) -> V::Field {$/;"	f
normalize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/vector.rs	/^    fn normalize(&self) -> Self;$/;"	f
normalize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn normalize(&self) -> MatrixMN<N, R, C>$/;"	f
normalize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^    fn normalize(&self) -> Self {$/;"	f
normalize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    pub fn normalize(&self) -> Quaternion<N> {$/;"	f
normalize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^    fn normalize(&self) -> Self {$/;"	f
normalize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub fn normalize<V: NormedSpace>(v: &V) -> V {$/;"	f
normalize_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/vector.rs	/^    fn normalize_mut(&mut self) -> Self::Field;$/;"	f
normalize_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn normalize_mut(&mut self) -> N {$/;"	f
normalize_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^    fn normalize_mut(&mut self) -> N {$/;"	f
normalize_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    pub fn normalize_mut(&mut self) -> N {$/;"	f
normalize_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^    fn normalize_mut(&mut self) -> N {$/;"	f
normals	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/mesh.rs	/^    pub fn normals(&self) -> &Arc<RwLock<GPUVec<Vector3<GLfloat>>>> {$/;"	f
normals_material	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/builtin/mod.rs	/^mod normals_material;$/;"	m
nrows	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/matrix.rs	/^    fn nrows(&self) -> usize;$/;"	f
nrows	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn nrows(&self) -> usize {$/;"	f
nrows	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    fn nrows(&self) -> usize {$/;"	f
num_passes	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/camera.rs	/^    fn num_passes(&self) -> usize { 1usize }$/;"	f
num_passes	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person_stereo.rs	/^    fn num_passes(&self) -> usize { 2usize }$/;"	f
num_pts	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/mesh.rs	/^    pub fn num_pts(&self) -> usize {$/;"	f
obj	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/loader/mod.rs	/^pub mod obj;$/;"	m
object	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/mod.rs	/^mod object;$/;"	m
object	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn object(&self) -> Option<&Object> {$/;"	f
object_material	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/builtin/mod.rs	/^mod object_material;$/;"	m
object_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn object_mut(&mut self) -> Option<&mut Object> {$/;"	f
observer_frame	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^    fn observer_frame(&self) -> Isometry3<f32> {$/;"	f
oculus_stereo	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/mod.rs	/^mod oculus_stereo;$/;"	m
off_diagonal	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/bidiagonal.rs	/^    pub fn off_diagonal(&self) -> &VectorN<N, DimDiff<DimMinimum<R, C>, U1>> {$/;"	f
off_diagonal	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/symmetric_tridiagonal.rs	/^    pub fn off_diagonal(&self) -> &VectorN<N, DimDiff<D, U1>>$/;"	f
one	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^    fn one() -> Id {$/;"	f
one	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^    fn one() -> Self {$/;"	f
one	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_construction.rs	/^    fn one() -> Self {$/;"	f
one	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_construction.rs	/^    fn one() -> Self {$/;"	f
one	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_construction.rs	/^    fn one() -> Self {$/;"	f
one	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_construction.rs	/^    fn one() -> Self {$/;"	f
one	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform_construction.rs	/^    fn one() -> Self {$/;"	f
one	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_construction.rs	/^    fn one() -> Self {$/;"	f
one	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_construction.rs	/^    fn one() -> Self {$/;"	f
one	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub fn one<T: Identity<Multiplicative>>() -> T {$/;"	f
one	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/identities.rs	/^            fn one() -> $t { $v }$/;"	f
one	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/identities.rs	/^    fn one() -> Self {$/;"	f
one	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/identities.rs	/^    fn one() -> Self;$/;"	f
one_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/identities.rs	/^macro_rules! one_impl {$/;"	d
one_operator	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/mod.rs	/^mod one_operator;$/;"	m
op	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/one_operator.rs	/^    fn op(&self, _: O, lhs: &Self) -> Self {$/;"	f
op_assign_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_ops.rs	/^macro_rules! op_assign_impl($/;"	d
op_macros	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod op_macros;$/;"	m
operate	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^    fn operate(&self, _: &Self) -> Id<O> {$/;"	f
operate	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/one_operator.rs	/^            fn operate(&self, lhs: &Self) -> Self {$/;"	f
operate	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/one_operator.rs	/^    fn operate(&self, lhs: &Self) -> Self {$/;"	f
operate	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/one_operator.rs	/^    fn operate(&self, right: &Self) -> Self;$/;"	f
operate	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^    fn operate(&self, other: &Self) -> Self {$/;"	f
operate	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_alga.rs	/^    fn operate(&self, rhs: &Self) -> Self {$/;"	f
operate	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^    fn operate(&self, rhs: &Self) -> Self {$/;"	f
operate	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    fn operate(&self, rhs: &Self) -> Self {$/;"	f
operate	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_alga.rs	/^    fn operate(&self, rhs: &Self) -> Self {$/;"	f
operate	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform_alga.rs	/^    fn operate(&self, rhs: &Self) -> Self {$/;"	f
operate	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_alga.rs	/^    fn operate(&self, rhs: &Self) -> Self {$/;"	f
operate	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_alga.rs	/^    fn operate(&self, rhs: &Self) -> Self {$/;"	f
operator	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/mod.rs	/^mod operator;$/;"	m
operator_token	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/operator.rs	/^    fn operator_token() -> Self {$/;"	f
operator_token	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/operator.rs	/^    fn operator_token() -> Self;$/;"	f
ops	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/mod.rs	/^mod ops;$/;"	m
ops	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^pub mod ops;$/;"	m
optry	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/pow.rs	/^    macro_rules! optry {$/;"	d
origin	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/vector.rs	/^    fn origin() -> Self;$/;"	f
origin	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_alga.rs	/^    fn origin() -> Self {$/;"	f
origin	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_construction.rs	/^    pub fn origin() -> Self$/;"	f
origin	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub fn origin<P: EuclideanSpace>() -> P {$/;"	f
orthographic	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod orthographic;$/;"	m
orthonormal_subspace_basis	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/vector.rs	/^    fn orthonormal_subspace_basis<F: FnMut(&Self) -> bool>(vs: &[Self], f: F);$/;"	f
orthonormal_subspace_basis	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^    fn orthonormal_subspace_basis<F>(vs: &[Self], mut f: F)$/;"	f
orthonormalize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/vector.rs	/^    fn orthonormalize(vs: &mut [Self]) -> usize;$/;"	f
orthonormalize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^    fn orthonormalize(vs: &mut [MatrixMN<N, R, C>]) -> usize {$/;"	f
p	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/full_piv_lu.rs	/^    pub fn p(&self) -> &PermutationSequence<DimMinimum<R, C>> {$/;"	f
p	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/lu.rs	/^    pub fn p(&self) -> &PermutationSequence<DimMinimum<R, C>> {$/;"	f
parse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/loader/mtl.rs	/^pub fn parse(string: &str) -> Vec<MtlMaterial> {$/;"	f
parse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/loader/obj.rs	/^pub fn parse(string: &str, mtl_base_dir: &Path, basename: &str) -> Vec<(String, Mesh, Option<MtlMaterial>)> {$/;"	f
parse_color	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/loader/mtl.rs	/^fn parse_color(l: usize, mut ws: Words) -> Vector3<f32> {$/;"	f
parse_f	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/loader/obj.rs	/^fn parse_f<'a>(l:              usize,$/;"	f
parse_file	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/loader/mtl.rs	/^pub fn parse_file(path: &Path) -> IoResult<Vec<MtlMaterial>> {$/;"	f
parse_file	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/loader/obj.rs	/^pub fn parse_file(path: &Path, mtl_base_dir: &Path, basename: &str) -> IoResult<Vec<(String, Mesh, Option<MtlMaterial>)>> {$/;"	f
parse_g	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/loader/obj.rs	/^fn parse_g<'a>(_:          usize,$/;"	f
parse_mtllib	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/loader/obj.rs	/^fn parse_mtllib<'a>(l:            usize,$/;"	f
parse_name	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/loader/mtl.rs	/^fn parse_name<'a>(_: usize, ws: Words<'a>) -> String {$/;"	f
parse_scalar	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/loader/mtl.rs	/^fn parse_scalar(l: usize, mut ws: Words) -> f32 {$/;"	f
parse_usemtl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/loader/obj.rs	/^fn parse_usemtl<'a>(l:          usize,$/;"	f
parse_v_or_vn	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/loader/obj.rs	/^fn parse_v_or_vn(l: usize, mut ws: Words) -> Vector3<f32> {$/;"	f
parse_vt	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/loader/obj.rs	/^fn parse_vt(l: usize, mut ws: Words) -> UV {$/;"	f
partial_clamp	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/lattice.rs	/^    fn partial_clamp<'a>(&'a self, min: &'a Self, max: &'a Self) -> Option<&'a Self> {$/;"	f
partial_clamp	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub fn partial_clamp<'a, T: PartialOrd>(value: &'a T, min: &'a T, max: &'a T) -> Option<&'a T> {$/;"	f
partial_cmp	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^    fn partial_cmp(&self, _: &Id<O>) -> Option<Ordering> {$/;"	f
partial_cmp	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/wrapper.rs	/^    fn partial_cmp(&self, other: &Self) -> Option<Ordering> {$/;"	f
partial_cmp	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    fn partial_cmp(&self, other: &Self) -> Option<Ordering> {$/;"	f
partial_cmp	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^    fn partial_cmp(&self, other: &Self) -> Option<Ordering> {$/;"	f
partial_cmp	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub fn partial_cmp<T: PartialOrd>(a: &T, b: &T) -> Option<Ordering> {$/;"	f
partial_ge	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub fn partial_ge<T: PartialOrd>(a: &T, b: &T) -> bool {$/;"	f
partial_gt	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub fn partial_gt<T: PartialOrd>(a: &T, b: &T) -> bool {$/;"	f
partial_le	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub fn partial_le<T: PartialOrd>(a: &T, b: &T) -> bool {$/;"	f
partial_lt	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub fn partial_lt<T: PartialOrd>(a: &T, b: &T) -> bool {$/;"	f
partial_max	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/lattice.rs	/^    fn partial_max<'a>(&'a self, other: &'a Self) -> Option<&'a Self> {$/;"	f
partial_max	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub fn partial_max<'a, T: PartialOrd>(a: &'a T, b: &'a T) -> Option<&'a T> {$/;"	f
partial_min	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/lattice.rs	/^    fn partial_min<'a>(&'a self, other: &'a Self) -> Option<&'a Self> {$/;"	f
partial_min	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub fn partial_min<'a, T: PartialOrd>(a: &'a T, b: &'a T) -> Option<&'a T> {$/;"	f
partial_sort2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/lattice.rs	/^    fn partial_sort2<'a>(&'a self, other: &'a Self) -> Option<(&'a Self, &'a Self)> {$/;"	f
partial_sort2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub fn partial_sort2<'a, T: PartialOrd>(a: &'a T, b: &'a T) -> Option<(&'a T, &'a T)> {$/;"	f
permutation_sequence	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/mod.rs	/^mod permutation_sequence;$/;"	m
permute_columns	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/permutation_sequence.rs	/^    pub fn permute_columns<N: Scalar, R2: Dim, C2: Dim, S2>(&self, rhs: &mut Matrix<N, R2, C2, S2>)$/;"	f
permute_rows	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/permutation_sequence.rs	/^    pub fn permute_rows<N: Scalar, R2: Dim, C2: Dim, S2>(&self, rhs: &mut Matrix<N, R2, C2, S2>)$/;"	f
perp	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn perp<R2, C2, SB>(&self, b: &Matrix<N, R2, C2, SB>) -> N$/;"	f
perspective	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod perspective;$/;"	m
pi	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn pi() -> Self {$/;"	f
pi	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn pi() -> Self;$/;"	f
pitch	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/arc_ball.rs	/^    pub fn pitch(&self) -> f32 {$/;"	f
pitch_step	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^    pub fn pitch_step(&self) -> f32 {$/;"	f
point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod point;$/;"	m
point_alga	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod point_alga;$/;"	m
point_alias	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod point_alias;$/;"	m
point_construction	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod point_construction;$/;"	m
point_conversion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod point_conversion;$/;"	m
point_coordinates	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod point_coordinates;$/;"	m
point_ops	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod point_ops;$/;"	m
point_renderer	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/lib.rs	/^pub mod point_renderer;$/;"	m
points_size	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/object.rs	/^    pub fn points_size(&self) -> f32 {$/;"	f
polar_decomposition	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    pub fn polar_decomposition(&self) -> (N, N, Option<Unit<Vector3<N>>>) {$/;"	f
poses	/home/berger/playground/rust/slam/slam-rs/src/geometry/mod.rs	/^pub mod poses;$/;"	m
post_processing	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/lib.rs	/^pub mod post_processing;$/;"	m
post_processing_effect	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/mod.rs	/^pub mod post_processing_effect;$/;"	m
pow	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/int.rs	/^            fn pow(self, exp: u32) -> Self {$/;"	f
pow	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/int.rs	/^    fn pow(self, exp: u32) -> Self;$/;"	f
pow	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^                        fn pow(base: $t, exp: usize) -> $t {$/;"	f
pow	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^pub mod pow;$/;"	m
pow	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/pow.rs	/^            fn pow(self, rhs: $rhs) -> $t {$/;"	f
pow	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/pow.rs	/^            fn pow(self, rhs: &'a $rhs) -> $t {$/;"	f
pow	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/pow.rs	/^    fn pow(self, rhs: RHS) -> Self::Output;$/;"	f
pow	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/pow.rs	/^pub fn pow<T: Clone + One + Mul<T, Output = T>>(mut base: T, mut exp: usize) -> T {$/;"	f
pow_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/pow.rs	/^macro_rules! pow_impl {$/;"	d
powf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn powf(self, n: Self) -> Self {$/;"	f
powf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn powf(self, n: Self) -> Self;$/;"	f
powf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/id.rs	/^    fn powf(&self, _: E::Real) -> Option<Self> {$/;"	f
powf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn powf(&self, n: E::Real) -> Option<Self> {$/;"	f
powf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn powf(&self, n: E::Real) -> Option<Self>;$/;"	f
powf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    pub fn powf(&self, n: N) -> Quaternion<N> {$/;"	f
powf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    pub fn powf(&self, n: N) -> UnitQuaternion<N> {$/;"	f
powf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^    fn powf(&self, n: N) -> Option<Self> {$/;"	f
powf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    fn powf(&self, _: N) -> Option<Self> {$/;"	f
powf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_specialization.rs	/^    pub fn powf(&self, n: N) -> Rotation2<N> {$/;"	f
powf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_specialization.rs	/^    pub fn powf(&self, n: N) -> Rotation3<N> {$/;"	f
powf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_alga.rs	/^    fn powf(&self, n: N) -> Option<Self> {$/;"	f
powf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex.rs	/^    pub fn powf(&self, n: N) -> Self {$/;"	f
powf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_alga.rs	/^    fn powf(&self, n: N) -> Option<Self> {$/;"	f
powf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn powf(self, n: Self) -> Self;$/;"	f
powf	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn powf(self, n: Self) -> Self;$/;"	f
powi	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn powi(self, n: i32) -> Self {$/;"	f
powi	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn powi(self, n: i32) -> Self;$/;"	f
powi	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn powi(mut self, mut exp: i32) -> Self {$/;"	f
powi	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn powi(self, n: i32) -> Self;$/;"	f
powi	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn powi(self, n: i32) -> Self;$/;"	f
prepend_nonuniform_scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/cg.rs	/^    pub fn prepend_nonuniform_scaling<SB>(&self, scaling: &Vector<N, DimNameDiff<D, U1>, SB>) -> MatrixN<N, D>$/;"	f
prepend_nonuniform_scaling_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/cg.rs	/^    pub fn prepend_nonuniform_scaling_mut<SB>(&mut self, scaling: &Vector<N, DimNameDiff<D, U1>, SB>)$/;"	f
prepend_rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/id.rs	/^    fn prepend_rotation(&self, _: &Self::Rotation) -> Self {$/;"	f
prepend_rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn prepend_rotation(&self, _: &Self::Rotation) -> Self {$/;"	f
prepend_rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn prepend_rotation(&self, r: &Self::Rotation) -> Self;$/;"	f
prepend_rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_alga.rs	/^    fn prepend_rotation(&self, r: &Self::Rotation) -> Self {$/;"	f
prepend_rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^    fn prepend_rotation(&self, r: &Self::Rotation) -> Self {$/;"	f
prepend_rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    fn prepend_rotation(&self, r: &Self::Rotation) -> Self {$/;"	f
prepend_rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_alga.rs	/^    fn prepend_rotation(&self, r: &Self::Rotation) -> Self {$/;"	f
prepend_rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_alga.rs	/^    fn prepend_rotation(&self, _: &Self::Rotation) -> Self {$/;"	f
prepend_rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_alga.rs	/^    fn prepend_rotation(&self, r: &Self::Rotation) -> Self {$/;"	f
prepend_scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/id.rs	/^    fn prepend_scaling(&self, _: &Self::NonUniformScaling) -> Self {$/;"	f
prepend_scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn prepend_scaling(&self, s: &Self::NonUniformScaling) -> Self {$/;"	f
prepend_scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn prepend_scaling(&self, s: &Self::NonUniformScaling) -> Self;$/;"	f
prepend_scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/cg.rs	/^    pub fn prepend_scaling(&self, scaling: N) -> MatrixN<N, D>$/;"	f
prepend_scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_alga.rs	/^    fn prepend_scaling(&self, _: &Self::NonUniformScaling) -> Self {$/;"	f
prepend_scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^    fn prepend_scaling(&self, _: &Self::NonUniformScaling) -> Self {$/;"	f
prepend_scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    fn prepend_scaling(&self, _: &Self::NonUniformScaling) -> Self {$/;"	f
prepend_scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity.rs	/^    pub fn prepend_scaling(&self, scaling: N) -> Self {$/;"	f
prepend_scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_alga.rs	/^    fn prepend_scaling(&self, s: &Self::NonUniformScaling) -> Self {$/;"	f
prepend_scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_alga.rs	/^    fn prepend_scaling(&self, _: &Self::NonUniformScaling) -> Self {$/;"	f
prepend_scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_alga.rs	/^    fn prepend_scaling(&self, _: &Self::NonUniformScaling) -> Self {$/;"	f
prepend_scaling_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/cg.rs	/^    pub fn prepend_scaling_mut(&mut self, scaling: N)$/;"	f
prepend_scaling_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity.rs	/^    pub fn prepend_scaling_mut(&mut self, scaling: N) {$/;"	f
prepend_to_local_rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn prepend_to_local_rotation(&mut self, r: &UnitQuaternion<f32>) {$/;"	f
prepend_to_local_transformation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn prepend_to_local_transformation(&mut self, t: &Isometry3<f32>) {$/;"	f
prepend_to_local_translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn prepend_to_local_translation(&mut self, t: &Translation3<f32>) {$/;"	f
prepend_translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/id.rs	/^    fn prepend_translation(&self, _: &Self::Translation) -> Self {$/;"	f
prepend_translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn prepend_translation(&self, _: &Self::Translation) -> Self {$/;"	f
prepend_translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn prepend_translation(&self, t: &Self::Translation) -> Self;$/;"	f
prepend_translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/cg.rs	/^    pub fn prepend_translation<SB>(&self, shift: &Vector<N, DimNameDiff<D, U1>, SB>) -> MatrixN<N, D>$/;"	f
prepend_translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_alga.rs	/^    fn prepend_translation(&self, t: &Self::Translation) -> Self {$/;"	f
prepend_translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^    fn prepend_translation(&self, _: &Self::Translation) -> Self {$/;"	f
prepend_translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    fn prepend_translation(&self, _: &Self::Translation) -> Self {$/;"	f
prepend_translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_alga.rs	/^    fn prepend_translation(&self, t: &Self::Translation) -> Self {$/;"	f
prepend_translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_alga.rs	/^    fn prepend_translation(&self, t: &Self::Translation) -> Self {$/;"	f
prepend_translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_alga.rs	/^    fn prepend_translation(&self, _: &Self::Translation) -> Self {$/;"	f
prepend_translation_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/cg.rs	/^    pub fn prepend_translation_mut<SB>(&mut self, shift: &Vector<N, DimNameDiff<D, U1>, SB>)$/;"	f
prim_int_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/int.rs	/^macro_rules! prim_int_impl {$/;"	d
product	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^    fn product<I: Iterator<Item = &'a MatrixN<N, D>>>(iter: I) -> MatrixN<N, D> {$/;"	f
product	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^    fn product<I: Iterator<Item = MatrixN<N, D>>>(iter: I) -> MatrixN<N, D> {$/;"	f
project	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/camera.rs	/^    fn project(&self, world_coord: &Point3<f32>, size: &Vector2<f32>) -> Vector2<f32> {$/;"	f
project_point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/orthographic.rs	/^    pub fn project_point(&self, p: &Point3<N>) -> Point3<N> {$/;"	f
project_point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/perspective.rs	/^    pub fn project_point(&self, p: &Point3<N>) -> Point3<N> {$/;"	f
project_vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/orthographic.rs	/^    pub fn project_vector<SB>(&self, p: &Vector<N, U3, SB>) -> Vector3<N>$/;"	f
project_vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/perspective.rs	/^    pub fn project_vector<SB>(&self, p: &Vector<N, U3, SB>) -> Vector3<N>$/;"	f
prop_inv_is_latin_square	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/one_operator.rs	/^    fn prop_inv_is_latin_square(args: (Self, Self)) -> bool$/;"	f
prop_inv_is_latin_square_approx	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/one_operator.rs	/^    fn prop_inv_is_latin_square_approx(args: (Self, Self)) -> bool$/;"	f
prop_is_associative	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/one_operator.rs	/^    fn prop_is_associative(args: (Self, Self, Self)) -> bool$/;"	f
prop_is_associative_approx	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/one_operator.rs	/^    fn prop_is_associative_approx(args: (Self, Self, Self)) -> bool$/;"	f
prop_is_commutative	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/one_operator.rs	/^    fn prop_is_commutative(args: (Self, Self)) -> bool$/;"	f
prop_is_commutative_approx	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/one_operator.rs	/^    fn prop_is_commutative_approx(args: (Self, Self)) -> bool$/;"	f
prop_mul_and_add_are_distributive	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/two_operators.rs	/^    fn prop_mul_and_add_are_distributive(args: (Self, Self, Self)) -> bool$/;"	f
prop_mul_and_add_are_distributive_approx	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/two_operators.rs	/^    fn prop_mul_and_add_are_distributive_approx(args: (Self, Self, Self)) -> bool$/;"	f
prop_mul_is_commutative	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/two_operators.rs	/^    fn prop_mul_is_commutative(args: (Self, Self)) -> bool$/;"	f
prop_mul_is_commutative_approx	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/two_operators.rs	/^    fn prop_mul_is_commutative_approx(args: (Self, Self)) -> bool$/;"	f
prop_operating_identity_element_is_noop	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/one_operator.rs	/^    fn prop_operating_identity_element_is_noop(args: (Self,)) -> bool$/;"	f
prop_operating_identity_element_is_noop_approx	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/one_operator.rs	/^    fn prop_operating_identity_element_is_noop_approx(args: (Self,)) -> bool$/;"	f
properties	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/mod.rs	/^mod properties;$/;"	m
pseudo_inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/svd.rs	/^    pub fn pseudo_inverse(mut self, eps: N) -> MatrixMN<N, C, R>$/;"	f
pseudo_inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/svd.rs	/^    pub fn pseudo_inverse(self, eps: N) -> MatrixMN<N, C, R>$/;"	f
ptr	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^    fn ptr(&self) -> *const N {$/;"	f
ptr	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^            fn ptr(&self) -> *const N {$/;"	f
ptr	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_vec.rs	/^    fn ptr(&self) -> *const N {$/;"	f
ptr	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/storage.rs	/^    fn ptr(&self) -> *const N;$/;"	f
ptr_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^    fn ptr_mut(&mut self) -> *mut N {$/;"	f
ptr_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^    fn ptr_mut(&mut self) -> *mut N {$/;"	f
ptr_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_vec.rs	/^    fn ptr_mut(&mut self) -> *mut N {$/;"	f
ptr_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/storage.rs	/^    fn ptr_mut(&mut self) -> *mut N;$/;"	f
q	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/full_piv_lu.rs	/^    pub fn q(&self) -> &PermutationSequence<DimMinimum<R, C>> {$/;"	f
q	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/hessenberg.rs	/^    pub fn q(&self) -> MatrixN<N, D> {$/;"	f
q	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/qr.rs	/^    pub fn q(&self) -> MatrixMN<N, R, DimMinimum<R, C>>$/;"	f
q	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/symmetric_tridiagonal.rs	/^    pub fn q(&self) -> MatrixN<N, D> {$/;"	f
q_tr_mul	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/qr.rs	/^    pub fn q_tr_mul<R2: Dim, C2: Dim, S2>(&self, rhs: &mut Matrix<N, R2, C2, S2>)$/;"	f
qr	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/mod.rs	/^mod qr;$/;"	m
qr	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/qr.rs	/^    pub fn qr(self) -> QR<N, R, C> {$/;"	f
qr_internal	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/qr.rs	/^    pub fn qr_internal(&self) -> &MatrixMN<N, R, C> {$/;"	f
quaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod quaternion;$/;"	m
quaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    pub fn quaternion(&self) -> &Quaternion<N> {$/;"	f
quaternion_alga	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod quaternion_alga;$/;"	m
quaternion_construction	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod quaternion_construction;$/;"	m
quaternion_conversion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod quaternion_conversion;$/;"	m
quaternion_coordinates	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod quaternion_coordinates;$/;"	m
quaternion_op_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_ops.rs	/^macro_rules! quaternion_op_impl($/;"	d
quaternion_ops	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod quaternion_ops;$/;"	m
r	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/qr.rs	/^    pub fn r(&self) -> MatrixMN<N, DimMinimum<R, C>, C>$/;"	f
rand	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^    fn rand<G: Rng>(rng: &mut G) -> Self {$/;"	f
rand	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_construction.rs	/^    fn rand<G: Rng>(rng: &mut G) -> Self {$/;"	f
rand	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/orthographic.rs	/^    fn rand<R: Rng>(r: &mut R) -> Self {$/;"	f
rand	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/perspective.rs	/^    fn rand<R: Rng>(r: &mut R) -> Self {$/;"	f
rand	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_construction.rs	/^    fn rand<G: Rng>(rng: &mut G) -> Self {$/;"	f
rand	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_construction.rs	/^    fn rand<R: Rng>(rng: &mut R) -> Self {$/;"	f
rand	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_specialization.rs	/^    fn rand<R: Rng>(rng: &mut R) -> Self {$/;"	f
rand	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_construction.rs	/^    fn rand<G: Rng>(rng: &mut G) -> Self {$/;"	f
rand	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_construction.rs	/^    fn rand<G: Rng>(rng: &mut G) -> Self {$/;"	f
rand	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_construction.rs	/^    fn rand<R: Rng>(rng: &mut R) -> Self {$/;"	f
random_orthogonal	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/debug/mod.rs	/^mod random_orthogonal;$/;"	m
random_sdp	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/debug/mod.rs	/^mod random_sdp;$/;"	m
rank	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/svd.rs	/^    pub fn rank(&self, eps: N) -> usize {$/;"	f
read_faces	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/object.rs	/^    pub fn read_faces<F: FnMut(&[Point3<GLuint>])>(&self, f: &mut F) {$/;"	f
read_faces	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn read_faces<F: FnMut(&[Point3<u32>])>(&self, f: &mut F) {$/;"	f
read_normals	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/object.rs	/^    pub fn read_normals<F: FnMut(&[Vector3<GLfloat>])>(&self, f: &mut F) {$/;"	f
read_normals	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn read_normals<F: FnMut(&[Vector3<f32>])>(&self, f: &mut F) {$/;"	f
read_uvs	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/object.rs	/^    pub fn read_uvs<F: FnMut(&[Point2<GLfloat>])>(&self, f: &mut F) {$/;"	f
read_uvs	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn read_uvs<F: FnMut(&[Point2<f32>])>(&self, f: &mut F) {$/;"	f
read_vertices	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/object.rs	/^    pub fn read_vertices<F: FnMut(&[Point3<GLfloat>])>(&self, f: &mut F) {$/;"	f
read_vertices	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn read_vertices<F: FnMut(&[Point3<f32>])>(&self, f: &mut F) {$/;"	f
real	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/mod.rs	/^mod real;$/;"	m
real	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^pub mod real;$/;"	m
real_schur	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/schur.rs	/^    pub fn real_schur(self) -> RealSchur<N, D> {$/;"	f
reallocate_copy	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/allocator.rs	/^    unsafe fn reallocate_copy(nrows: RTo, ncols: CTo,$/;"	f
reallocate_copy	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/default_allocator.rs	/^    unsafe fn reallocate_copy(rto: Dynamic, cto: CTo, buf: MatrixArray<N, RFrom, CFrom>) -> MatrixVec<N, Dynamic, CTo> {$/;"	f
reallocate_copy	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/default_allocator.rs	/^    unsafe fn reallocate_copy(rto: Dynamic, cto: CTo, buf: MatrixVec<N, Dynamic, CFrom>) -> MatrixVec<N, Dynamic, CTo> {$/;"	f
reallocate_copy	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/default_allocator.rs	/^    unsafe fn reallocate_copy(rto: Dynamic, cto: CTo, buf: MatrixVec<N, RFrom, Dynamic>) -> MatrixVec<N, Dynamic, CTo> {$/;"	f
reallocate_copy	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/default_allocator.rs	/^    unsafe fn reallocate_copy(rto: RTo, cto: CTo, buf: <Self as Allocator<N, RFrom, CFrom>>::Buffer) -> MatrixArray<N, RTo, CTo> {$/;"	f
reallocate_copy	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/default_allocator.rs	/^    unsafe fn reallocate_copy(rto: RTo, cto: Dynamic, buf: MatrixArray<N, RFrom, CFrom>) -> MatrixVec<N, RTo, Dynamic> {$/;"	f
reallocate_copy	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/default_allocator.rs	/^    unsafe fn reallocate_copy(rto: RTo, cto: Dynamic, buf: MatrixVec<N, Dynamic, CFrom>) -> MatrixVec<N, RTo, Dynamic> {$/;"	f
reallocate_copy	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/default_allocator.rs	/^    unsafe fn reallocate_copy(rto: RTo, cto: Dynamic, buf: MatrixVec<N, RFrom, Dynamic>) -> MatrixVec<N, RTo, Dynamic> {$/;"	f
rebind_down_key	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^    pub fn rebind_down_key(&mut self, new_key: Option<Key>) {$/;"	f
rebind_drag_button	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/arc_ball.rs	/^    pub fn rebind_drag_button(&mut self, new_button: Option<MouseButton>) {$/;"	f
rebind_drag_button	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^    pub fn rebind_drag_button(&mut self, new_button: Option<MouseButton>) {$/;"	f
rebind_left_key	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^    pub fn rebind_left_key(&mut self, new_key: Option<Key>) {$/;"	f
rebind_reset_key	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/arc_ball.rs	/^    pub fn rebind_reset_key(&mut self, new_key : Option<Key>) {$/;"	f
rebind_right_key	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^    pub fn rebind_right_key(&mut self, new_key: Option<Key>) {$/;"	f
rebind_rotate_button	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/arc_ball.rs	/^    pub fn rebind_rotate_button(&mut self, new_button: Option<MouseButton>) {$/;"	f
rebind_rotate_button	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^    pub fn rebind_rotate_button(&mut self, new_button: Option<MouseButton>) {$/;"	f
rebind_up_key	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^    pub fn rebind_up_key(&mut self, new_key: Option<Key>) {$/;"	f
recip	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn recip(self) -> Self {$/;"	f
recip	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn recip(self) -> Self;$/;"	f
recip	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn recip(self) -> Self {$/;"	f
recip	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn recip(self) -> Self;$/;"	f
recip	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn recip(self) -> Self;$/;"	f
recompose	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/svd.rs	/^    pub fn recompose(self) -> MatrixMN<N, R, C> {$/;"	f
recompose	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/symmetric_eigen.rs	/^    pub fn recompose(&self) -> MatrixN<N, D> {$/;"	f
recompose	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/symmetric_tridiagonal.rs	/^    pub fn recompose(mut self) -> MatrixN<N, D> {$/;"	f
recompute_normals	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/mesh.rs	/^    pub fn recompute_normals(&mut self) {$/;"	f
recompute_normals	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/object.rs	/^    pub fn recompute_normals(&mut self) {$/;"	f
recompute_normals	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn recompute_normals(&mut self) {$/;"	f
reflect	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/reflection.rs	/^    pub fn reflect<R2: Dim, C2: Dim, S2>(&self, rhs: &mut Matrix<N, R2, C2, S2>)$/;"	f
reflect_rows	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/reflection.rs	/^    pub fn reflect_rows<R2: Dim, C2: Dim, S2, S3>(&self,$/;"	f
reflection	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod reflection;$/;"	m
reflection_axis_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/householder.rs	/^pub fn reflection_axis_mut<N: Real, D: Dim, S: StorageMut<N, D>>(column: &mut Vector<N, D, S>) -> (N, bool) {$/;"	f
reformat	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/loader/obj.rs	/^fn reformat(coords:     Vec<Coord>,$/;"	f
reject	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/helper.rs	/^pub fn reject<G: Gen, F: FnMut(&T) -> bool, T: Arbitrary>(g: &mut G, f: F) -> T {$/;"	f
reject_rand	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/helper.rs	/^pub fn reject_rand<G: Rng, F: FnMut(&T) -> bool, T: Rand>(g: &mut G, f: F) -> T {$/;"	f
relative_eq	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^    fn relative_eq(&self, _: &Self, _: Self::Epsilon, _: Self::Epsilon) -> bool {$/;"	f
relative_eq	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/wrapper.rs	/^    fn relative_eq($/;"	f
relative_eq	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    fn relative_eq(&self, other: &Self, epsilon: Self::Epsilon, max_relative: Self::Epsilon) -> bool {$/;"	f
relative_eq	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn relative_eq<R2, C2, SB>(&self, other: &Matrix<N, R2, C2, SB>,$/;"	f
relative_eq	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry.rs	/^    fn relative_eq(&self, other: &Self, epsilon: Self::Epsilon, max_relative: Self::Epsilon) -> bool {$/;"	f
relative_eq	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^    fn relative_eq(&self, other: &Self, epsilon: Self::Epsilon, max_relative: Self::Epsilon) -> bool {$/;"	f
relative_eq	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    fn relative_eq(&self, other: &Self, epsilon: Self::Epsilon, max_relative: Self::Epsilon) -> bool {$/;"	f
relative_eq	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation.rs	/^    fn relative_eq(&self, other: &Self, epsilon: Self::Epsilon, max_relative: Self::Epsilon) -> bool {$/;"	f
relative_eq	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity.rs	/^    fn relative_eq(&self, other: &Self, epsilon: Self::Epsilon, max_relative: Self::Epsilon) -> bool {$/;"	f
relative_eq	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation.rs	/^    fn relative_eq(&self, other: &Self, epsilon: Self::Epsilon, max_relative: Self::Epsilon) -> bool {$/;"	f
relative_eq	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex.rs	/^    fn relative_eq(&self, other: &Self, epsilon: Self::Epsilon, max_relative: Self::Epsilon) -> bool {$/;"	f
remove	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/material_manager.rs	/^    pub fn remove(&mut self, name: &str) {$/;"	f
remove	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/mesh_manager.rs	/^    pub fn remove(&mut self, name: &str) {$/;"	f
remove	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    fn remove(&mut self, o: &SceneNode) {$/;"	f
remove	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn remove(&mut self, sn: &mut SceneNode) {$/;"	f
remove_column	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/edition.rs	/^    pub fn remove_column(self, i: usize) -> MatrixMN<N, R, DimDiff<C, U1>>$/;"	f
remove_columns	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/edition.rs	/^    pub fn remove_columns(self, i: usize, n: usize) -> MatrixMN<N, R, Dynamic>$/;"	f
remove_columns_generic	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/edition.rs	/^    pub fn remove_columns_generic<D>(self, i: usize, nremove: D) -> MatrixMN<N, R, DimDiff<C, D>>$/;"	f
remove_fixed_columns	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/edition.rs	/^    pub fn remove_fixed_columns<D>(self, i: usize) -> MatrixMN<N, R, DimDiff<C, D>>$/;"	f
remove_fixed_rows	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/edition.rs	/^    pub fn remove_fixed_rows<D>(self, i: usize) -> MatrixMN<N, DimDiff<R, D>, C>$/;"	f
remove_from_parent	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    fn remove_from_parent(&mut self, to_remove: &SceneNode) {$/;"	f
remove_row	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/edition.rs	/^    pub fn remove_row(self, i: usize) -> MatrixMN<N, DimDiff<R, U1>, C>$/;"	f
remove_rows	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/edition.rs	/^    pub fn remove_rows(self, i: usize, n: usize) -> MatrixMN<N, Dynamic, C>$/;"	f
remove_rows_generic	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/edition.rs	/^    pub fn remove_rows_generic<D>(self, i: usize, nremove: D) -> MatrixMN<N, DimDiff<R, D>, C>$/;"	f
render	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/builtin/normals_material.rs	/^    fn render(&mut self,$/;"	f
render	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/builtin/object_material.rs	/^    fn render(&mut self,$/;"	f
render	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/builtin/uvs_material.rs	/^    fn render(&mut self,$/;"	f
render	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/line_renderer.rs	/^    pub fn render(&mut self, pass: usize, camera: &mut Camera) {$/;"	f
render	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/point_renderer.rs	/^    pub fn render(&mut self, pass: usize, camera: &mut Camera) {$/;"	f
render	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/material.rs	/^    fn render(&mut self,$/;"	f
render	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/object.rs	/^    pub fn render(&self,$/;"	f
render	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn render(&mut self, pass: usize, camera: &mut Camera, light: &Light) {$/;"	f
render	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/text/renderer.rs	/^    pub fn render(&mut self, width: f32, height: f32) {$/;"	f
render	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn render(&mut self) -> bool {$/;"	f
render_complete	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/camera.rs	/^    fn render_complete(&self, _window: &glfw::Window) { }$/;"	f
render_complete	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person_stereo.rs	/^    fn render_complete(&self, window: &glfw::Window) {$/;"	f
render_scene	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    fn render_scene(&mut self, camera: &mut Camera, pass: usize) {$/;"	f
render_with	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn render_with(&mut self,$/;"	f
render_with_camera	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn render_with_camera(&mut self, camera: &mut Camera) -> bool {$/;"	f
render_with_camera_and_effect	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn render_with_camera_and_effect(&mut self, camera: &mut Camera, effect: &mut PostProcessingEffect) -> bool {$/;"	f
render_with_effect	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn render_with_effect(&mut self, effect: &mut PostProcessingEffect) -> bool {$/;"	f
renderer	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/text/mod.rs	/^mod renderer;$/;"	m
renormalize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/unit.rs	/^    pub fn renormalize(&mut self) -> T::Field {$/;"	f
reorient	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn reorient(&mut self, eye: &Point3<f32>, at: &Point3<f32>, up: &Vector3<f32>) {$/;"	f
require_bounded	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/bounds.rs	/^    fn require_bounded<T: Bounded>(_: &T) {}$/;"	f
require_num	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^    fn require_num<T: Num>(_: &T) {}$/;"	f
require_one	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/identities.rs	/^    fn require_one<T: One>(_: &T) {}$/;"	f
require_signed	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/sign.rs	/^    fn require_signed<T: Signed>(_: &T) {}$/;"	f
require_unsigned	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/sign.rs	/^    fn require_unsigned<T: Unsigned>(_: &T) {}$/;"	f
require_wrappingadd	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/wrapping.rs	/^    fn require_wrappingadd<T: WrappingAdd>(_: &T) {}$/;"	f
require_wrappingmul	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/wrapping.rs	/^    fn require_wrappingmul<T: WrappingMul>(_: &T) {}$/;"	f
require_wrappingsub	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/wrapping.rs	/^    fn require_wrappingsub<T: WrappingSub>(_: &T) {}$/;"	f
require_zero	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/identities.rs	/^    fn require_zero<T: Zero>(_: &T) {}$/;"	f
reset_key	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/arc_ball.rs	/^    pub fn reset_key(&self) -> Option<Key> {$/;"	f
resize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/framebuffer_manager.rs	/^    pub fn resize(&mut self, w: f32, h: f32) {$/;"	f
resize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/edition.rs	/^    pub fn resize(self, new_nrows: usize, new_ncols: usize, val: N) -> DMatrix<N>$/;"	f
resize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_vec.rs	/^    pub unsafe fn resize(mut self, sz: usize) -> Vec<N>{$/;"	f
resize_generic	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/edition.rs	/^    pub fn resize_generic<R2: Dim, C2: Dim>(self, new_nrows: R2, new_ncols: C2, val: N) -> MatrixMN<N, R2, C2>$/;"	f
resource	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/lib.rs	/^pub mod resource;$/;"	m
right	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/orthographic.rs	/^    pub fn right(&self) -> N {$/;"	f
right_key	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^    pub fn right_key(&self) -> Option<Key> {$/;"	f
rotate	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_ops.rs	/^    pub fn rotate<R2: Dim, C2: Dim, S2: StorageMut<N, R2, C2>>(&self, rhs: &mut Matrix<N, R2, C2, S2>)$/;"	f
rotate_button	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/arc_ball.rs	/^    pub fn rotate_button(&self) -> Option<MouseButton> {$/;"	f
rotate_button	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^    pub fn rotate_button(&self) -> Option<MouseButton> {$/;"	f
rotate_left	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/int.rs	/^            fn rotate_left(self, n: u32) -> Self {$/;"	f
rotate_left	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/int.rs	/^    fn rotate_left(self, n: u32) -> Self;$/;"	f
rotate_point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn rotate_point(&self, pt: &E) -> E {$/;"	f
rotate_right	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/int.rs	/^            fn rotate_right(self, n: u32) -> Self {$/;"	f
rotate_right	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/int.rs	/^    fn rotate_right(self, n: u32) -> Self;$/;"	f
rotate_rows	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_ops.rs	/^    pub fn rotate_rows<R2: Dim, C2: Dim, S2: StorageMut<N, R2, C2>>(&self, lhs: &mut Matrix<N, R2, C2, S2>)$/;"	f
rotate_vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn rotate_vector(&self, pt: &E::Coordinates) -> E::Coordinates {$/;"	f
rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/id.rs	/^    fn rotation(&self) -> Self::Rotation {$/;"	f
rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn rotation(&self) -> Self::Rotation {$/;"	f
rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn rotation(&self) -> Self::Rotation;$/;"	f
rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_alga.rs	/^    fn rotation(&self) -> R {$/;"	f
rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod rotation;$/;"	m
rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^    fn rotation(&self) -> Self {$/;"	f
rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    fn rotation(&self) -> Self {$/;"	f
rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_alga.rs	/^    fn rotation(&self) -> R {$/;"	f
rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_alga.rs	/^    fn rotation(&self) -> Id {$/;"	f
rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_alga.rs	/^    fn rotation(&self) -> Self {$/;"	f
rotation_alga	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod rotation_alga; \/\/ FIXME: implement Rotation methods.$/;"	m
rotation_alias	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod rotation_alias;$/;"	m
rotation_between	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/id.rs	/^    fn rotation_between(a: &E::Coordinates, b: &E::Coordinates) -> Option<Self> {$/;"	f
rotation_between	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn rotation_between(a: &E::Coordinates, b: &E::Coordinates) -> Option<Self>;$/;"	f
rotation_between	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^    fn rotation_between(a: &Vector3<N>, b: &Vector3<N>) -> Option<Self> {$/;"	f
rotation_between	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_construction.rs	/^    pub fn rotation_between<SB, SC>(a: &Vector<N, U3, SB>, b: &Vector<N, U3, SC>) -> Option<Self>$/;"	f
rotation_between	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    fn rotation_between(_: &VectorN<N, D>, _: &VectorN<N, D>) -> Option<Self> {$/;"	f
rotation_between	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_specialization.rs	/^    pub fn rotation_between<SB, SC>(a: &Vector<N, U2, SB>, b: &Vector<N, U2, SC>) -> Self$/;"	f
rotation_between	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_specialization.rs	/^    pub fn rotation_between<SB, SC>(a: &Vector<N, U3, SB>, b: &Vector<N, U3, SC>) -> Option<Self>$/;"	f
rotation_between	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_alga.rs	/^    fn rotation_between(a: &Vector2<N>, b: &Vector2<N>) -> Option<Self> {$/;"	f
rotation_between	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_construction.rs	/^    pub fn rotation_between<SB, SC>(a: &Vector<N, U2, SB>, b: &Vector<N, U2, SC>) -> Self$/;"	f
rotation_construction	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod rotation_construction;$/;"	m
rotation_conversion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod rotation_conversion;$/;"	m
rotation_ops	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod rotation_ops;$/;"	m
rotation_specialization	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod rotation_specialization;$/;"	m
rotation_to	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    pub fn rotation_to(&self, other: &UnitQuaternion<N>) -> UnitQuaternion<N> {$/;"	f
rotation_to	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_specialization.rs	/^    pub fn rotation_to(&self, other: &Rotation2<N>) -> Rotation2<N> {$/;"	f
rotation_to	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_specialization.rs	/^    pub fn rotation_to(&self, other: &Rotation3<N>) -> Rotation3<N> {$/;"	f
rotation_to	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex.rs	/^    pub fn rotation_to(&self, other: &Self) -> Self {$/;"	f
rotation_wrt_point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_construction.rs	/^    pub fn rotation_wrt_point(r: R, p: Point<N, D>) -> Self {$/;"	f
rotation_wrt_point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_construction.rs	/^    pub fn rotation_wrt_point(r: R, p: Point<N, D>, scaling: N) -> Self {$/;"	f
round	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn round(self) -> Self {$/;"	f
round	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn round(self) -> Self;$/;"	f
round	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn round(self) -> Self {$/;"	f
round	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn round(self) -> Self;$/;"	f
round	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn round(self) -> Self;$/;"	f
row	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/matrix.rs	/^    fn row(&self, i: usize) -> Self::Row;$/;"	f
row	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    fn row(&self, i: usize) -> Self::Row {$/;"	f
rows_range	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^    pub fn rows_range<RowRange: SliceRange<R>>(&self, rows: RowRange)$/;"	f
rows_range_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^    pub fn rows_range_mut<RowRange: SliceRange<R>>(&mut self, rows: RowRange)$/;"	f
saturating	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/mod.rs	/^pub mod saturating;$/;"	m
saturating_add	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/saturating.rs	/^            fn saturating_add(self, v: Self) -> Self {$/;"	f
saturating_add	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/saturating.rs	/^    fn saturating_add(self, v: Self) -> Self;$/;"	f
saturating_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/saturating.rs	/^macro_rules! saturating_impl {$/;"	d
saturating_sub	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/saturating.rs	/^            fn saturating_sub(self, v: Self) -> Self {$/;"	f
saturating_sub	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/saturating.rs	/^    fn saturating_sub(self, v: Self) -> Self;$/;"	f
scalar	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/mod.rs	/^mod scalar;$/;"	m
scalar	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    pub fn scalar(&self) -> N {$/;"	f
scalar_op_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_ops.rs	/^macro_rules! scalar_op_impl($/;"	d
scale_between	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn scale_between(a: &E::Coordinates, b: &E::Coordinates) -> Option<Self> {$/;"	f
scale_by	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/vector.rs	/^    fn scale_by(&self, s: Self::Real) -> Self {$/;"	f
scale_by	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_alga.rs	/^    fn scale_by(&self, n: N) -> Self {$/;"	f
scale_point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn scale_point(&self, pt: &E) -> E {$/;"	f
scale_vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn scale_vector(&self, pt: &E::Coordinates) -> E::Coordinates {$/;"	f
scaled_axis	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    pub fn scaled_axis(&self) -> Vector3<N> {$/;"	f
scaled_axis	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_specialization.rs	/^    pub fn scaled_axis(&self) -> Vector3<N> {$/;"	f
scaled_axis	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_specialization.rs	/^    pub fn scaled_axis(&self) -> VectorN<N, U1> {$/;"	f
scaled_axis	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex.rs	/^    pub fn scaled_axis(&self) -> Vector1<N> {$/;"	f
scaled_rotation_between	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/id.rs	/^    fn scaled_rotation_between(a: &E::Coordinates, b: &E::Coordinates, _: E::Real) -> Option<Self> {$/;"	f
scaled_rotation_between	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn scaled_rotation_between(a: &E::Coordinates, b: &E::Coordinates, s: E::Real) -> Option<Self>;$/;"	f
scaled_rotation_between	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^    fn scaled_rotation_between(a: &Vector3<N>, b: &Vector3<N>, s: N) -> Option<Self> {$/;"	f
scaled_rotation_between	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_construction.rs	/^    pub fn scaled_rotation_between<SB, SC>(a: &Vector<N, U3, SB>,$/;"	f
scaled_rotation_between	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    fn scaled_rotation_between(_: &VectorN<N, D>, _: &VectorN<N, D>, _: N) -> Option<Self> {$/;"	f
scaled_rotation_between	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_specialization.rs	/^    pub fn scaled_rotation_between<SB, SC>(a: &Vector<N, U2, SB>, b: &Vector<N, U2, SC>, s: N) -> Self$/;"	f
scaled_rotation_between	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_specialization.rs	/^    pub fn scaled_rotation_between<SB, SC>(a: &Vector<N, U3, SB>, b: &Vector<N, U3, SC>, n: N)$/;"	f
scaled_rotation_between	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_alga.rs	/^    fn scaled_rotation_between(a: &Vector2<N>, b: &Vector2<N>, s: N) -> Option<Self> {$/;"	f
scaled_rotation_between	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_construction.rs	/^    pub fn scaled_rotation_between<SB, SC>(a: &Vector<N, U2, SB>, b: &Vector<N, U2, SC>, s: N) -> Self$/;"	f
scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/id.rs	/^    fn scaling(&self) -> Self::Scaling {$/;"	f
scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn scaling(&self) -> Self::Scaling {$/;"	f
scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn scaling(&self) -> Self::Scaling;$/;"	f
scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_alga.rs	/^    fn scaling(&self) -> Id {$/;"	f
scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^    fn scaling(&self) -> Id {$/;"	f
scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    fn scaling(&self) -> Id {$/;"	f
scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity.rs	/^    pub fn scaling(&self) -> N {$/;"	f
scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_alga.rs	/^    fn scaling(&self) -> N {$/;"	f
scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_alga.rs	/^    fn scaling(&self) -> Id {$/;"	f
scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_alga.rs	/^    fn scaling(&self) -> Id {$/;"	f
scene	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/lib.rs	/^pub mod scene;$/;"	m
scene	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn scene(&self) -> &SceneNode {$/;"	f
scene_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn scene_mut(&mut self) -> &mut SceneNode {$/;"	f
scene_node	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/mod.rs	/^mod scene_node;$/;"	m
schur	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/mod.rs	/^mod schur;$/;"	m
screen	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/framebuffer_manager.rs	/^    pub fn screen() -> RenderTarget {$/;"	f
select	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/framebuffer_manager.rs	/^    pub fn select(&mut self, target: &RenderTarget) {$/;"	f
serde::Deserialize for Point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^impl<'a, N: Scalar, D: DimName> serde::Deserialize<'a> for Point<N, D>$/;"	i
serde::Deserialize for Quaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^impl<'a, N: Real> serde::Deserialize<'a> for Quaternion<N>$/;"	i
serde::Deserialize for Rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation.rs	/^impl<'a, N: Scalar, D: DimName> serde::Deserialize<'a> for Rotation<N, D>$/;"	i
serde::Deserialize for Translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation.rs	/^impl<'a, N: Scalar, D: DimName> serde::Deserialize<'a> for Translation<N, D>$/;"	i
serde::Serialize for Orthographic3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/orthographic.rs	/^impl<N: Real + serde::Serialize> serde::Serialize for Orthographic3<N> {$/;"	i
serde::Serialize for Perspective3	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/perspective.rs	/^impl<N: Real + serde::Serialize> serde::Serialize for Perspective3<N> {$/;"	i
serde::Serialize for Point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^impl<N: Scalar, D: DimName> serde::Serialize for Point<N, D>$/;"	i
serde::Serialize for Quaternion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^impl<N: Real> serde::Serialize for Quaternion<N>$/;"	i
serde::Serialize for Rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation.rs	/^impl<N: Scalar, D: DimName> serde::Serialize for Rotation<N, D>$/;"	i
serde::Serialize for Translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation.rs	/^impl<N: Scalar, D: DimName> serde::Serialize for Translation<N, D>$/;"	i
serialize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    fn serialize<T>(&self, serializer: T) -> Result<T::Ok, T::Error>$/;"	f
serialize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/unit.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/orthographic.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/perspective.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
set	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/matrix.rs	/^    fn set(&mut self, i: usize, j: usize, val: Self::Field) {$/;"	f
set_aspect	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/perspective.rs	/^    pub fn set_aspect(&mut self, aspect: N) {$/;"	f
set_at	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/arc_ball.rs	/^    pub fn set_at(&mut self, at: Point3<f32>) {$/;"	f
set_background_color	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn set_background_color(&mut self, r: f32, g: GLfloat, b: f32) {$/;"	f
set_bottom	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/orthographic.rs	/^    pub fn set_bottom(&mut self, bottom: N) {$/;"	f
set_bottom_and_top	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/orthographic.rs	/^    pub fn set_bottom_and_top(&mut self, bottom: N, top: N) {$/;"	f
set_category	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^    pub fn set_category<CNew: SuperTCategoryOf<C>>(self) -> Transform<N, D, CNew> {$/;"	f
set_color	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/object.rs	/^    pub fn set_color(&mut self, r: f32, g: f32, b: f32) {$/;"	f
set_color	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn set_color(&mut self, r: f32, g: f32, b: f32) {$/;"	f
set_column	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/matrix.rs	/^    fn set_column(&self, i: usize, col: &Self::Column) -> Self {$/;"	f
set_column	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/edition.rs	/^    pub fn set_column<R2: Dim, S2>(&mut self, i: usize, column: &Vector<N, R2, S2>)$/;"	f
set_column_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/matrix.rs	/^    fn set_column_mut(&mut self, i: usize, col: &Self::Column);$/;"	f
set_diagonal	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/matrix.rs	/^    fn set_diagonal(&self, diag: &Self::Vector) -> Self {$/;"	f
set_diagonal	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/edition.rs	/^    pub fn set_diagonal<R2: Dim, S2>(&mut self, diag: &Vector<N, R2, S2>)$/;"	f
set_diagonal_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/matrix.rs	/^    fn set_diagonal_mut(&mut self, diag: &Self::Vector);$/;"	f
set_dist	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/arc_ball.rs	/^    pub fn set_dist(&mut self, dist: f32) {$/;"	f
set_eye	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^    fn set_eye(&mut self, eye: Point3<f32>) {$/;"	f
set_fovy	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/perspective.rs	/^    pub fn set_fovy(&mut self, fovy: N) {$/;"	f
set_framerate_limit	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn set_framerate_limit(&mut self, fps: Option<u64>) {$/;"	f
set_ipd	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person_stereo.rs	/^    pub fn set_ipd(&mut self, ipd: f32) {$/;"	f
set_left	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/orthographic.rs	/^    pub fn set_left(&mut self, left: N) {$/;"	f
set_left_and_right	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/orthographic.rs	/^    pub fn set_left_and_right(&mut self, left: N, right: N) {$/;"	f
set_light	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn set_light(&mut self, pos: Light) {$/;"	f
set_lines_width	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/object.rs	/^    pub fn set_lines_width(&mut self, width: f32) {$/;"	f
set_lines_width	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn set_lines_width(&mut self, width: f32) {$/;"	f
set_local_rotation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn set_local_rotation(&mut self, r: UnitQuaternion<f32>) {$/;"	f
set_local_scale	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn set_local_scale(&mut self, sx: f32, sy: f32, sz: f32) {$/;"	f
set_local_transformation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn set_local_transformation(&mut self, t: Isometry3<f32>) {$/;"	f
set_local_translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn set_local_translation(&mut self, t: Translation3<f32>) {$/;"	f
set_material	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/object.rs	/^    pub fn set_material(&mut self, material: Rc<RefCell<Box<Material + 'static>>>) {$/;"	f
set_material	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn set_material(&mut self, material: Rc<RefCell<Box<Material + 'static>>>) {$/;"	f
set_material_with_name	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn set_material_with_name(&mut self, name: &str) {$/;"	f
set_move_step	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^    pub fn set_move_step(&mut self, step: f32) {$/;"	f
set_parent	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    fn set_parent(&mut self, parent: *const RefCell<SceneNodeData>) {$/;"	f
set_pitch	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/arc_ball.rs	/^    pub fn set_pitch(&mut self, pitch: f32) {$/;"	f
set_pitch_step	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^    pub fn set_pitch_step(&mut self, step: f32) {$/;"	f
set_points_size	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/object.rs	/^    pub fn set_points_size(&mut self, size: f32) {$/;"	f
set_points_size	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn set_points_size(&mut self, size: f32) {$/;"	f
set_right	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/orthographic.rs	/^    pub fn set_right(&mut self, right: N) {$/;"	f
set_row	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/matrix.rs	/^    fn set_row(&self, i: usize, row: &Self::Row) -> Self {$/;"	f
set_row	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/edition.rs	/^    pub fn set_row<C2: Dim, S2>(&mut self, i: usize, row: &RowVector<N, C2, S2>)$/;"	f
set_row_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/matrix.rs	/^    fn set_row_mut(&mut self, i: usize, row: &Self::Row);$/;"	f
set_scaling	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity.rs	/^    pub fn set_scaling(&mut self, scaling: N) {$/;"	f
set_surface_rendering_activation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/object.rs	/^    pub fn set_surface_rendering_activation(&mut self, active: bool) {$/;"	f
set_surface_rendering_activation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn set_surface_rendering_activation(&mut self, active: bool) {$/;"	f
set_texture	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/object.rs	/^    pub fn set_texture(&mut self, texture: Rc<Texture>) {$/;"	f
set_texture	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn set_texture(&mut self, texture: Rc<Texture>) {$/;"	f
set_texture_from_file	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/object.rs	/^    pub fn set_texture_from_file(&mut self, path: &Path, name: &str) {$/;"	f
set_texture_from_file	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn set_texture_from_file(&mut self, path: &Path, name: &str) {$/;"	f
set_texture_with_name	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/object.rs	/^    pub fn set_texture_with_name(&mut self, name: &str) {$/;"	f
set_texture_with_name	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn set_texture_with_name(&mut self, name: &str) {$/;"	f
set_title	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn set_title(&mut self, title: &str) {$/;"	f
set_top	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/orthographic.rs	/^    pub fn set_top(&mut self, top: N) {$/;"	f
set_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/matrix.rs	/^    unsafe fn set_unchecked(&mut self, i: usize, j: usize, val: Self::Field);$/;"	f
set_user_data	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/object.rs	/^    pub fn set_user_data(&mut self, user_data: Box<Any + 'static>) {$/;"	f
set_user_data	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn set_user_data(&mut self, user_data: ~Any) {$/;"	f
set_visible	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn set_visible(&mut self, visible: bool) {$/;"	f
set_yaw	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/arc_ball.rs	/^    pub fn set_yaw(&mut self, yaw: f32) {$/;"	f
set_yaw_step	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^    pub fn set_yaw_step(&mut self, step: f32) {$/;"	f
set_zfar	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/orthographic.rs	/^    pub fn set_zfar(&mut self, zfar: N) {$/;"	f
set_zfar	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/perspective.rs	/^    pub fn set_zfar(&mut self, zfar: N) {$/;"	f
set_znear	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/orthographic.rs	/^    pub fn set_znear(&mut self, znear: N) {$/;"	f
set_znear	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/perspective.rs	/^    pub fn set_znear(&mut self, znear: N) {$/;"	f
set_znear_and_zfar	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/orthographic.rs	/^    pub fn set_znear_and_zfar(&mut self, znear: N, zfar: N) {$/;"	f
set_znear_and_zfar	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/perspective.rs	/^    pub fn set_znear_and_zfar(&mut self, znear: N, zfar: N) {$/;"	f
shader	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/mod.rs	/^mod shader;$/;"	m
shape	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn shape(&self) -> (usize, usize) {$/;"	f
shape	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^    fn shape(&self) -> (R, C) {$/;"	f
shape	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^            fn shape(&self) -> (R, C) {$/;"	f
shape	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_vec.rs	/^    fn shape(&self) -> (Dynamic, C) {$/;"	f
shape	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_vec.rs	/^    fn shape(&self) -> (R, Dynamic) {$/;"	f
shape	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/storage.rs	/^    fn shape(&self) -> (R, C);$/;"	f
should_close	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn should_close(&self) -> bool {$/;"	f
show	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn show(&mut self) {$/;"	f
sign	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^pub mod sign;$/;"	m
signed_float_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/sign.rs	/^macro_rules! signed_float_impl {$/;"	d
signed_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/sign.rs	/^macro_rules! signed_impl {$/;"	d
signed_shl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/int.rs	/^            fn signed_shl(self, n: u32) -> Self {$/;"	f
signed_shl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/int.rs	/^    fn signed_shl(self, n: u32) -> Self;$/;"	f
signed_shr	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/int.rs	/^            fn signed_shr(self, n: u32) -> Self {$/;"	f
signed_shr	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/int.rs	/^    fn signed_shr(self, n: u32) -> Self;$/;"	f
signed_wrapping_is_signed	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/sign.rs	/^fn signed_wrapping_is_signed() {$/;"	f
signum	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn signum(self) -> Self {$/;"	f
signum	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn signum(self) -> Self;$/;"	f
signum	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn signum(self) -> Self {$/;"	f
signum	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn signum(self) -> Self;$/;"	f
signum	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn signum(self) -> Self;$/;"	f
signum	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/sign.rs	/^            fn signum(&self) -> $t {$/;"	f
signum	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/sign.rs	/^    fn signum(&self) -> Self {$/;"	f
signum	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/sign.rs	/^    fn signum(&self) -> Self;$/;"	f
similarity	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod similarity;$/;"	m
similarity_alga	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod similarity_alga;$/;"	m
similarity_alias	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod similarity_alias;$/;"	m
similarity_binop_assign_impl_all	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_ops.rs	/^macro_rules! similarity_binop_assign_impl_all($/;"	d
similarity_binop_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_ops.rs	/^macro_rules! similarity_binop_impl($/;"	d
similarity_binop_impl_all	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_ops.rs	/^macro_rules! similarity_binop_impl_all($/;"	d
similarity_construction	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod similarity_construction;$/;"	m
similarity_construction_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_construction.rs	/^macro_rules! similarity_construction_impl($/;"	d
similarity_conversion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod similarity_conversion;$/;"	m
similarity_from_composition_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_ops.rs	/^macro_rules! similarity_from_composition_impl($/;"	d
similarity_from_composition_impl_all	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_ops.rs	/^macro_rules! similarity_from_composition_impl_all($/;"	d
similarity_ops	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod similarity_ops;$/;"	m
sin	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn sin(self) -> Self {$/;"	f
sin	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn sin(self) -> Self;$/;"	f
sin	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn sin(self) -> Self;$/;"	f
sin	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn sin(self) -> Self;$/;"	f
sin_angle	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex.rs	/^    pub fn sin_angle(&self) -> N {$/;"	f
sin_cos	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn sin_cos(self) -> (Self, Self) {$/;"	f
sin_cos	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn sin_cos(self) -> (Self, Self);$/;"	f
sin_cos	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn sin_cos(self) -> (Self, Self);$/;"	f
sin_cos	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn sin_cos(self) -> (Self, Self);$/;"	f
singular_values	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/svd.rs	/^    pub fn singular_values(&self) -> VectorN<N, DimMinimum<R, C>> {$/;"	f
sinh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn sinh(self) -> Self {$/;"	f
sinh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn sinh(self) -> Self;$/;"	f
sinh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn sinh(self) -> Self;$/;"	f
sinh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn sinh(self) -> Self;$/;"	f
size	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn size(_: Option<(GLfloat, GLfloat)>) -> GLuint {$/;"	f
size	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn size(_: Option<(GLfloat, GLfloat, GLfloat)>) -> GLuint {$/;"	f
size	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn size(_: Option<(GLuint, GLuint)>) -> GLuint {$/;"	f
size	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn size(_: Option<(GLuint, GLuint, GLuint)>) -> GLuint {$/;"	f
size	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn size(_: Option<GLfloat>) -> GLuint {$/;"	f
size	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn size(_: Option<GLint>) -> GLuint {$/;"	f
size	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn size(_: Option<GLuint>) -> GLuint {$/;"	f
size	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn size(_: Option<Matrix2<GLfloat>>) -> GLuint {$/;"	f
size	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn size(_: Option<Matrix3<GLfloat>>) -> GLuint {$/;"	f
size	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn size(_: Option<Matrix4<GLfloat>>) -> GLuint {$/;"	f
size	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn size(_: Option<Point2<GLfloat>>) -> GLuint {$/;"	f
size	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn size(_: Option<Point2<GLuint>>) -> GLuint {$/;"	f
size	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn size(_: Option<Point3<GLfloat>>) -> GLuint {$/;"	f
size	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn size(_: Option<Point3<GLuint>>) -> GLuint {$/;"	f
size	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn size(_: Option<Rotation2<GLfloat>>) -> GLuint {$/;"	f
size	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn size(_: Option<Rotation3<GLfloat>>) -> GLuint {$/;"	f
size	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn size(_: Option<Vector2<GLfloat>>) -> GLuint {$/;"	f
size	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn size(_: Option<Vector2<GLuint>>) -> GLuint {$/;"	f
size	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn size(_: Option<Vector3<GLfloat>>) -> GLuint {$/;"	f
size	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn size(_: Option<Vector3<GLuint>>) -> GLuint {$/;"	f
size	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn size(_type: Option<Self>) -> GLuint;$/;"	f
size	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn size(&self) -> Vector2<f32> {$/;"	f
size	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^    fn size(&self, _: D) -> Self::Size {$/;"	f
size	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^    fn size(&self, dim: D) -> Self::Size {$/;"	f
size	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^    fn size(&self, shape: D) -> Self::Size;$/;"	f
size_hint	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/iter.rs	/^            fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
slerp	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    pub fn slerp(&self, other: &UnitQuaternion<N>, t: N) -> UnitQuaternion<N> {$/;"	f
slice_range	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^    pub fn slice_range<RowRange, ColRange>(&self, rows: RowRange, cols: ColRange)$/;"	f
slice_range_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^    pub fn slice_range_mut<RowRange, ColRange>(&mut self, rows: RowRange, cols: ColRange)$/;"	f
slice_shift_char	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^                fn slice_shift_char(src: &str) -> Option<(char, &str)> {$/;"	f
slice_storage_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^macro_rules! slice_storage_impl($/;"	d
snap	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/tools/kiss3d_recording.rs	/^    pub fn snap(&mut self, window: &Window) {$/;"	f
snap	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn snap(&self, out: &mut Vec<u8>) {$/;"	f
snap_image	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn snap_image(&self) -> ImageBuffer<Rgb<u8>, Vec<u8>> {$/;"	f
snap_rect	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn snap_rect(&self, out: &mut Vec<u8>, x: usize, y: usize, width: usize, height: usize) {$/;"	f
sobel_edge_highlight	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/mod.rs	/^mod sobel_edge_highlight;$/;"	m
solve	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/cholesky.rs	/^    pub fn solve<R2: Dim, C2: Dim, S2>(&self, b: &Matrix<N, R2, C2, S2>) -> MatrixMN<N, R2, C2>$/;"	f
solve	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/full_piv_lu.rs	/^    pub fn solve<R2: Dim, C2: Dim, S2>(&self, b: &Matrix<N, R2, C2, S2>) -> Option<MatrixMN<N, R2, C2>>$/;"	f
solve	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/lu.rs	/^    pub fn solve<R2: Dim, C2: Dim, S2>(&self, b: &Matrix<N, R2, C2, S2>) -> Option<MatrixMN<N, R2, C2>>$/;"	f
solve	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/mod.rs	/^mod solve;$/;"	m
solve	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/qr.rs	/^    pub fn solve<R2: Dim, C2: Dim, S2>(&self, b: &Matrix<N, R2, C2, S2>) -> Option<MatrixMN<N, R2, C2>>$/;"	f
solve	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/svd.rs	/^    pub fn solve<R2: Dim, C2: Dim, S2>(&self, b: &Matrix<N, R2, C2, S2>, eps: N) -> MatrixMN<N, C, C2>$/;"	f
solve_lower_triangular	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/solve.rs	/^    pub fn solve_lower_triangular<R2: Dim, C2: Dim, S2>(&self, b: &Matrix<N, R2, C2, S2>)$/;"	f
solve_lower_triangular_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/solve.rs	/^    pub fn solve_lower_triangular_mut<R2: Dim, C2: Dim, S2>(&self, b: &mut Matrix<N, R2, C2, S2>) -> bool$/;"	f
solve_lower_triangular_vector_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/solve.rs	/^    fn solve_lower_triangular_vector_mut<R2: Dim, S2>(&self, b: &mut Vector<N, R2, S2>) -> bool$/;"	f
solve_lower_triangular_with_diag_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/solve.rs	/^    pub fn solve_lower_triangular_with_diag_mut<R2: Dim, C2: Dim, S2>(&self, b: &mut Matrix<N, R2, C2, S2>, diag: N)$/;"	f
solve_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/cholesky.rs	/^    pub fn solve_mut<R2: Dim, C2: Dim, S2>(&self, b: &mut Matrix<N, R2, C2, S2>)$/;"	f
solve_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/full_piv_lu.rs	/^    pub fn solve_mut<R2: Dim, C2: Dim, S2>(&self, b: &mut Matrix<N, R2, C2, S2>) -> bool$/;"	f
solve_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/lu.rs	/^    pub fn solve_mut<R2: Dim, C2: Dim, S2>(&self, b: &mut Matrix<N, R2, C2, S2>) -> bool$/;"	f
solve_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/qr.rs	/^    pub fn solve_mut<R2: Dim, C2: Dim, S2>(&self, b: &mut Matrix<N, R2, C2, S2>) -> bool$/;"	f
solve_upper_triangular	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/solve.rs	/^    pub fn solve_upper_triangular<R2: Dim, C2: Dim, S2>(&self, b: &Matrix<N, R2, C2, S2>)$/;"	f
solve_upper_triangular_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/qr.rs	/^    fn solve_upper_triangular_mut<R2: Dim, C2: Dim, S2>(&self, b: &mut Matrix<N, R2, C2, S2>) -> bool$/;"	f
solve_upper_triangular_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/solve.rs	/^    pub fn solve_upper_triangular_mut<R2: Dim, C2: Dim, S2>(&self, b: &mut Matrix<N, R2, C2, S2>) -> bool$/;"	f
solve_upper_triangular_vector_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/solve.rs	/^    fn solve_upper_triangular_vector_mut<R2: Dim, S2>(&self, b: &mut Vector<N, R2, S2>) -> bool$/;"	f
solvers	/home/berger/playground/rust/slam/slam-rs/src/lib.rs	/^pub mod solvers;$/;"	m
specialize_structures	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/specialized.rs	/^macro_rules! specialize_structures($/;"	d
specialized	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/mod.rs	/^mod specialized;$/;"	m
split_words	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/loader/obj.rs	/^pub fn split_words(s: &str) -> Words {$/;"	f
sqrt	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn sqrt(self) -> Self {$/;"	f
sqrt	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn sqrt(self) -> Self;$/;"	f
sqrt	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn sqrt(self) -> Self;$/;"	f
sqrt	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn sqrt(self) -> Self;$/;"	f
src	/home/berger/playground/rust/slam/slam-rs/src/factors/mod.rs	/^    fn src(&self) -> NodeId {$/;"	f
start_pass	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/camera.rs	/^    fn start_pass(&self, _pass: usize, _window: &glfw::Window) { }$/;"	f
start_pass	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person_stereo.rs	/^    fn start_pass(&self, pass: usize, window: &glfw::Window) {$/;"	f
storage	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/mod.rs	/^pub mod storage;$/;"	m
storage_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^macro_rules! storage_impl($/;"	d
stride	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^    pub fn stride(&self) -> usize {$/;"	f
strides	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn strides(&self) -> (usize, usize) {$/;"	f
strides	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^    fn strides(&self) -> (Self::RStride, Self::CStride) {$/;"	f
strides	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_slice.rs	/^            fn strides(&self) -> (Self::RStride, Self::CStride) {$/;"	f
strides	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_vec.rs	/^    fn strides(&self) -> (Self::RStride, Self::CStride) {$/;"	f
strides	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/storage.rs	/^    fn strides(&self) -> (Self::RStride, Self::CStride);$/;"	f
sub	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/wrapper.rs	/^    fn sub(self, lhs: Self) -> Self {$/;"	f
sub	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^    fn sub(self, rhs: usize) -> Dynamic {$/;"	f
subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/mod.rs	/^mod subset;$/;"	m
subtract	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/vector.rs	/^    fn subtract(&self, right: &Self) -> Self::Translation {$/;"	f
sum	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^    fn sum<I: Iterator<Item = &'a MatrixMN<N, R, C>>>(iter: I) -> MatrixMN<N, R, C> {$/;"	f
sum	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^    fn sum<I: Iterator<Item = MatrixMN<N, R, C>>>(iter: I) -> MatrixMN<N, R, C> {$/;"	f
sup	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub fn sup<T: JoinSemilattice>(a: &T, b: &T) -> T {$/;"	f
super_tcategory_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^macro_rules! super_tcategory_impl($/;"	d
surface_rendering_activation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/object.rs	/^    pub fn surface_rendering_activation(&self) -> bool {$/;"	f
surface_rendering_active	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/object.rs	/^    pub fn surface_rendering_active(&self) -> bool {$/;"	f
svd	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/mod.rs	/^mod svd;$/;"	m
svd	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/svd.rs	/^    pub fn svd(self, compute_u: bool, compute_v: bool) -> SVD<N, R, C> {$/;"	f
swap	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn swap(&mut self, row_cols1: (usize, usize), row_cols2: (usize, usize)) {$/;"	f
swap_bytes	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/int.rs	/^            fn swap_bytes(self) -> Self {$/;"	f
swap_bytes	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/int.rs	/^    fn swap_bytes(self) -> Self;$/;"	f
swap_columns	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/edition.rs	/^    pub fn swap_columns(&mut self, icol1: usize, icol2: usize) {$/;"	f
swap_rows	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/edition.rs	/^    pub fn swap_rows(&mut self, irow1: usize, irow2: usize) {$/;"	f
swap_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub unsafe fn swap_unchecked(&mut self, row_cols1: (usize, usize), row_cols2: (usize, usize)) {$/;"	f
swap_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/storage.rs	/^    unsafe fn swap_unchecked(&mut self, row_col1: (usize, usize), row_col2: (usize, usize)) {$/;"	f
swap_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^    pub unsafe fn swap_unchecked(&mut self, i1: usize, i2: usize) {$/;"	f
swap_unchecked_linear	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/storage.rs	/^    unsafe fn swap_unchecked_linear(&mut self, i1: usize, i2: usize) {$/;"	f
symmetric_eigen	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/mod.rs	/^mod symmetric_eigen;$/;"	m
symmetric_eigen	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/symmetric_eigen.rs	/^    pub fn symmetric_eigen(self) -> SymmetricEigen<N, D> {$/;"	f
symmetric_eigenvalues	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/symmetric_eigen.rs	/^    pub fn symmetric_eigenvalues(&self) -> VectorN<N, D> {$/;"	f
symmetric_tridiagonal	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/mod.rs	/^mod symmetric_tridiagonal;$/;"	m
symmetric_tridiagonalize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/symmetric_tridiagonal.rs	/^    pub fn symmetric_tridiagonalize(self) -> SymmetricTridiagonal<N, D> {$/;"	f
tan	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn tan(self) -> Self {$/;"	f
tan	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn tan(self) -> Self;$/;"	f
tan	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn tan(self) -> Self;$/;"	f
tan	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn tan(self) -> Self;$/;"	f
tanh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn tanh(self) -> Self {$/;"	f
tanh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn tanh(self) -> Self;$/;"	f
tanh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn tanh(self) -> Self;$/;"	f
tanh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn tanh(self) -> Self;$/;"	f
test	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/symmetric_eigen.rs	/^mod test {$/;"	m
test_mul_add	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/mul_add.rs	/^        macro_rules! test_mul_add {$/;"	d
test_wrapping_bounded	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/bounds.rs	/^    macro_rules! test_wrapping_bounded {$/;"	d
test_wrapping_from_str_radix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^    macro_rules! test_wrapping_from_str_radix {$/;"	d
test_wrapping_identities	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/identities.rs	/^    macro_rules! test_wrapping_identities {$/;"	d
test_wrapping_traits	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/wrapping.rs	/^fn test_wrapping_traits() {$/;"	f
tests	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^mod tests {$/;"	m
tests	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^mod tests {$/;"	m
tests	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/mul_add.rs	/^mod tests {$/;"	m
tests	/home/berger/playground/rust/slam/slam-rs/src/graphs/mod.rs	/^mod tests {$/;"	m
tests	/home/berger/playground/rust/slam/slam-rs/src/lib.rs	/^mod tests {$/;"	m
text	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/lib.rs	/^pub mod text;$/;"	m
texture	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/object.rs	/^    pub fn texture(&self) -> &Rc<Texture> {$/;"	f
texture_atlas	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/text/font.rs	/^    pub fn texture_atlas(&self) -> GLuint {$/;"	f
texture_id	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/framebuffer_manager.rs	/^    pub fn texture_id(&self) -> GLuint {$/;"	f
texture_manager	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/mod.rs	/^mod texture_manager;$/;"	m
to_be	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/int.rs	/^            fn to_be(self) -> Self {$/;"	f
to_be	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/int.rs	/^    fn to_be(self) -> Self;$/;"	f
to_degrees	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn to_degrees(self) -> Self {$/;"	f
to_degrees	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn to_degrees(self) -> Self;$/;"	f
to_degrees	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn to_degrees(self) -> Self;$/;"	f
to_degrees_rounding	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn to_degrees_rounding() {$/;"	f
to_f32	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^                fn to_f32 -> f32;$/;"	f
to_f32	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^            fn to_f32(&self) -> Option<f32> { Some(*self as f32) }$/;"	f
to_f32	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^        fn to_f32 -> f32;$/;"	f
to_f32	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^    fn to_f32(&self) -> Option<f32> {$/;"	f
to_f64	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^                fn to_f64 -> f64;$/;"	f
to_f64	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^            fn to_f64(&self) -> Option<f64> { Some(*self as f64) }$/;"	f
to_f64	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^        fn to_f64 -> f64;$/;"	f
to_f64	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^    fn to_f64(&self) -> Option<f64> {$/;"	f
to_gl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gpu_vector.rs	/^    fn to_gl(&self) -> GLuint {$/;"	f
to_homogeneous	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn to_homogeneous(&self) -> VectorN<N, DimSum<D, U1>>$/;"	f
to_homogeneous	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry.rs	/^    pub fn to_homogeneous(&self) -> MatrixN<N, DimNameSum<D, U1>>$/;"	f
to_homogeneous	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/orthographic.rs	/^    pub fn to_homogeneous(&self) -> Matrix4<N> {$/;"	f
to_homogeneous	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/perspective.rs	/^    pub fn to_homogeneous(&self) -> Matrix4<N> {$/;"	f
to_homogeneous	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^    pub fn to_homogeneous(&self) -> VectorN<N, DimNameSum<D, U1>>$/;"	f
to_homogeneous	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    pub fn to_homogeneous(&self) -> MatrixN<N, U4> {$/;"	f
to_homogeneous	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation.rs	/^    pub fn to_homogeneous(&self) -> MatrixN<N, DimNameSum<D, U1>>$/;"	f
to_homogeneous	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity.rs	/^    pub fn to_homogeneous(&self) -> MatrixN<N, DimNameSum<D, U1>>$/;"	f
to_homogeneous	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^    pub fn to_homogeneous(&self) -> MatrixN<N, DimNameSum<D, U1>> {$/;"	f
to_homogeneous	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation.rs	/^    pub fn to_homogeneous(&self) -> MatrixN<N, DimNameSum<D, U1>>$/;"	f
to_homogeneous	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex.rs	/^    pub fn to_homogeneous(&self) -> Matrix3<N> {$/;"	f
to_i128	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^                fn to_i128 -> i128;$/;"	f
to_i128	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^        fn to_i128 -> i128;$/;"	f
to_i128	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^    fn to_i128(&self) -> Option<i128> {$/;"	f
to_i16	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^                fn to_i16 -> i16;$/;"	f
to_i16	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^        fn to_i16 -> i16;$/;"	f
to_i16	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^    fn to_i16(&self) -> Option<i16> {$/;"	f
to_i32	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^                fn to_i32 -> i32;$/;"	f
to_i32	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^        fn to_i32 -> i32;$/;"	f
to_i32	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^    fn to_i32(&self) -> Option<i32> {$/;"	f
to_i64	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^                fn to_i64 -> i64;$/;"	f
to_i64	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^        fn to_i64 -> i64;$/;"	f
to_i64	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^    fn to_i64(&self) -> Option<i64>;$/;"	f
to_i8	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^                fn to_i8 -> i8;$/;"	f
to_i8	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^        fn to_i8 -> i8;$/;"	f
to_i8	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^    fn to_i8(&self) -> Option<i8> {$/;"	f
to_isize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^                fn to_isize -> isize;$/;"	f
to_isize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^        fn to_isize -> isize;$/;"	f
to_isize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^    fn to_isize(&self) -> Option<isize> {$/;"	f
to_le	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/int.rs	/^            fn to_le(self) -> Self {$/;"	f
to_le	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/int.rs	/^    fn to_le(self) -> Self;$/;"	f
to_owned	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gpu_vector.rs	/^    pub fn to_owned(&self) -> Option<Vec<T>> {$/;"	f
to_radians	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn to_radians(self) -> Self {$/;"	f
to_radians	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn to_radians(self) -> Self;$/;"	f
to_radians	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn to_radians(self) -> Self;$/;"	f
to_real	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn to_real(&self) -> E::Real {$/;"	f
to_rotation_matrix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    pub fn to_rotation_matrix(&self) -> Rotation<N, U3> {$/;"	f
to_rotation_matrix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex.rs	/^    pub fn to_rotation_matrix(&self) -> Rotation2<N> {$/;"	f
to_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/subset.rs	/^    fn to_subset(&self) -> Option<SS> {$/;"	f
to_subset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/subset.rs	/^    fn to_subset(&self) -> Option<T> {$/;"	f
to_subset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/subset.rs	/^    unsafe fn to_subset_unchecked(&self) -> SS {$/;"	f
to_subset_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/subset.rs	/^    unsafe fn to_subset_unchecked(&self) -> T;$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^    fn to_superset(&self) -> T {$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/subset.rs	/^            fn to_superset(&self) -> $superset {$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/subset.rs	/^            fn to_superset(&self) -> Complex<N2> {$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/subset.rs	/^    fn to_superset(&self) -> Complex<N2> {$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/subset.rs	/^    fn to_superset(&self) -> T;$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/conversion.rs	/^    fn to_superset(&self) -> MatrixMN<N2, R2, C2> {$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/unit.rs	/^    fn to_superset(&self) -> T {$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_conversion.rs	/^    fn to_superset(&self) -> Isometry<N2, D, R2> {$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_conversion.rs	/^    fn to_superset(&self) -> MatrixN<N2, DimNameSum<D, U1>> {$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_conversion.rs	/^    fn to_superset(&self) -> Similarity<N2, D, R2> {$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_conversion.rs	/^    fn to_superset(&self) -> Transform<N2, D, C> {$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_conversion.rs	/^    fn to_superset(&self) -> Point<N2, D> {$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point_conversion.rs	/^    fn to_superset(&self) -> VectorN<N2, DimNameSum<D, U1>> {$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_conversion.rs	/^    fn to_superset(&self) -> Isometry<N2, U3, R> {$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_conversion.rs	/^    fn to_superset(&self) -> Matrix4<N2> {$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_conversion.rs	/^    fn to_superset(&self) -> Quaternion<N2> {$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_conversion.rs	/^    fn to_superset(&self) -> Rotation3<N2> {$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_conversion.rs	/^    fn to_superset(&self) -> Similarity<N2, U3, R> {$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_conversion.rs	/^    fn to_superset(&self) -> Transform<N2, U3, C> {$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_conversion.rs	/^    fn to_superset(&self) -> UnitQuaternion<N2> {$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_conversion.rs	/^    fn to_superset(&self) -> Isometry<N2, D, R> {$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_conversion.rs	/^    fn to_superset(&self) -> MatrixN<N2, DimNameSum<D, U1>> {$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_conversion.rs	/^    fn to_superset(&self) -> Rotation<N2, D> {$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_conversion.rs	/^    fn to_superset(&self) -> Similarity<N2, D, R> {$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_conversion.rs	/^    fn to_superset(&self) -> Transform<N2, D, C> {$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_conversion.rs	/^    fn to_superset(&self) -> UnitComplex<N2> {$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_conversion.rs	/^    fn to_superset(&self) -> UnitQuaternion<N2> {$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_conversion.rs	/^    fn to_superset(&self) -> MatrixN<N2, DimNameSum<D, U1>> {$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_conversion.rs	/^    fn to_superset(&self) -> Similarity<N2, D, R2> {$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_conversion.rs	/^    fn to_superset(&self) -> Transform<N2, D, C> {$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform_conversion.rs	/^    fn to_superset(&self) -> MatrixN<N2, DimNameSum<D, U1>> {$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform_conversion.rs	/^    fn to_superset(&self) -> Transform<N2, D, C2> {$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_conversion.rs	/^    fn to_superset(&self) -> Isometry<N2, D, R> {$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_conversion.rs	/^    fn to_superset(&self) -> MatrixN<N2, DimNameSum<D, U1>> {$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_conversion.rs	/^    fn to_superset(&self) -> Similarity<N2, D, R> {$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_conversion.rs	/^    fn to_superset(&self) -> Transform<N2, D, C> {$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_conversion.rs	/^    fn to_superset(&self) -> Translation<N2, D> {$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_conversion.rs	/^    fn to_superset(&self) -> Isometry<N2, U2, R> {$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_conversion.rs	/^    fn to_superset(&self) -> Matrix3<N2> {$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_conversion.rs	/^    fn to_superset(&self) -> Rotation2<N2> {$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_conversion.rs	/^    fn to_superset(&self) -> Similarity<N2, U2, R> {$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_conversion.rs	/^    fn to_superset(&self) -> Transform<N2, U2, C> {$/;"	f
to_superset	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_conversion.rs	/^    fn to_superset(&self) -> UnitComplex<N2> {$/;"	f
to_trimesh	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/mesh.rs	/^    pub fn to_trimesh(&self) -> Option<TriMesh3<GLfloat>> {$/;"	f
to_u128	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^                fn to_u128 -> u128;$/;"	f
to_u128	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^        fn to_u128 -> u128;$/;"	f
to_u128	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^    fn to_u128(&self) -> Option<u128> {$/;"	f
to_u16	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^                fn to_u16 -> u16;$/;"	f
to_u16	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^        fn to_u16 -> u16;$/;"	f
to_u16	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^    fn to_u16(&self) -> Option<u16> {$/;"	f
to_u32	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^                fn to_u32 -> u32;$/;"	f
to_u32	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^        fn to_u32 -> u32;$/;"	f
to_u32	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^    fn to_u32(&self) -> Option<u32> {$/;"	f
to_u64	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^                fn to_u64 -> u64;$/;"	f
to_u64	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^        fn to_u64 -> u64;$/;"	f
to_u64	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^    fn to_u64(&self) -> Option<u64>;$/;"	f
to_u8	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^                fn to_u8 -> u8;$/;"	f
to_u8	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^        fn to_u8 -> u8;$/;"	f
to_u8	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^    fn to_u8(&self) -> Option<u8> {$/;"	f
to_usize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^                fn to_usize -> usize;$/;"	f
to_usize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^        fn to_usize -> usize;$/;"	f
to_usize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/cast.rs	/^    fn to_usize(&self) -> Option<usize> {$/;"	f
to_vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/id.rs	/^    fn to_vector(&self) -> E::Coordinates {$/;"	f
to_vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn to_vector(&self) -> E::Coordinates;$/;"	f
to_vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_alga.rs	/^    fn to_vector(&self) -> VectorN<N, D> {$/;"	f
top	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/orthographic.rs	/^    pub fn top(&self) -> N {$/;"	f
tr_copy_from	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn tr_copy_from<R2, C2, SB>(&mut self, other: &Matrix<N, R2, C2, SB>)$/;"	f
tr_dot	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/blas.rs	/^    pub fn tr_dot<R2: Dim, C2: Dim, SB>(&self, rhs: &Matrix<N, R2, C2, SB>) -> N$/;"	f
tr_mul	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^    pub fn tr_mul<R2: Dim, C2: Dim, SB>(&self, rhs: &Matrix<N, R2, C2, SB>) -> MatrixMN<N, C1, C2>$/;"	f
tr_mul_to	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/ops.rs	/^    pub fn tr_mul_to<R2: Dim, C2: Dim, SB,$/;"	f
tr_solve_lower_triangular	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/solve.rs	/^    pub fn tr_solve_lower_triangular<R2: Dim, C2: Dim, S2>(&self, b: &Matrix<N, R2, C2, S2>)$/;"	f
tr_solve_lower_triangular_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/solve.rs	/^    pub fn tr_solve_lower_triangular_mut<R2: Dim, C2: Dim, S2>(&self, b: &mut Matrix<N, R2, C2, S2>) -> bool$/;"	f
tr_solve_lower_triangular_vector_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/solve.rs	/^    fn tr_solve_lower_triangular_vector_mut<R2: Dim, S2>(&self, b: &mut Vector<N, R2, S2>) -> bool$/;"	f
tr_solve_upper_triangular	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/solve.rs	/^    pub fn tr_solve_upper_triangular<R2: Dim, C2: Dim, S2>(&self, b: &Matrix<N, R2, C2, S2>)$/;"	f
tr_solve_upper_triangular_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/solve.rs	/^    pub fn tr_solve_upper_triangular_mut<R2: Dim, C2: Dim, S2>(&self, b: &mut Matrix<N, R2, C2, S2>) -> bool$/;"	f
tr_solve_upper_triangular_vector_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/solve.rs	/^    fn tr_solve_upper_triangular_vector_mut<R2: Dim, S2>(&self, b: &mut Vector<N, R2, S2>) -> bool$/;"	f
trace	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn trace(&self) -> N$/;"	f
trailing_zeros	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/int.rs	/^            fn trailing_zeros(self) -> u32 {$/;"	f
trailing_zeros	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/int.rs	/^    fn trailing_zeros(self) -> u32;$/;"	f
transform	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod transform;$/;"	m
transform_alga	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod transform_alga;$/;"	m
transform_alias	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod transform_alias;$/;"	m
transform_construction	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod transform_construction;$/;"	m
transform_conversion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod transform_conversion;$/;"	m
transform_ops	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod transform_ops;$/;"	m
transform_point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/id.rs	/^    fn transform_point(&self, pt: &E) -> E {$/;"	f
transform_point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn transform_point(&self, pt: &E) -> E {$/;"	f
transform_point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn transform_point(&self, pt: &E) -> E;$/;"	f
transform_point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/cg.rs	/^    fn transform_point(&self, pt: &Point<N, DimNameDiff<D, U1>>) -> Point<N, DimNameDiff<D, U1>> {$/;"	f
transform_point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_alga.rs	/^    fn transform_point(&self, pt: &Point<N, D>) -> Point<N, D> {$/;"	f
transform_point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^    fn transform_point(&self, pt: &Point3<N>) -> Point3<N> {$/;"	f
transform_point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    fn transform_point(&self, pt: &Point<N, D>) -> Point<N, D> {$/;"	f
transform_point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_alga.rs	/^    fn transform_point(&self, pt: &Point<N, D>) -> Point<N, D> {$/;"	f
transform_point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform_alga.rs	/^    fn transform_point(&self, pt: &Point<N, D>) -> Point<N, D> {$/;"	f
transform_point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_alga.rs	/^    fn transform_point(&self, pt: &Point<N, D>) -> Point<N, D> {$/;"	f
transform_point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_alga.rs	/^    fn transform_point(&self, pt: &Point2<N>) -> Point2<N> {$/;"	f
transform_vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/id.rs	/^    fn transform_vector(&self, v: &E::Coordinates) -> E::Coordinates {$/;"	f
transform_vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn transform_vector(&self, v: &E::Coordinates) -> E::Coordinates {$/;"	f
transform_vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn transform_vector(&self, v: &E::Coordinates) -> E::Coordinates;$/;"	f
transform_vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/cg.rs	/^    fn transform_vector(&self, v: &VectorN<N, DimNameDiff<D, U1>>) -> VectorN<N, DimNameDiff<D, U1>> {$/;"	f
transform_vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_alga.rs	/^    fn transform_vector(&self, v: &VectorN<N, D>) -> VectorN<N, D> {$/;"	f
transform_vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^    fn transform_vector(&self, v: &Vector3<N>) -> Vector3<N> {$/;"	f
transform_vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    fn transform_vector(&self, v: &VectorN<N, D>) -> VectorN<N, D> {$/;"	f
transform_vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_alga.rs	/^    fn transform_vector(&self, v: &VectorN<N, D>) -> VectorN<N, D> {$/;"	f
transform_vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform_alga.rs	/^    fn transform_vector(&self, v: &VectorN<N, D>) -> VectorN<N, D> {$/;"	f
transform_vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_alga.rs	/^    fn transform_vector(&self, v: &VectorN<N, D>) -> VectorN<N, D> {$/;"	f
transform_vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_alga.rs	/^    fn transform_vector(&self, v: &Vector2<N>) -> Vector2<N> {$/;"	f
transformation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/mod.rs	/^mod transformation;$/;"	m
transformation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/arc_ball.rs	/^    fn transformation(&self) -> Matrix4<f32> {$/;"	f
transformation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/camera.rs	/^    fn transformation(&self) -> Matrix4<f32>;$/;"	f
transformation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^    fn transformation(&self) -> Matrix4<f32> {$/;"	f
transformation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person_stereo.rs	/^    fn transformation(&self) -> Matrix4<f32> {$/;"	f
transformation_eye	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person_stereo.rs	/^    fn transformation_eye(&self, eye: usize) -> Matrix4<f32> {$/;"	f
translate	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^    pub fn translate(&self, t: &Translation3<f32>) -> FirstPerson {$/;"	f
translate_by	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/vector.rs	/^    fn translate_by(&self, t: &Self::Translation) -> Self {$/;"	f
translate_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^    pub fn translate_mut(&mut self, t: &Translation3<f32>) {$/;"	f
translate_point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn translate_point(&self, pt: &E) -> E {$/;"	f
translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/id.rs	/^    fn translation(&self) -> Self::Translation {$/;"	f
translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn translation(&self) -> Self::Translation {$/;"	f
translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn translation(&self) -> Self::Translation;$/;"	f
translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry_alga.rs	/^    fn translation(&self) -> Translation<N, D> {$/;"	f
translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod translation;$/;"	m
translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^    fn translation(&self) -> Id {$/;"	f
translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    fn translation(&self) -> Id {$/;"	f
translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity_alga.rs	/^    fn translation(&self) -> Translation<N, D> {$/;"	f
translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_alga.rs	/^    fn translation(&self) -> Self {$/;"	f
translation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex_alga.rs	/^    fn translation(&self) -> Id {$/;"	f
translation_alga	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod translation_alga;$/;"	m
translation_alias	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod translation_alias;$/;"	m
translation_between	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/transformation.rs	/^    fn translation_between(a: &E, b: &E) -> Option<Self> {$/;"	f
translation_between	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation_alga.rs	/^    fn translation_between(a: &Point<N, D>, b: &Point<N, D>) -> Option<Self> {$/;"	f
translation_construction	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod translation_construction;$/;"	m
translation_conversion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod translation_conversion;$/;"	m
translation_ops	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod translation_ops;$/;"	m
transpose	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/matrix.rs	/^    fn transpose(&self) -> Self::Transpose;$/;"	f
transpose	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn transpose(&self) -> MatrixMN<N, C, R>$/;"	f
transpose	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation.rs	/^    pub fn transpose(&self) -> Rotation<N, D> {$/;"	f
transpose	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    fn transpose(&self) -> Self::Transpose {$/;"	f
transpose_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/matrix.rs	/^    fn transpose_mut(&mut self) {$/;"	f
transpose_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn transpose_mut(&mut self) {$/;"	f
transpose_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation.rs	/^    pub fn transpose_mut(&mut self) {$/;"	f
transpose_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    fn transpose_mut(&mut self) {$/;"	f
transpose_to	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn transpose_to<R2, C2, SB>(&self, out: &mut Matrix<N, R2, C2, SB>)$/;"	f
trash	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gpu_vector.rs	/^    pub fn trash(&self) -> bool {$/;"	f
trunc	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn trunc(self) -> Self {$/;"	f
trunc	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn trunc(self) -> Self;$/;"	f
trunc	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn trunc(self) -> Self {$/;"	f
trunc	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/float.rs	/^    fn trunc(self) -> Self;$/;"	f
trunc	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/real.rs	/^    fn trunc(self) -> Self;$/;"	f
try_convert	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub fn try_convert<From: SupersetOf<To>, To>(t: From) -> Option<To> {$/;"	f
try_convert_ref	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub fn try_convert_ref<From: SupersetOf<To>, To>(t: &From) -> Option<To> {$/;"	f
try_inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/matrix.rs	/^    fn try_inverse(&self) -> Option<Self>;$/;"	f
try_inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    pub fn try_inverse(&self) -> Option<Quaternion<N>> {$/;"	f
try_inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    fn try_inverse(&self) -> Option<Self> {$/;"	f
try_inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^    pub fn try_inverse(self) -> Option<Transform<N, D, C>> {$/;"	f
try_inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub fn try_inverse<M: AlgaSquareMatrix>(m: &M) -> Option<M> {$/;"	f
try_inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/full_piv_lu.rs	/^    pub fn try_inverse(&self) -> Option<MatrixN<N, D>> {$/;"	f
try_inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/inverse.rs	/^    pub fn try_inverse(self) -> Option<MatrixN<N, D>>$/;"	f
try_inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/lu.rs	/^    pub fn try_inverse(&self) -> Option<MatrixN<N, D>> {$/;"	f
try_inverse	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/qr.rs	/^    pub fn try_inverse(&self) -> Option<MatrixN<N, D>> {$/;"	f
try_inverse_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    pub fn try_inverse_mut(&mut self) -> bool {$/;"	f
try_inverse_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation_alga.rs	/^    fn try_inverse_mut(&mut self) -> bool {$/;"	f
try_inverse_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^    pub fn try_inverse_mut(&mut self) -> bool {$/;"	f
try_inverse_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/inverse.rs	/^    pub fn try_inverse_mut(&mut self) -> bool$/;"	f
try_inverse_to	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/lu.rs	/^    pub fn try_inverse_to<S2: StorageMut<N, D, D>>(&self, out: &mut Matrix<N, D, D, S2>) -> bool {$/;"	f
try_invert_to	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/lu.rs	/^pub fn try_invert_to<N: Real, D: Dim, S>(mut matrix: MatrixN<N, D>,$/;"	f
try_new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/unit.rs	/^    pub fn try_new(value: T, min_norm: T::Field) -> Option<Self> {$/;"	f
try_new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/schur.rs	/^    pub fn try_new(m: MatrixN<N, D>, eps: N, max_niter: usize) -> Option<RealSchur<N, D>> {$/;"	f
try_new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/svd.rs	/^    pub fn try_new(mut matrix: MatrixMN<N, R, C>,$/;"	f
try_new	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/symmetric_eigen.rs	/^    pub fn try_new(m: MatrixN<N, D>, eps: N, max_niter: usize) -> Option<Self>$/;"	f
try_new_and_get	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/unit.rs	/^    pub fn try_new_and_get(mut value: T, min_norm: T::Field) -> Option<(Self, T::Field)> {$/;"	f
try_normalize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/vector.rs	/^    fn try_normalize(&self, eps: Self::Field) -> Option<Self>;$/;"	f
try_normalize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn try_normalize(&self, min_norm: N) -> Option<MatrixMN<N, R, C>>$/;"	f
try_normalize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^    fn try_normalize(&self, min_norm: N) -> Option<Self> {$/;"	f
try_normalize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^    fn try_normalize(&self, min_norm: N) -> Option<Self> {$/;"	f
try_normalize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub fn try_normalize<V: NormedSpace>(v: &V, min_norm: V::Field) -> Option<V> {$/;"	f
try_normalize_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/vector.rs	/^    fn try_normalize_mut(&mut self, eps: Self::Field) -> Option<Self::Field>;$/;"	f
try_normalize_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn try_normalize_mut(&mut self, min_norm: N) -> Option<N> {$/;"	f
try_normalize_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_alga.rs	/^    fn try_normalize_mut(&mut self, min_norm: N) -> Option<N> {$/;"	f
try_normalize_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_alga.rs	/^    fn try_normalize_mut(&mut self, min_norm: N) -> Option<N> {$/;"	f
try_real_schur	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/schur.rs	/^    pub fn try_real_schur(self, eps: N, max_niter: usize) -> Option<RealSchur<N, D>> {$/;"	f
try_slerp	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    pub fn try_slerp(&self, other: &UnitQuaternion<N>, t: N, epsilon: N) -> Option<UnitQuaternion<N>> {$/;"	f
try_svd	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/svd.rs	/^    pub fn try_svd(self, compute_u: bool, compute_v: bool, eps: N, max_niter: usize) -> Option<SVD<N, R, C>> {$/;"	f
try_symmetric_eigen	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/symmetric_eigen.rs	/^    pub fn try_symmetric_eigen(self, eps: N, max_niter: usize) -> Option<SymmetricEigen<N, D>> {$/;"	f
try_to_usize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^            fn try_to_usize() -> Option<usize> {$/;"	f
try_to_usize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^    fn try_to_usize() -> Option<usize> {$/;"	f
try_to_usize	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^    fn try_to_usize() -> Option<usize>;$/;"	f
two_operators	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/mod.rs	/^mod two_operators;$/;"	m
two_pi	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^            fn two_pi() -> Self {$/;"	f
two_pi	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/real.rs	/^    fn two_pi() -> Self;$/;"	f
types	/home/berger/playground/rust/slam/slam-rs/src/base/mod.rs	/^pub mod types;$/;"	m
u	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/bidiagonal.rs	/^    pub fn u(&self) -> MatrixMN<N, R, DimMinimum<R, C>>$/;"	f
u	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/full_piv_lu.rs	/^    pub fn u(&self) -> MatrixMN<N, DimMinimum<R, C>, C>$/;"	f
u	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/lu.rs	/^    pub fn u(&self) -> MatrixMN<N, DimMinimum<R, C>, C>$/;"	f
ulps_eq	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^    fn ulps_eq(&self, _: &Self, _: Self::Epsilon, _: u32) -> bool {$/;"	f
ulps_eq	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/wrapper.rs	/^    fn ulps_eq(&self, other: &Self, epsilon: Self::Epsilon, max_ulps: u32) -> bool {$/;"	f
ulps_eq	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    fn ulps_eq(&self, other: &Self, epsilon: Self::Epsilon, max_ulps: u32) -> bool {$/;"	f
ulps_eq	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/isometry.rs	/^    fn ulps_eq(&self, other: &Self, epsilon: Self::Epsilon, max_ulps: u32) -> bool {$/;"	f
ulps_eq	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/point.rs	/^    fn ulps_eq(&self, other: &Self, epsilon: Self::Epsilon, max_ulps: u32) -> bool {$/;"	f
ulps_eq	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    fn ulps_eq(&self, other: &Self, epsilon: Self::Epsilon, max_ulps: u32) -> bool {$/;"	f
ulps_eq	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation.rs	/^    fn ulps_eq(&self, other: &Self, epsilon: Self::Epsilon, max_ulps: u32) -> bool {$/;"	f
ulps_eq	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/similarity.rs	/^    fn ulps_eq(&self, other: &Self, epsilon: Self::Epsilon, max_ulps: u32) -> bool {$/;"	f
ulps_eq	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/translation.rs	/^    fn ulps_eq(&self, other: &Self, epsilon: Self::Epsilon, max_ulps: u32) -> bool {$/;"	f
ulps_eq	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/unit_complex.rs	/^    fn ulps_eq(&self, other: &Self, epsilon: Self::Epsilon, max_ulps: u32) -> bool {$/;"	f
unbalance	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/balancing.rs	/^pub fn unbalance<N: Real, D: Dim>(m: &mut MatrixN<N, D>, d: &VectorN<N, D>)$/;"	f
unbind	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gpu_vector.rs	/^    pub fn unbind(&mut self) {$/;"	f
unbind	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/mesh.rs	/^    pub fn unbind(&self) {$/;"	f
unbind_movement_keys	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^    pub fn unbind_movement_keys(&mut self) {$/;"	f
uncertainty_type	/home/berger/playground/rust/slam/slam-rs/src/geometry/poses.rs	/^    fn uncertainty_type() -> UncertaintyType {$/;"	f
unit	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/mod.rs	/^mod unit;$/;"	m
unit_complex	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod unit_complex;$/;"	m
unit_complex_alga	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod unit_complex_alga;$/;"	m
unit_complex_construction	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod unit_complex_construction;$/;"	m
unit_complex_conversion	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod unit_complex_conversion;$/;"	m
unit_complex_ops	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/mod.rs	/^mod unit_complex_ops;$/;"	m
unlink	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn unlink(&mut self) {$/;"	f
unload_from_gpu	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gpu_vector.rs	/^    pub fn unload_from_gpu(&mut self) {$/;"	f
unload_from_ram	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gpu_vector.rs	/^    pub fn unload_from_ram(&mut self) {$/;"	f
unpack	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/bidiagonal.rs	/^    pub fn unpack(self) -> (MatrixMN<N, R, DimMinimum<R, C>>,$/;"	f
unpack	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/cholesky.rs	/^    pub fn unpack(mut self) -> MatrixN<N, D> {$/;"	f
unpack	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/full_piv_lu.rs	/^    pub fn unpack(self) -> (PermutationSequence<DimMinimum<R, C>>,$/;"	f
unpack	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/hessenberg.rs	/^    pub fn unpack(self) -> (MatrixN<N, D>, MatrixN<N, D>)$/;"	f
unpack	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/lu.rs	/^    pub fn unpack(self) -> (PermutationSequence<DimMinimum<R, C>>,$/;"	f
unpack	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/qr.rs	/^    pub fn unpack(self) -> (MatrixMN<N, R, DimMinimum<R, C>>, MatrixMN<N, DimMinimum<R, C>, C>)$/;"	f
unpack	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/schur.rs	/^    pub fn unpack(self) -> (MatrixN<N, D>, MatrixN<N, D>) {$/;"	f
unpack	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/symmetric_tridiagonal.rs	/^    pub fn unpack(self) -> (MatrixN<N, D>, VectorN<N, D>, VectorN<N, DimDiff<D, U1>>)$/;"	f
unpack_dirty	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/cholesky.rs	/^    pub fn unpack_dirty(self) -> MatrixN<N, D> {$/;"	f
unpack_h	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/hessenberg.rs	/^    pub fn unpack_h(mut self) -> MatrixN<N, D>$/;"	f
unpack_r	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/qr.rs	/^    pub fn unpack_r(self) -> MatrixMN<N, DimMinimum<R, C>, C>$/;"	f
unpack_tridiagonal	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/symmetric_tridiagonal.rs	/^    pub fn unpack_tridiagonal(self) -> (VectorN<N, D>, VectorN<N, DimDiff<D, U1>>)$/;"	f
unproject	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/camera.rs	/^    fn unproject(&self, window_coord: &Point2<f32>, size: &Vector2<f32>) -> (Point3<f32>, Vector3<f32>) {$/;"	f
unproject_point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/orthographic.rs	/^    pub fn unproject_point(&self, p: &Point3<N>) -> Point3<N> {$/;"	f
unproject_point	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/perspective.rs	/^    pub fn unproject_point(&self, p: &Point3<N>) -> Point3<N> {$/;"	f
unsigned_shl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/int.rs	/^            fn unsigned_shl(self, n: u32) -> Self {$/;"	f
unsigned_shl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/int.rs	/^    fn unsigned_shl(self, n: u32) -> Self;$/;"	f
unsigned_shr	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/int.rs	/^            fn unsigned_shr(self, n: u32) -> Self {$/;"	f
unsigned_shr	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/int.rs	/^    fn unsigned_shr(self, n: u32) -> Self;$/;"	f
unsigned_wrapping_is_unsigned	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/sign.rs	/^fn unsigned_wrapping_is_unsigned() {$/;"	f
unwrap	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/unit.rs	/^    pub fn unwrap(self) -> T {$/;"	f
unwrap	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/debug/random_orthogonal.rs	/^    pub fn unwrap(self) -> MatrixN<N, D> {$/;"	f
unwrap	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/debug/random_sdp.rs	/^    pub fn unwrap(self) -> MatrixN<N, D> {$/;"	f
unwrap	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/orthographic.rs	/^    pub fn unwrap(self) -> Matrix4<N> {$/;"	f
unwrap	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/perspective.rs	/^    pub fn unwrap(self) -> Matrix4<N> {$/;"	f
unwrap	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/rotation.rs	/^    pub fn unwrap(self) -> MatrixN<N, D> {$/;"	f
unwrap	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/transform.rs	/^    pub fn unwrap(self) -> MatrixN<N, DimNameSum<D, U1>> {$/;"	f
up_key	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^    pub fn up_key(&self) -> Option<Key> {$/;"	f
update	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/arc_ball.rs	/^    fn update(&mut self, _: &glfw::Window) { }$/;"	f
update	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/camera.rs	/^    fn update(&mut self, window: &glfw::Window);$/;"	f
update	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^    fn update(&mut self, window: &glfw::Window) {$/;"	f
update	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person_stereo.rs	/^    fn update(&mut self, window: &glfw::Window) {$/;"	f
update	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/grayscales.rs	/^    fn update(&mut self, _: f32, _: f32, _: f32, _: f32, _: f32) {$/;"	f
update	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/oculus_stereo.rs	/^    fn update(&mut self, _: f32, w: f32, h: f32, _: f32, _: f32) {$/;"	f
update	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/post_processing_effect.rs	/^    fn update(&mut self, dt: f32, w: f32, h: f32, znear: f32, zfar: f32);$/;"	f
update	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/sobel_edge_highlight.rs	/^    fn update(&mut self, _: f32, w: f32, h: f32, znear: f32, zfar: f32) {$/;"	f
update	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/waves.rs	/^    fn update(&mut self, dt: f32, _: f32, _: f32, _: f32, _: f32) {$/;"	f
update	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    fn update(&mut self) {$/;"	f
update_buffer	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gpu_vector.rs	/^pub fn update_buffer<T: GLPrimitive>(buf:                 &[T],$/;"	f
update_eyes_location	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person_stereo.rs	/^    fn update_eyes_location(&mut self) {$/;"	f
update_projviews	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/arc_ball.rs	/^    fn update_projviews(&mut self) {$/;"	f
update_projviews	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^    fn update_projviews(&mut self) {$/;"	f
update_projviews	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person_stereo.rs	/^    fn update_projviews(&mut self) {$/;"	f
update_restrictions	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/arc_ball.rs	/^    fn update_restrictions(&mut self) {$/;"	f
update_restrictions	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^    fn update_restrictions(&mut self) {$/;"	f
update_restrictions	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person_stereo.rs	/^    fn update_restrictions(&mut self) {$/;"	f
update_viewport	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    fn update_viewport(&mut self, w: f32, h: f32) {$/;"	f
upload	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/camera.rs	/^    fn upload(&self, _pass: usize, uniform: &mut ShaderUniform<Matrix4<f32>>) {$/;"	f
upload	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person_stereo.rs	/^    fn upload(&self, pass: usize, uniform: &mut ShaderUniform<Matrix4<f32>>) {$/;"	f
upload	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn upload(&self, location: GLuint) {$/;"	f
upload	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gl_primitive.rs	/^    fn upload(&self, location: GLuint);$/;"	f
upload	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/shader.rs	/^    pub fn upload(&mut self, value: &T) {$/;"	f
upload_buffer	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/gpu_vector.rs	/^pub fn upload_buffer<T: GLPrimitive>(buf:             &[T],$/;"	f
upper_triangle	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/edition.rs	/^    pub fn upper_triangle(&self) -> MatrixMN<N, R, C>$/;"	f
use_program	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/shader.rs	/^    pub fn use_program(&mut self) {$/;"	f
user_data	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/object.rs	/^    pub fn user_data(&self) -> &Any {$/;"	f
uv_internal	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/bidiagonal.rs	/^    pub fn uv_internal(&self) -> &MatrixMN<N, R, C> {$/;"	f
uvs	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/resource/mesh.rs	/^    pub fn uvs(&self) -> &Arc<RwLock<GPUVec<Point2<GLfloat>>>> {$/;"	f
uvs_material	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/builtin/mod.rs	/^mod uvs_material;$/;"	m
v_t	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/bidiagonal.rs	/^    pub fn v_t(&self) -> MatrixMN<N, DimMinimum<R, C>, C>$/;"	f
val_width	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^        fn val_width<N: Scalar + fmt::Display>(val: N, f: &mut fmt::Formatter) -> usize {$/;"	f
value	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^            fn value(&self) -> usize {$/;"	f
value	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^    fn value(&self) -> usize {$/;"	f
value	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/dimension.rs	/^    fn value(&self) -> usize;$/;"	f
vec2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/oculus_stereo.rs	/^const vec2 LensCenterLeft = vec2(0.25, 0.5);$/;"	c
vec2	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/oculus_stereo.rs	/^const vec2 LensCenterRight = vec2(0.75, 0.5);$/;"	c
vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/linear/mod.rs	/^mod vector;$/;"	m
vector	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    pub fn vector(&self) -> MatrixSlice<N, U3, U1, RStride<N, U4, U1>, CStride<N, U4, U1>> {$/;"	f
vector_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion.rs	/^    pub fn vector_mut(&mut self) -> MatrixSliceMut<N, U3, U1, RStride<N, U4, U1>, CStride<N, U4, U1>> {$/;"	f
vector_to_matrix_index	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn vector_to_matrix_index(&self, i: usize) -> (usize, usize) {$/;"	f
verify	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/error.rs	/^macro_rules! verify($/;"	d
vflip	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/tools/kiss3d_recording.rs	/^fn vflip(vec: &mut [u8], width: usize, height: usize) {$/;"	f
vget_unchecked	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub unsafe fn vget_unchecked(&self, i: usize) -> &N {$/;"	f
vget_unchecked_mut	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub unsafe fn vget_unchecked_mut(&mut self, i: usize) -> &mut N {$/;"	f
view_transform	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/arc_ball.rs	/^    fn view_transform(&self) -> Isometry3<f32> {$/;"	f
view_transform	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/camera.rs	/^    fn view_transform(&self) -> Isometry3<f32>;$/;"	f
view_transform	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^    fn view_transform(&self) -> Isometry3<f32> {$/;"	f
view_transform	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person_stereo.rs	/^    fn view_transform(&self) -> Isometry3<f32> {$/;"	f
view_transform_left	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person_stereo.rs	/^    fn view_transform_left(&self) -> Isometry3<f32> {$/;"	f
view_transform_right	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person_stereo.rs	/^    fn view_transform_right(&self) -> Isometry3<f32> {$/;"	f
visit_seq	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix_array.rs	/^    fn visit_seq<V>(self, mut visitor: V) -> Result<MatrixArray<N, R, C>, V::Error>$/;"	f
visualise_graph	/home/berger/playground/rust/slam/slam-rs/src/graphs/mod.rs	/^    fn visualise_graph(&self) {}$/;"	f
w	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^    pub fn w() -> Self$/;"	f
w_axis	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^    pub fn w_axis() -> Unit<Self>$/;"	f
warn	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/loader/obj.rs	/^fn warn(line: usize, err: &str) {$/;"	f
waves	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/post_processing/mod.rs	/^mod waves;$/;"	m
width	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/window.rs	/^    pub fn width(&self) -> f32 {$/;"	f
wilkinson_shift	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/symmetric_eigen.rs	/^pub fn wilkinson_shift<N: Real>(tmm: N, tnn: N, tmn: N) -> N {$/;"	f
wilkinson_shift_random	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/symmetric_eigen.rs	/^    fn wilkinson_shift_random() {$/;"	f
wilkinson_shift_zero	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/symmetric_eigen.rs	/^    fn wilkinson_shift_zero() {$/;"	f
wilkinson_shift_zero_det	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/symmetric_eigen.rs	/^    fn wilkinson_shift_zero_det() {$/;"	f
wilkinson_shift_zero_diag_diff_and_zero_off_diagonal	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/symmetric_eigen.rs	/^    fn wilkinson_shift_zero_diag_diff_and_zero_off_diagonal() {$/;"	f
wilkinson_shift_zero_diagonal	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/symmetric_eigen.rs	/^    fn wilkinson_shift_zero_diagonal() {$/;"	f
wilkinson_shift_zero_off_diagonal	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/symmetric_eigen.rs	/^    fn wilkinson_shift_zero_off_diagonal() {$/;"	f
wilkinson_shift_zero_trace	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/linalg/symmetric_eigen.rs	/^    fn wilkinson_shift_zero_trace() {$/;"	f
window	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/lib.rs	/^pub mod window;$/;"	m
window	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/window/mod.rs	/^mod window;$/;"	m
world_transformation	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/scene/scene_node.rs	/^    pub fn world_transformation(&self) -> Isometry3<f32> {$/;"	f
wrap	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub fn wrap<T>(mut val: T, min: T, max: T) -> T$/;"	f
wrapper	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/mod.rs	/^pub mod wrapper;$/;"	m
wrapping	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/mod.rs	/^pub mod wrapping;$/;"	m
wrapping_add	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/wrapping.rs	/^    fn wrapping_add(&self, v: &Self) -> Self {$/;"	f
wrapping_add	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/wrapping.rs	/^    fn wrapping_add(&self, v: &Self) -> Self;$/;"	f
wrapping_add	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/wrapping.rs	/^    fn wrapping_add<T: WrappingAdd>(a: T, b: T) -> T { a.wrapping_add(&b) }$/;"	f
wrapping_bounded	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/bounds.rs	/^fn wrapping_bounded() {$/;"	f
wrapping_bounded_i128	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/bounds.rs	/^fn wrapping_bounded_i128() {$/;"	f
wrapping_from_str_radix	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^fn wrapping_from_str_radix() {$/;"	f
wrapping_identities	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/identities.rs	/^fn wrapping_identities() {$/;"	f
wrapping_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/wrapping.rs	/^macro_rules! wrapping_impl {$/;"	d
wrapping_is_bounded	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/bounds.rs	/^fn wrapping_is_bounded() {$/;"	f
wrapping_is_num	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/lib.rs	/^fn wrapping_is_num() {$/;"	f
wrapping_is_one	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/identities.rs	/^fn wrapping_is_one() {$/;"	f
wrapping_is_wrappingadd	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/wrapping.rs	/^fn wrapping_is_wrappingadd() {$/;"	f
wrapping_is_wrappingmul	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/wrapping.rs	/^fn wrapping_is_wrappingmul() {$/;"	f
wrapping_is_wrappingsub	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/wrapping.rs	/^fn wrapping_is_wrappingsub() {$/;"	f
wrapping_is_zero	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/identities.rs	/^fn wrapping_is_zero() {$/;"	f
wrapping_mul	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/wrapping.rs	/^    fn wrapping_mul(&self, v: &Self) -> Self {$/;"	f
wrapping_mul	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/wrapping.rs	/^    fn wrapping_mul(&self, v: &Self) -> Self;$/;"	f
wrapping_mul	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/wrapping.rs	/^    fn wrapping_mul<T: WrappingMul>(a: T, b: T) -> T { a.wrapping_mul(&b) }$/;"	f
wrapping_sub	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/wrapping.rs	/^    fn wrapping_sub(&self, v: &Self) -> Self {$/;"	f
wrapping_sub	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/wrapping.rs	/^    fn wrapping_sub(&self, v: &Self) -> Self;$/;"	f
wrapping_sub	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/ops/wrapping.rs	/^    fn wrapping_sub<T: WrappingSub>(a: T, b: T) -> T { a.wrapping_sub(&b) }$/;"	f
x	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^    pub fn x() -> Self$/;"	f
x_axis	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^    pub fn x_axis() -> Unit<Self>$/;"	f
y	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^    pub fn y() -> Self$/;"	f
y_axis	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^    pub fn y_axis() -> Unit<Self>$/;"	f
yaw	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/arc_ball.rs	/^    pub fn yaw(&self) -> f32 {$/;"	f
yaw_step	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/kiss3d-0.12.0/src/camera/first_person.rs	/^    pub fn yaw_step(&self) -> f32 {$/;"	f
z	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^    pub fn z() -> Self$/;"	f
z_axis	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^    pub fn z_axis() -> Unit<Self>$/;"	f
zero	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.4/src/general/identity.rs	/^    fn zero() -> Id {$/;"	f
zero	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^    fn zero() -> Self {$/;"	f
zero	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/quaternion_construction.rs	/^    fn zero() -> Self {$/;"	f
zero	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/lib.rs	/^pub fn zero<T: Identity<Additive>>() -> T {$/;"	f
zero	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/identities.rs	/^            fn zero() -> $t { $v }$/;"	f
zero	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/identities.rs	/^    fn zero() -> Self {$/;"	f
zero	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/identities.rs	/^    fn zero() -> Self;$/;"	f
zero_impl	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.5/src/identities.rs	/^macro_rules! zero_impl {$/;"	d
zeros	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^            pub fn zeros($($args: usize),*) -> Self$/;"	f
zeros_generic	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/construction.rs	/^    pub fn zeros_generic(nrows: R, ncols: C) -> Self$/;"	f
zfar	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/orthographic.rs	/^    pub fn zfar(&self) -> N {$/;"	f
zfar	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/perspective.rs	/^    pub fn zfar(&self) -> N {$/;"	f
zip_map	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/core/matrix.rs	/^    pub fn zip_map<N2, N3, S2, F>(&self, rhs: &Matrix<N2, R, C, S2>, mut f: F) -> MatrixMN<N3, R, C>$/;"	f
znear	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/orthographic.rs	/^    pub fn znear(&self) -> N {$/;"	f
znear	/home/berger/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.13.1/src/geometry/perspective.rs	/^    pub fn znear(&self) -> N {$/;"	f
